[{
 "configuration": {
  "provider_config": {
   "aws": {
    "expressions": {
     "region": {
      "references": [
       "var.region"
      ]
     }
    },
    "full_name": "registry.terraform.io/hashicorp/aws",
    "name": "aws"
   },
   "helm": {
    "full_name": "registry.terraform.io/hashicorp/helm",
    "name": "helm",
    "version_constraint": "\u003e= 2.6.0"
   },
   "kubectl": {
    "full_name": "registry.terraform.io/gavinbunney/kubectl",
    "name": "kubectl",
    "version_constraint": "\u003e= 1.14.0"
   },
   "module.eks.module.eks_managed_node_group.module.user_data:cloudinit": {
    "full_name": "registry.terraform.io/hashicorp/cloudinit",
    "module_address": "module.eks.module.eks_managed_node_group.module.user_data",
    "name": "cloudinit",
    "version_constraint": "\u003e= 2.0.0"
   },
   "module.eks.module.self_managed_node_group.module.user_data:cloudinit": {
    "full_name": "registry.terraform.io/hashicorp/cloudinit",
    "module_address": "module.eks.module.self_managed_node_group.module.user_data",
    "name": "cloudinit",
    "version_constraint": "\u003e= 2.0.0"
   },
   "module.eks:kubernetes": {
    "full_name": "registry.terraform.io/hashicorp/kubernetes",
    "module_address": "module.eks",
    "name": "kubernetes",
    "version_constraint": "\u003e= 2.10.0"
   },
   "module.eks:time": {
    "full_name": "registry.terraform.io/hashicorp/time",
    "module_address": "module.eks",
    "name": "time",
    "version_constraint": "\u003e= 0.9.0"
   },
   "module.eks:tls": {
    "full_name": "registry.terraform.io/hashicorp/tls",
    "module_address": "module.eks",
    "name": "tls",
    "version_constraint": "\u003e= 3.0.0"
   }
  },
  "root_module": {
   "module_calls": {
    "eks": {
     "expressions": {
      "cluster_name": {
       "references": [
        "var.cluster_name"
       ]
      },
      "cluster_version": {
       "constant_value": "1.28"
      },
      "eks_managed_node_group_defaults": {
       "constant_value": {
        "ami_type": "AL2_x86_64",
        "attach_cluster_primary_security_group": false,
        "instance_types": [
         "t2.micro"
        ]
       }
      },
      "eks_managed_node_groups": {
       "constant_value": {
        "ng1": {
         "capacity_type": "ON_DEMAND",
         "desired_capacity": 2,
         "instance_types": [
          "t2.micro"
         ],
         "max_capacity": 2,
         "min_capacity": 1,
         "tags": {
          "Name": "ng1"
         }
        }
       }
      },
      "subnet_ids": {
       "references": [
        "aws_subnet.private_subnet"
       ]
      },
      "vpc_id": {
       "references": [
        "aws_vpc.vpc.id",
        "aws_vpc.vpc"
       ]
      }
     },
     "module": {
      "module_calls": {
       "eks_managed_node_group": {
        "expressions": {
         "ami_id": {
          "references": [
           "each.value.ami_id",
           "each.value",
           "var.eks_managed_node_group_defaults.ami_id",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "ami_release_version": {
          "references": [
           "each.value.ami_release_version",
           "each.value",
           "var.eks_managed_node_group_defaults.ami_release_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "ami_type": {
          "references": [
           "each.value.ami_type",
           "each.value",
           "var.eks_managed_node_group_defaults.ami_type",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "block_device_mappings": {
          "references": [
           "each.value.block_device_mappings",
           "each.value",
           "var.eks_managed_node_group_defaults.block_device_mappings",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "bootstrap_extra_args": {
          "references": [
           "each.value.bootstrap_extra_args",
           "each.value",
           "var.eks_managed_node_group_defaults.bootstrap_extra_args",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "capacity_reservation_specification": {
          "references": [
           "each.value.capacity_reservation_specification",
           "each.value",
           "var.eks_managed_node_group_defaults.capacity_reservation_specification",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "capacity_type": {
          "references": [
           "each.value.capacity_type",
           "each.value",
           "var.eks_managed_node_group_defaults.capacity_type",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "cluster_auth_base64": {
          "references": [
           "time_sleep.this[0].triggers[\"cluster_certificate_authority_data\"]",
           "time_sleep.this[0].triggers",
           "time_sleep.this[0]",
           "time_sleep.this"
          ]
         },
         "cluster_endpoint": {
          "references": [
           "time_sleep.this[0].triggers[\"cluster_endpoint\"]",
           "time_sleep.this[0].triggers",
           "time_sleep.this[0]",
           "time_sleep.this"
          ]
         },
         "cluster_ip_family": {
          "references": [
           "var.cluster_ip_family"
          ]
         },
         "cluster_name": {
          "references": [
           "time_sleep.this[0].triggers[\"cluster_name\"]",
           "time_sleep.this[0].triggers",
           "time_sleep.this[0]",
           "time_sleep.this"
          ]
         },
         "cluster_primary_security_group_id": {
          "references": [
           "each.value.attach_cluster_primary_security_group",
           "each.value",
           "var.eks_managed_node_group_defaults.attach_cluster_primary_security_group",
           "var.eks_managed_node_group_defaults",
           "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
           "aws_eks_cluster.this[0].vpc_config[0]",
           "aws_eks_cluster.this[0].vpc_config",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_service_ipv4_cidr": {
          "references": [
           "var.cluster_service_ipv4_cidr"
          ]
         },
         "cluster_version": {
          "references": [
           "each.value.cluster_version",
           "each.value",
           "var.eks_managed_node_group_defaults.cluster_version",
           "var.eks_managed_node_group_defaults",
           "time_sleep.this[0].triggers[\"cluster_version\"]",
           "time_sleep.this[0].triggers",
           "time_sleep.this[0]",
           "time_sleep.this"
          ]
         },
         "cpu_options": {
          "references": [
           "each.value.cpu_options",
           "each.value",
           "var.eks_managed_node_group_defaults.cpu_options",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "create": {
          "references": [
           "each.value.create",
           "each.value"
          ]
         },
         "create_iam_role": {
          "references": [
           "each.value.create_iam_role",
           "each.value",
           "var.eks_managed_node_group_defaults.create_iam_role",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "create_launch_template": {
          "references": [
           "each.value.create_launch_template",
           "each.value",
           "var.eks_managed_node_group_defaults.create_launch_template",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "create_schedule": {
          "references": [
           "each.value.create_schedule",
           "each.value",
           "var.eks_managed_node_group_defaults.create_schedule",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "credit_specification": {
          "references": [
           "each.value.credit_specification",
           "each.value",
           "var.eks_managed_node_group_defaults.credit_specification",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "desired_size": {
          "references": [
           "each.value.desired_size",
           "each.value",
           "var.eks_managed_node_group_defaults.desired_size",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "disable_api_termination": {
          "references": [
           "each.value.disable_api_termination",
           "each.value",
           "var.eks_managed_node_group_defaults.disable_api_termination",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "disk_size": {
          "references": [
           "each.value.disk_size",
           "each.value",
           "var.eks_managed_node_group_defaults.disk_size",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "ebs_optimized": {
          "references": [
           "each.value.ebs_optimized",
           "each.value",
           "var.eks_managed_node_group_defaults.ebs_optimized",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "elastic_gpu_specifications": {
          "references": [
           "each.value.elastic_gpu_specifications",
           "each.value",
           "var.eks_managed_node_group_defaults.elastic_gpu_specifications",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "elastic_inference_accelerator": {
          "references": [
           "each.value.elastic_inference_accelerator",
           "each.value",
           "var.eks_managed_node_group_defaults.elastic_inference_accelerator",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "enable_bootstrap_user_data": {
          "references": [
           "each.value.enable_bootstrap_user_data",
           "each.value",
           "var.eks_managed_node_group_defaults.enable_bootstrap_user_data",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "enable_monitoring": {
          "references": [
           "each.value.enable_monitoring",
           "each.value",
           "var.eks_managed_node_group_defaults.enable_monitoring",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "enclave_options": {
          "references": [
           "each.value.enclave_options",
           "each.value",
           "var.eks_managed_node_group_defaults.enclave_options",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "force_update_version": {
          "references": [
           "each.value.force_update_version",
           "each.value",
           "var.eks_managed_node_group_defaults.force_update_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_additional_policies": {
          "references": [
           "each.value",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_arn": {
          "references": [
           "each.value.iam_role_arn",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_arn",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_attach_cni_policy": {
          "references": [
           "each.value.iam_role_attach_cni_policy",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_attach_cni_policy",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_description": {
          "references": [
           "each.value.iam_role_description",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_description",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_name": {
          "references": [
           "each.value.iam_role_name",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_name",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_path": {
          "references": [
           "each.value.iam_role_path",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_path",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_permissions_boundary": {
          "references": [
           "each.value.iam_role_permissions_boundary",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_permissions_boundary",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_tags": {
          "references": [
           "each.value.iam_role_tags",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_tags",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_use_name_prefix": {
          "references": [
           "each.value.iam_role_use_name_prefix",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_use_name_prefix",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "instance_market_options": {
          "references": [
           "each.value.instance_market_options",
           "each.value",
           "var.eks_managed_node_group_defaults.instance_market_options",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "instance_types": {
          "references": [
           "each.value.instance_types",
           "each.value",
           "var.eks_managed_node_group_defaults.instance_types",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "kernel_id": {
          "references": [
           "each.value.kernel_id",
           "each.value",
           "var.eks_managed_node_group_defaults.kernel_id",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "key_name": {
          "references": [
           "each.value.key_name",
           "each.value",
           "var.eks_managed_node_group_defaults.key_name",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "labels": {
          "references": [
           "each.value.labels",
           "each.value",
           "var.eks_managed_node_group_defaults.labels",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "launch_template_default_version": {
          "references": [
           "each.value.launch_template_default_version",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_default_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "launch_template_description": {
          "references": [
           "each.value.launch_template_description",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_description",
           "var.eks_managed_node_group_defaults",
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "launch_template_id": {
          "references": [
           "each.value.launch_template_id",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_id",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "launch_template_name": {
          "references": [
           "each.value.launch_template_name",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_name",
           "var.eks_managed_node_group_defaults",
           "each.key"
          ]
         },
         "launch_template_tags": {
          "references": [
           "each.value.launch_template_tags",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_tags",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "launch_template_use_name_prefix": {
          "references": [
           "each.value.launch_template_use_name_prefix",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_use_name_prefix",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "launch_template_version": {
          "references": [
           "each.value.launch_template_version",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "license_specifications": {
          "references": [
           "each.value.license_specifications",
           "each.value",
           "var.eks_managed_node_group_defaults.license_specifications",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "maintenance_options": {
          "references": [
           "each.value.maintenance_options",
           "each.value",
           "var.eks_managed_node_group_defaults.maintenance_options",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "max_size": {
          "references": [
           "each.value.max_size",
           "each.value",
           "var.eks_managed_node_group_defaults.max_size",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "metadata_options": {
          "references": [
           "each.value.metadata_options",
           "each.value",
           "var.eks_managed_node_group_defaults.metadata_options",
           "var.eks_managed_node_group_defaults",
           "local.metadata_options"
          ]
         },
         "min_size": {
          "references": [
           "each.value.min_size",
           "each.value",
           "var.eks_managed_node_group_defaults.min_size",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "name": {
          "references": [
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "network_interfaces": {
          "references": [
           "each.value.network_interfaces",
           "each.value",
           "var.eks_managed_node_group_defaults.network_interfaces",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "placement": {
          "references": [
           "each.value.placement",
           "each.value",
           "var.eks_managed_node_group_defaults.placement",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "platform": {
          "references": [
           "each.value.platform",
           "each.value",
           "var.eks_managed_node_group_defaults.platform",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "post_bootstrap_user_data": {
          "references": [
           "each.value.post_bootstrap_user_data",
           "each.value",
           "var.eks_managed_node_group_defaults.post_bootstrap_user_data",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "pre_bootstrap_user_data": {
          "references": [
           "each.value.pre_bootstrap_user_data",
           "each.value",
           "var.eks_managed_node_group_defaults.pre_bootstrap_user_data",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "private_dns_name_options": {
          "references": [
           "each.value.private_dns_name_options",
           "each.value",
           "var.eks_managed_node_group_defaults.private_dns_name_options",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "ram_disk_id": {
          "references": [
           "each.value.ram_disk_id",
           "each.value",
           "var.eks_managed_node_group_defaults.ram_disk_id",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "remote_access": {
          "references": [
           "each.value.remote_access",
           "each.value",
           "var.eks_managed_node_group_defaults.remote_access",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "schedules": {
          "references": [
           "each.value.schedules",
           "each.value",
           "var.eks_managed_node_group_defaults.schedules",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "subnet_ids": {
          "references": [
           "each.value.subnet_ids",
           "each.value",
           "var.eks_managed_node_group_defaults.subnet_ids",
           "var.eks_managed_node_group_defaults",
           "var.subnet_ids"
          ]
         },
         "tag_specifications": {
          "references": [
           "each.value.tag_specifications",
           "each.value",
           "var.eks_managed_node_group_defaults.tag_specifications",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "each.value.tags",
           "each.value",
           "var.eks_managed_node_group_defaults.tags",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "taints": {
          "references": [
           "each.value.taints",
           "each.value",
           "var.eks_managed_node_group_defaults.taints",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "timeouts": {
          "references": [
           "each.value.timeouts",
           "each.value",
           "var.eks_managed_node_group_defaults.timeouts",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "update_config": {
          "references": [
           "each.value.update_config",
           "each.value",
           "var.eks_managed_node_group_defaults.update_config",
           "var.eks_managed_node_group_defaults",
           "local.default_update_config"
          ]
         },
         "update_launch_template_default_version": {
          "references": [
           "each.value.update_launch_template_default_version",
           "each.value",
           "var.eks_managed_node_group_defaults.update_launch_template_default_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "use_custom_launch_template": {
          "references": [
           "each.value.use_custom_launch_template",
           "each.value",
           "var.eks_managed_node_group_defaults.use_custom_launch_template",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "use_name_prefix": {
          "references": [
           "each.value.use_name_prefix",
           "each.value",
           "var.eks_managed_node_group_defaults.use_name_prefix",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "user_data_template_path": {
          "references": [
           "each.value.user_data_template_path",
           "each.value",
           "var.eks_managed_node_group_defaults.user_data_template_path",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "vpc_security_group_ids": {
          "references": [
           "local.node_security_group_id",
           "each.value.vpc_security_group_ids",
           "each.value",
           "var.eks_managed_node_group_defaults.vpc_security_group_ids",
           "var.eks_managed_node_group_defaults"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.eks_managed_node_groups",
          "var.create",
          "local.create_outposts_local_cluster"
         ]
        },
        "module": {
         "module_calls": {
          "user_data": {
           "expressions": {
            "bootstrap_extra_args": {
             "references": [
              "var.bootstrap_extra_args"
             ]
            },
            "cluster_auth_base64": {
             "references": [
              "var.cluster_auth_base64"
             ]
            },
            "cluster_endpoint": {
             "references": [
              "var.cluster_endpoint"
             ]
            },
            "cluster_name": {
             "references": [
              "var.cluster_name"
             ]
            },
            "cluster_service_ipv4_cidr": {
             "references": [
              "var.cluster_service_ipv4_cidr"
             ]
            },
            "create": {
             "references": [
              "var.create"
             ]
            },
            "enable_bootstrap_user_data": {
             "references": [
              "var.enable_bootstrap_user_data"
             ]
            },
            "platform": {
             "references": [
              "var.platform"
             ]
            },
            "post_bootstrap_user_data": {
             "references": [
              "var.post_bootstrap_user_data"
             ]
            },
            "pre_bootstrap_user_data": {
             "references": [
              "var.pre_bootstrap_user_data"
             ]
            },
            "user_data_template_path": {
             "references": [
              "var.user_data_template_path"
             ]
            }
           },
           "module": {
            "outputs": {
             "user_data": {
              "description": "Base64 encoded user data rendered for the provided inputs",
              "expression": {
               "references": [
                "local.platform",
                "var.platform"
               ]
              }
             }
            },
            "resources": [
             {
              "address": "data.cloudinit_config.linux_eks_managed_node_group",
              "count_expression": {
               "references": [
                "var.create",
                "var.platform",
                "var.is_eks_managed_node_group",
                "var.enable_bootstrap_user_data",
                "var.pre_bootstrap_user_data",
                "var.user_data_template_path"
               ]
              },
              "expressions": {
               "base64_encode": {
                "constant_value": true
               },
               "boundary": {
                "constant_value": "//"
               },
               "gzip": {
                "constant_value": false
               },
               "part": [
                {
                 "content": {
                  "references": [
                   "var.pre_bootstrap_user_data"
                  ]
                 },
                 "content_type": {
                  "constant_value": "text/x-shellscript"
                 }
                }
               ]
              },
              "mode": "data",
              "name": "linux_eks_managed_node_group",
              "provider_config_key": "module.eks.module.eks_managed_node_group.module.user_data:cloudinit",
              "schema_version": 0,
              "type": "cloudinit_config"
             }
            ],
            "variables": {
             "bootstrap_extra_args": {
              "default": "",
              "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
             },
             "cluster_auth_base64": {
              "default": "",
              "description": "Base64 encoded CA of associated EKS cluster"
             },
             "cluster_endpoint": {
              "default": "",
              "description": "Endpoint of associated EKS cluster"
             },
             "cluster_name": {
              "default": "",
              "description": "Name of the EKS cluster"
             },
             "cluster_service_ipv4_cidr": {
              "default": null,
              "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
             },
             "create": {
              "default": true,
              "description": "Determines whether to create user-data or not"
             },
             "enable_bootstrap_user_data": {
              "default": false,
              "description": "Determines whether the bootstrap configurations are populated within the user data template"
             },
             "is_eks_managed_node_group": {
              "default": true,
              "description": "Determines whether the user data is used on nodes in an EKS managed node group. Used to determine if user data will be appended or not"
             },
             "platform": {
              "default": "linux",
              "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based"
             },
             "post_bootstrap_user_data": {
              "default": "",
              "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
             },
             "pre_bootstrap_user_data": {
              "default": "",
              "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
             },
             "user_data_template_path": {
              "default": "",
              "description": "Path to a local, custom user data template file to use when rendering user data"
             }
            }
           },
           "source": "../_user_data"
          }
         },
         "outputs": {
          "autoscaling_group_schedule_arns": {
           "description": "ARNs of autoscaling group schedules",
           "expression": {
            "references": [
             "aws_autoscaling_schedule.this"
            ]
           }
          },
          "iam_role_arn": {
           "description": "The Amazon Resource Name (ARN) specifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].arn",
             "aws_iam_role.this[0]",
             "aws_iam_role.this",
             "var.iam_role_arn"
            ]
           }
          },
          "iam_role_name": {
           "description": "The name of the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].name",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "iam_role_unique_id": {
           "description": "Stable and unique string identifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].unique_id",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "launch_template_arn": {
           "description": "The ARN of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].arn",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_id": {
           "description": "The ID of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].id",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_latest_version": {
           "description": "The latest version of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].latest_version",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_name": {
           "description": "The name of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].name",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "node_group_arn": {
           "description": "Amazon Resource Name (ARN) of the EKS Node Group",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].arn",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_autoscaling_group_names": {
           "description": "List of the autoscaling group names",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].resources",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_id": {
           "description": "EKS Cluster name and EKS Node Group name separated by a colon (`:`)",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].id",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_labels": {
           "description": "Map of labels applied to the node group",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].labels",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_resources": {
           "description": "List of objects containing information about underlying resources",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].resources",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_status": {
           "description": "Status of the EKS Node Group",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].status",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_taints": {
           "description": "List of objects containing information about taints applied to the node group",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].taint",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "platform": {
           "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based",
           "expression": {
            "references": [
             "var.platform"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_autoscaling_schedule.this",
           "expressions": {
            "autoscaling_group_name": {
             "references": [
              "aws_eks_node_group.this[0].resources[0].autoscaling_groups[0].name",
              "aws_eks_node_group.this[0].resources[0].autoscaling_groups[0]",
              "aws_eks_node_group.this[0].resources[0].autoscaling_groups",
              "aws_eks_node_group.this[0].resources[0]",
              "aws_eks_node_group.this[0].resources",
              "aws_eks_node_group.this[0]",
              "aws_eks_node_group.this"
             ]
            },
            "desired_capacity": {
             "references": [
              "each.value.desired_size",
              "each.value"
             ]
            },
            "end_time": {
             "references": [
              "each.value.end_time",
              "each.value"
             ]
            },
            "max_size": {
             "references": [
              "each.value.max_size",
              "each.value"
             ]
            },
            "min_size": {
             "references": [
              "each.value.min_size",
              "each.value"
             ]
            },
            "recurrence": {
             "references": [
              "each.value.recurrence",
              "each.value"
             ]
            },
            "scheduled_action_name": {
             "references": [
              "each.key"
             ]
            },
            "start_time": {
             "references": [
              "each.value.start_time",
              "each.value"
             ]
            },
            "time_zone": {
             "references": [
              "each.value.time_zone",
              "each.value"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.schedules",
             "var.create",
             "var.create_schedule"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_autoscaling_schedule"
          },
          {
           "address": "aws_eks_node_group.this",
           "count_expression": {
            "references": [
             "var.create"
            ]
           },
           "expressions": {
            "ami_type": {
             "references": [
              "var.ami_id",
              "var.ami_type"
             ]
            },
            "capacity_type": {
             "references": [
              "var.capacity_type"
             ]
            },
            "cluster_name": {
             "references": [
              "var.cluster_name"
             ]
            },
            "disk_size": {
             "references": [
              "var.use_custom_launch_template",
              "var.disk_size"
             ]
            },
            "force_update_version": {
             "references": [
              "var.force_update_version"
             ]
            },
            "instance_types": {
             "references": [
              "var.instance_types"
             ]
            },
            "labels": {
             "references": [
              "var.labels"
             ]
            },
            "node_group_name": {
             "references": [
              "var.use_name_prefix",
              "var.name"
             ]
            },
            "node_group_name_prefix": {
             "references": [
              "var.use_name_prefix",
              "var.name"
             ]
            },
            "node_role_arn": {
             "references": [
              "var.create_iam_role",
              "aws_iam_role.this[0].arn",
              "aws_iam_role.this[0]",
              "aws_iam_role.this",
              "var.iam_role_arn"
             ]
            },
            "release_version": {
             "references": [
              "var.ami_id",
              "var.ami_release_version"
             ]
            },
            "scaling_config": [
             {
              "desired_size": {
               "references": [
                "var.desired_size"
               ]
              },
              "max_size": {
               "references": [
                "var.max_size"
               ]
              },
              "min_size": {
               "references": [
                "var.min_size"
               ]
              }
             }
            ],
            "subnet_ids": {
             "references": [
              "var.subnet_ids"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.name"
             ]
            },
            "timeouts": {
             "create": {
              "references": [
               "var.timeouts"
              ]
             },
             "delete": {
              "references": [
               "var.timeouts"
              ]
             },
             "update": {
              "references": [
               "var.timeouts"
              ]
             }
            },
            "version": {
             "references": [
              "var.ami_id",
              "var.cluster_version"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_eks_node_group"
          },
          {
           "address": "aws_iam_role.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_role"
            ]
           },
           "expressions": {
            "assume_role_policy": {
             "references": [
              "data.aws_iam_policy_document.assume_role_policy[0].json",
              "data.aws_iam_policy_document.assume_role_policy[0]",
              "data.aws_iam_policy_document.assume_role_policy"
             ]
            },
            "description": {
             "references": [
              "var.iam_role_description"
             ]
            },
            "force_detach_policies": {
             "constant_value": true
            },
            "name": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "path": {
             "references": [
              "var.iam_role_path"
             ]
            },
            "permissions_boundary": {
             "references": [
              "var.iam_role_permissions_boundary"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.iam_role_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role"
          },
          {
           "address": "aws_iam_role_policy_attachment.additional",
           "expressions": {
            "policy_arn": {
             "references": [
              "each.value"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.iam_role_additional_policies",
             "var.create",
             "var.create_iam_role"
            ]
           },
           "mode": "managed",
           "name": "additional",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role_policy_attachment"
          },
          {
           "address": "aws_iam_role_policy_attachment.this",
           "expressions": {
            "policy_arn": {
             "references": [
              "each.value"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "local.iam_role_policy_prefix",
             "local.iam_role_policy_prefix",
             "var.iam_role_attach_cni_policy",
             "local.cni_policy",
             "var.create",
             "var.create_iam_role"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role_policy_attachment"
          },
          {
           "address": "aws_launch_template.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_launch_template",
             "var.use_custom_launch_template"
            ]
           },
           "depends_on": [
            "aws_iam_role_policy_attachment.this"
           ],
           "expressions": {
            "default_version": {
             "references": [
              "var.launch_template_default_version"
             ]
            },
            "description": {
             "references": [
              "var.launch_template_description"
             ]
            },
            "disable_api_termination": {
             "references": [
              "var.disable_api_termination"
             ]
            },
            "ebs_optimized": {
             "references": [
              "var.ebs_optimized"
             ]
            },
            "image_id": {
             "references": [
              "var.ami_id"
             ]
            },
            "kernel_id": {
             "references": [
              "var.kernel_id"
             ]
            },
            "key_name": {
             "references": [
              "var.key_name"
             ]
            },
            "name": {
             "references": [
              "var.launch_template_use_name_prefix",
              "local.launch_template_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.launch_template_use_name_prefix",
              "local.launch_template_name"
             ]
            },
            "ram_disk_id": {
             "references": [
              "var.ram_disk_id"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            },
            "update_default_version": {
             "references": [
              "var.update_launch_template_default_version"
             ]
            },
            "user_data": {
             "references": [
              "module.user_data.user_data",
              "module.user_data"
             ]
            },
            "vpc_security_group_ids": {
             "references": [
              "var.network_interfaces",
              "local.security_group_ids"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_launch_template"
          },
          {
           "address": "data.aws_caller_identity.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_caller_identity"
          },
          {
           "address": "data.aws_iam_policy_document.assume_role_policy",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_role"
            ]
           },
           "expressions": {
            "statement": [
             {
              "actions": {
               "constant_value": [
                "sts:AssumeRole"
               ]
              },
              "principals": [
               {
                "identifiers": {
                 "references": [
                  "data.aws_partition.current.dns_suffix",
                  "data.aws_partition.current"
                 ]
                },
                "type": {
                 "constant_value": "Service"
                }
               }
              ],
              "sid": {
               "constant_value": "EKSNodeAssumeRole"
              }
             }
            ]
           },
           "mode": "data",
           "name": "assume_role_policy",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy_document"
          },
          {
           "address": "data.aws_partition.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_partition"
          }
         ],
         "variables": {
          "ami_id": {
           "default": "",
           "description": "The AMI from which to launch the instance. If not supplied, EKS will use its own default image"
          },
          "ami_release_version": {
           "default": null,
           "description": "AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version"
          },
          "ami_type": {
           "default": null,
           "description": "Type of Amazon Machine Image (AMI) associated with the EKS Node Group. Valid values are `AL2_x86_64`, `AL2_x86_64_GPU`, `AL2_ARM_64`, `CUSTOM`, `BOTTLEROCKET_ARM_64`, `BOTTLEROCKET_x86_64`"
          },
          "block_device_mappings": {
           "default": {},
           "description": "Specify volumes to attach to the instance besides the volumes specified by the AMI"
          },
          "bootstrap_extra_args": {
           "default": "",
           "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
          },
          "capacity_reservation_specification": {
           "default": {},
           "description": "Targeting for EC2 capacity reservations"
          },
          "capacity_type": {
           "default": "ON_DEMAND",
           "description": "Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`"
          },
          "cluster_auth_base64": {
           "default": "",
           "description": "Base64 encoded CA of associated EKS cluster"
          },
          "cluster_endpoint": {
           "default": "",
           "description": "Endpoint of associated EKS cluster"
          },
          "cluster_ip_family": {
           "default": null,
           "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
          },
          "cluster_name": {
           "default": null,
           "description": "Name of associated EKS cluster"
          },
          "cluster_primary_security_group_id": {
           "default": null,
           "description": "The ID of the EKS cluster primary security group to associate with the instance(s). This is the security group that is automatically created by the EKS service"
          },
          "cluster_service_ipv4_cidr": {
           "default": null,
           "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
          },
          "cluster_version": {
           "default": null,
           "description": "Kubernetes version. Defaults to EKS Cluster Kubernetes version"
          },
          "cpu_options": {
           "default": {},
           "description": "The CPU options for the instance"
          },
          "create": {
           "default": true,
           "description": "Determines whether to create EKS managed node group or not"
          },
          "create_iam_role": {
           "default": true,
           "description": "Determines whether an IAM role is created or to use an existing IAM role"
          },
          "create_launch_template": {
           "default": true,
           "description": "Determines whether to create a launch template or not. If set to `false`, EKS will use its own default launch template"
          },
          "create_schedule": {
           "default": true,
           "description": "Determines whether to create autoscaling group schedule or not"
          },
          "credit_specification": {
           "default": {},
           "description": "Customize the credit specification of the instance"
          },
          "desired_size": {
           "default": 1,
           "description": "Desired number of instances/nodes"
          },
          "disable_api_termination": {
           "default": null,
           "description": "If true, enables EC2 instance termination protection"
          },
          "disk_size": {
           "default": null,
           "description": "Disk size in GiB for nodes. Defaults to `20`. Only valid when `use_custom_launch_template` = `false`"
          },
          "ebs_optimized": {
           "default": null,
           "description": "If true, the launched EC2 instance(s) will be EBS-optimized"
          },
          "elastic_gpu_specifications": {
           "default": {},
           "description": "The elastic GPU to attach to the instance"
          },
          "elastic_inference_accelerator": {
           "default": {},
           "description": "Configuration block containing an Elastic Inference Accelerator to attach to the instance"
          },
          "enable_bootstrap_user_data": {
           "default": false,
           "description": "Determines whether the bootstrap configurations are populated within the user data template. Only valid when using a custom AMI via `ami_id`"
          },
          "enable_monitoring": {
           "default": true,
           "description": "Enables/disables detailed monitoring"
          },
          "enclave_options": {
           "default": {},
           "description": "Enable Nitro Enclaves on launched instances"
          },
          "force_update_version": {
           "default": null,
           "description": "Force version update if existing pods are unable to be drained due to a pod disruption budget issue"
          },
          "iam_role_additional_policies": {
           "default": {},
           "description": "Additional policies to be added to the IAM role"
          },
          "iam_role_arn": {
           "default": null,
           "description": "Existing IAM role ARN for the node group. Required if `create_iam_role` is set to `false`"
          },
          "iam_role_attach_cni_policy": {
           "default": true,
           "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
          },
          "iam_role_description": {
           "default": null,
           "description": "Description of the role"
          },
          "iam_role_name": {
           "default": null,
           "description": "Name to use on IAM role created"
          },
          "iam_role_path": {
           "default": null,
           "description": "IAM role path"
          },
          "iam_role_permissions_boundary": {
           "default": null,
           "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
          },
          "iam_role_tags": {
           "default": {},
           "description": "A map of additional tags to add to the IAM role created"
          },
          "iam_role_use_name_prefix": {
           "default": true,
           "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
          },
          "instance_market_options": {
           "default": {},
           "description": "The market (purchasing) option for the instance"
          },
          "instance_types": {
           "default": null,
           "description": "Set of instance types associated with the EKS Node Group. Defaults to `[\"t3.medium\"]`"
          },
          "kernel_id": {
           "default": null,
           "description": "The kernel ID"
          },
          "key_name": {
           "default": null,
           "description": "The key name that should be used for the instance(s)"
          },
          "labels": {
           "default": null,
           "description": "Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed"
          },
          "launch_template_default_version": {
           "default": null,
           "description": "Default version of the launch template"
          },
          "launch_template_description": {
           "default": null,
           "description": "Description of the launch template"
          },
          "launch_template_id": {
           "default": "",
           "description": "The ID of an existing launch template to use. Required when `create_launch_template` = `false` and `use_custom_launch_template` = `true`"
          },
          "launch_template_name": {
           "default": null,
           "description": "Name of launch template to be created"
          },
          "launch_template_tags": {
           "default": {},
           "description": "A map of additional tags to add to the tag_specifications of launch template created"
          },
          "launch_template_use_name_prefix": {
           "default": true,
           "description": "Determines whether to use `launch_template_name` as is or create a unique name beginning with the `launch_template_name` as the prefix"
          },
          "launch_template_version": {
           "default": null,
           "description": "Launch template version number. The default is `$Default`"
          },
          "license_specifications": {
           "default": {},
           "description": "A map of license specifications to associate with"
          },
          "maintenance_options": {
           "default": {},
           "description": "The maintenance options for the instance"
          },
          "max_size": {
           "default": 3,
           "description": "Maximum number of instances/nodes"
          },
          "metadata_options": {
           "default": {
            "http_endpoint": "enabled",
            "http_put_response_hop_limit": "2",
            "http_tokens": "required"
           },
           "description": "Customize the metadata options for the instance"
          },
          "min_size": {
           "default": 0,
           "description": "Minimum number of instances/nodes"
          },
          "name": {
           "default": "",
           "description": "Name of the EKS managed node group"
          },
          "network_interfaces": {
           "default": [],
           "description": "Customize network interfaces to be attached at instance boot time"
          },
          "placement": {
           "default": {},
           "description": "The placement of the instance"
          },
          "platform": {
           "default": "linux",
           "description": "Identifies if the OS platform is `bottlerocket` or `linux` based; `windows` is not supported"
          },
          "post_bootstrap_user_data": {
           "default": "",
           "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
          },
          "pre_bootstrap_user_data": {
           "default": "",
           "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
          },
          "private_dns_name_options": {
           "default": {},
           "description": "The options for the instance hostname. The default values are inherited from the subnet"
          },
          "ram_disk_id": {
           "default": null,
           "description": "The ID of the ram disk"
          },
          "remote_access": {
           "default": {},
           "description": "Configuration block with remote access settings. Only valid when `use_custom_launch_template` = `false`"
          },
          "schedules": {
           "default": {},
           "description": "Map of autoscaling group schedule to create"
          },
          "subnet_ids": {
           "default": null,
           "description": "Identifiers of EC2 Subnets to associate with the EKS Node Group. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME`"
          },
          "tag_specifications": {
           "default": [
            "instance",
            "volume",
            "network-interface"
           ],
           "description": "The tags to apply to the resources during launch"
          },
          "tags": {
           "default": {},
           "description": "A map of tags to add to all resources"
          },
          "taints": {
           "default": {},
           "description": "The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group"
          },
          "timeouts": {
           "default": {},
           "description": "Create, update, and delete timeout configurations for the node group"
          },
          "update_config": {
           "default": {
            "max_unavailable_percentage": "33"
           },
           "description": "Configuration block of settings for max unavailable resources during node group updates"
          },
          "update_launch_template_default_version": {
           "default": true,
           "description": "Whether to update the launch templates default version on each update. Conflicts with `launch_template_default_version`"
          },
          "use_custom_launch_template": {
           "default": true,
           "description": "Determines whether to use a custom launch template or not. If set to `false`, EKS will use its own default launch template"
          },
          "use_name_prefix": {
           "default": true,
           "description": "Determines whether to use `name` as is or create a unique name beginning with the `name` as the prefix"
          },
          "user_data_template_path": {
           "default": "",
           "description": "Path to a local, custom user data template file to use when rendering user data"
          },
          "vpc_security_group_ids": {
           "default": [],
           "description": "A list of security group IDs to associate"
          }
         }
        },
        "source": "./modules/eks-managed-node-group"
       },
       "fargate_profile": {
        "expressions": {
         "cluster_ip_family": {
          "references": [
           "var.cluster_ip_family"
          ]
         },
         "cluster_name": {
          "references": [
           "time_sleep.this[0].triggers[\"cluster_name\"]",
           "time_sleep.this[0].triggers",
           "time_sleep.this[0]",
           "time_sleep.this"
          ]
         },
         "create": {
          "references": [
           "each.value.create",
           "each.value"
          ]
         },
         "create_iam_role": {
          "references": [
           "each.value.create_iam_role",
           "each.value",
           "var.fargate_profile_defaults.create_iam_role",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_additional_policies": {
          "references": [
           "each.value",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_arn": {
          "references": [
           "each.value.iam_role_arn",
           "each.value",
           "var.fargate_profile_defaults.iam_role_arn",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_attach_cni_policy": {
          "references": [
           "each.value.iam_role_attach_cni_policy",
           "each.value",
           "var.fargate_profile_defaults.iam_role_attach_cni_policy",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_description": {
          "references": [
           "each.value.iam_role_description",
           "each.value",
           "var.fargate_profile_defaults.iam_role_description",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_name": {
          "references": [
           "each.value.iam_role_name",
           "each.value",
           "var.fargate_profile_defaults.iam_role_name",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_path": {
          "references": [
           "each.value.iam_role_path",
           "each.value",
           "var.fargate_profile_defaults.iam_role_path",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_permissions_boundary": {
          "references": [
           "each.value.iam_role_permissions_boundary",
           "each.value",
           "var.fargate_profile_defaults.iam_role_permissions_boundary",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_tags": {
          "references": [
           "each.value.iam_role_tags",
           "each.value",
           "var.fargate_profile_defaults.iam_role_tags",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_use_name_prefix": {
          "references": [
           "each.value.iam_role_use_name_prefix",
           "each.value",
           "var.fargate_profile_defaults.iam_role_use_name_prefix",
           "var.fargate_profile_defaults"
          ]
         },
         "name": {
          "references": [
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "selectors": {
          "references": [
           "each.value.selectors",
           "each.value",
           "var.fargate_profile_defaults.selectors",
           "var.fargate_profile_defaults"
          ]
         },
         "subnet_ids": {
          "references": [
           "each.value.subnet_ids",
           "each.value",
           "var.fargate_profile_defaults.subnet_ids",
           "var.fargate_profile_defaults",
           "var.subnet_ids"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "each.value.tags",
           "each.value",
           "var.fargate_profile_defaults.tags",
           "var.fargate_profile_defaults"
          ]
         },
         "timeouts": {
          "references": [
           "each.value.timeouts",
           "each.value",
           "var.fargate_profile_defaults.timeouts",
           "var.fargate_profile_defaults"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.fargate_profiles",
          "var.create",
          "local.create_outposts_local_cluster"
         ]
        },
        "module": {
         "outputs": {
          "fargate_profile_arn": {
           "description": "Amazon Resource Name (ARN) of the EKS Fargate Profile",
           "expression": {
            "references": [
             "aws_eks_fargate_profile.this[0].arn",
             "aws_eks_fargate_profile.this[0]",
             "aws_eks_fargate_profile.this"
            ]
           }
          },
          "fargate_profile_id": {
           "description": "EKS Cluster name and EKS Fargate Profile name separated by a colon (`:`)",
           "expression": {
            "references": [
             "aws_eks_fargate_profile.this[0].id",
             "aws_eks_fargate_profile.this[0]",
             "aws_eks_fargate_profile.this"
            ]
           }
          },
          "fargate_profile_pod_execution_role_arn": {
           "description": "Amazon Resource Name (ARN) of the EKS Fargate Profile Pod execution role ARN",
           "expression": {
            "references": [
             "aws_eks_fargate_profile.this[0].pod_execution_role_arn",
             "aws_eks_fargate_profile.this[0]",
             "aws_eks_fargate_profile.this"
            ]
           }
          },
          "fargate_profile_status": {
           "description": "Status of the EKS Fargate Profile",
           "expression": {
            "references": [
             "aws_eks_fargate_profile.this[0].status",
             "aws_eks_fargate_profile.this[0]",
             "aws_eks_fargate_profile.this"
            ]
           }
          },
          "iam_role_arn": {
           "description": "The Amazon Resource Name (ARN) specifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].arn",
             "aws_iam_role.this[0]",
             "aws_iam_role.this",
             "var.iam_role_arn"
            ]
           }
          },
          "iam_role_name": {
           "description": "The name of the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].name",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "iam_role_unique_id": {
           "description": "Stable and unique string identifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].unique_id",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_eks_fargate_profile.this",
           "count_expression": {
            "references": [
             "var.create"
            ]
           },
           "expressions": {
            "cluster_name": {
             "references": [
              "var.cluster_name"
             ]
            },
            "fargate_profile_name": {
             "references": [
              "var.name"
             ]
            },
            "pod_execution_role_arn": {
             "references": [
              "var.create_iam_role",
              "aws_iam_role.this[0].arn",
              "aws_iam_role.this[0]",
              "aws_iam_role.this",
              "var.iam_role_arn"
             ]
            },
            "subnet_ids": {
             "references": [
              "var.subnet_ids"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_eks_fargate_profile"
          },
          {
           "address": "aws_iam_role.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_role"
            ]
           },
           "expressions": {
            "assume_role_policy": {
             "references": [
              "data.aws_iam_policy_document.assume_role_policy[0].json",
              "data.aws_iam_policy_document.assume_role_policy[0]",
              "data.aws_iam_policy_document.assume_role_policy"
             ]
            },
            "description": {
             "references": [
              "var.iam_role_description"
             ]
            },
            "force_detach_policies": {
             "constant_value": true
            },
            "name": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "path": {
             "references": [
              "var.iam_role_path"
             ]
            },
            "permissions_boundary": {
             "references": [
              "var.iam_role_permissions_boundary"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.iam_role_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role"
          },
          {
           "address": "aws_iam_role_policy_attachment.additional",
           "expressions": {
            "policy_arn": {
             "references": [
              "each.value"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.iam_role_additional_policies",
             "var.create",
             "var.create_iam_role"
            ]
           },
           "mode": "managed",
           "name": "additional",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role_policy_attachment"
          },
          {
           "address": "aws_iam_role_policy_attachment.this",
           "expressions": {
            "policy_arn": {
             "references": [
              "each.value"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "local.iam_role_policy_prefix",
             "var.iam_role_attach_cni_policy",
             "local.cni_policy",
             "var.create",
             "var.create_iam_role"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role_policy_attachment"
          },
          {
           "address": "data.aws_caller_identity.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_caller_identity"
          },
          {
           "address": "data.aws_iam_policy_document.assume_role_policy",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_role"
            ]
           },
           "expressions": {
            "statement": [
             {
              "actions": {
               "constant_value": [
                "sts:AssumeRole"
               ]
              },
              "effect": {
               "constant_value": "Allow"
              },
              "principals": [
               {
                "identifiers": {
                 "constant_value": [
                  "eks-fargate-pods.amazonaws.com"
                 ]
                },
                "type": {
                 "constant_value": "Service"
                }
               }
              ]
             }
            ]
           },
           "mode": "data",
           "name": "assume_role_policy",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy_document"
          },
          {
           "address": "data.aws_partition.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_partition"
          }
         ],
         "variables": {
          "cluster_ip_family": {
           "default": null,
           "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
          },
          "cluster_name": {
           "default": null,
           "description": "Name of the EKS cluster"
          },
          "create": {
           "default": true,
           "description": "Determines whether to create Fargate profile or not"
          },
          "create_iam_role": {
           "default": true,
           "description": "Determines whether an IAM role is created or to use an existing IAM role"
          },
          "iam_role_additional_policies": {
           "default": {},
           "description": "Additional policies to be added to the IAM role"
          },
          "iam_role_arn": {
           "default": null,
           "description": "Existing IAM role ARN for the Fargate profile. Required if `create_iam_role` is set to `false`"
          },
          "iam_role_attach_cni_policy": {
           "default": true,
           "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
          },
          "iam_role_description": {
           "default": null,
           "description": "Description of the role"
          },
          "iam_role_name": {
           "default": "",
           "description": "Name to use on IAM role created"
          },
          "iam_role_path": {
           "default": null,
           "description": "IAM role path"
          },
          "iam_role_permissions_boundary": {
           "default": null,
           "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
          },
          "iam_role_tags": {
           "default": {},
           "description": "A map of additional tags to add to the IAM role created"
          },
          "iam_role_use_name_prefix": {
           "default": true,
           "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
          },
          "name": {
           "default": "",
           "description": "Name of the EKS Fargate Profile"
          },
          "selectors": {
           "default": [],
           "description": "Configuration block(s) for selecting Kubernetes Pods to execute with this Fargate Profile"
          },
          "subnet_ids": {
           "default": [],
           "description": "A list of subnet IDs for the EKS Fargate Profile"
          },
          "tags": {
           "default": {},
           "description": "A map of tags to add to all resources"
          },
          "timeouts": {
           "default": {},
           "description": "Create and delete timeout configurations for the Fargate Profile"
          }
         }
        },
        "source": "./modules/fargate-profile"
       },
       "kms": {
        "expressions": {
         "aliases": {
          "references": [
           "var.kms_key_aliases"
          ]
         },
         "computed_aliases": {
          "references": [
           "var.cluster_name"
          ]
         },
         "create": {
          "references": [
           "local.create",
           "var.create_kms_key",
           "local.enable_cluster_encryption_config"
          ]
         },
         "deletion_window_in_days": {
          "references": [
           "var.kms_key_deletion_window_in_days"
          ]
         },
         "description": {
          "references": [
           "var.kms_key_description",
           "var.cluster_name"
          ]
         },
         "enable_default_policy": {
          "references": [
           "var.kms_key_enable_default_policy"
          ]
         },
         "enable_key_rotation": {
          "references": [
           "var.enable_kms_key_rotation"
          ]
         },
         "key_administrators": {
          "references": [
           "var.kms_key_administrators",
           "data.aws_iam_session_context.current.issuer_arn",
           "data.aws_iam_session_context.current"
          ]
         },
         "key_owners": {
          "references": [
           "var.kms_key_owners"
          ]
         },
         "key_service_users": {
          "references": [
           "var.kms_key_service_users"
          ]
         },
         "key_usage": {
          "constant_value": "ENCRYPT_DECRYPT"
         },
         "key_users": {
          "references": [
           "local.cluster_role",
           "var.kms_key_users"
          ]
         },
         "override_policy_documents": {
          "references": [
           "var.kms_key_override_policy_documents"
          ]
         },
         "source_policy_documents": {
          "references": [
           "var.kms_key_source_policy_documents"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "module": {
         "outputs": {
          "aliases": {
           "description": "A map of aliases created and their attributes",
           "expression": {
            "references": [
             "aws_kms_alias.this"
            ]
           }
          },
          "external_key_expiration_model": {
           "description": "Whether the key material expires. Empty when pending key material import, otherwise `KEY_MATERIAL_EXPIRES` or `KEY_MATERIAL_DOES_NOT_EXPIRE`",
           "expression": {
            "references": [
             "aws_kms_external_key.this[0].expiration_model",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "external_key_state": {
           "description": "The state of the CMK",
           "expression": {
            "references": [
             "aws_kms_external_key.this[0].key_state",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "external_key_usage": {
           "description": "The cryptographic operations for which you can use the CMK",
           "expression": {
            "references": [
             "aws_kms_external_key.this[0].key_usage",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "grants": {
           "description": "A map of grants created and their attributes",
           "expression": {
            "references": [
             "aws_kms_grant.this"
            ]
           }
          },
          "key_arn": {
           "description": "The Amazon Resource Name (ARN) of the key",
           "expression": {
            "references": [
             "aws_kms_key.this[0].arn",
             "aws_kms_key.this[0]",
             "aws_kms_key.this",
             "aws_kms_external_key.this[0].arn",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "key_id": {
           "description": "The globally unique identifier for the key",
           "expression": {
            "references": [
             "aws_kms_key.this[0].key_id",
             "aws_kms_key.this[0]",
             "aws_kms_key.this",
             "aws_kms_external_key.this[0].id",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "key_policy": {
           "description": "The IAM resource policy set on the key",
           "expression": {
            "references": [
             "aws_kms_key.this[0].policy",
             "aws_kms_key.this[0]",
             "aws_kms_key.this",
             "aws_kms_external_key.this[0].policy",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_kms_alias.this",
           "expressions": {
            "name": {
             "references": [
              "var.aliases_use_name_prefix",
              "each.value.name",
              "each.value"
             ]
            },
            "name_prefix": {
             "references": [
              "var.aliases_use_name_prefix",
              "each.value.name",
              "each.value"
             ]
            },
            "target_key_id": {
             "references": [
              "var.create_external",
              "aws_kms_external_key.this[0].id",
              "aws_kms_external_key.this[0]",
              "aws_kms_external_key.this",
              "aws_kms_key.this[0].key_id",
              "aws_kms_key.this[0]",
              "aws_kms_key.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "local.aliases",
             "var.computed_aliases",
             "var.create"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_kms_alias"
          },
          {
           "address": "aws_kms_external_key.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_external"
            ]
           },
           "expressions": {
            "bypass_policy_lockout_safety_check": {
             "references": [
              "var.bypass_policy_lockout_safety_check"
             ]
            },
            "deletion_window_in_days": {
             "references": [
              "var.deletion_window_in_days"
             ]
            },
            "description": {
             "references": [
              "var.description"
             ]
            },
            "enabled": {
             "references": [
              "var.is_enabled"
             ]
            },
            "key_material_base64": {
             "references": [
              "var.key_material_base64"
             ]
            },
            "multi_region": {
             "references": [
              "var.multi_region"
             ]
            },
            "policy": {
             "references": [
              "var.policy",
              "data.aws_iam_policy_document.this[0].json",
              "data.aws_iam_policy_document.this[0]",
              "data.aws_iam_policy_document.this"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            },
            "valid_to": {
             "references": [
              "var.valid_to"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_kms_external_key"
          },
          {
           "address": "aws_kms_grant.this",
           "expressions": {
            "grant_creation_tokens": {
             "references": [
              "each.value.grant_creation_tokens",
              "each.value"
             ]
            },
            "grantee_principal": {
             "references": [
              "each.value.grantee_principal",
              "each.value"
             ]
            },
            "key_id": {
             "references": [
              "var.create_external",
              "aws_kms_external_key.this[0].id",
              "aws_kms_external_key.this[0]",
              "aws_kms_external_key.this",
              "aws_kms_key.this[0].key_id",
              "aws_kms_key.this[0]",
              "aws_kms_key.this"
             ]
            },
            "name": {
             "references": [
              "each.value.name",
              "each.value",
              "each.key"
             ]
            },
            "operations": {
             "references": [
              "each.value.operations",
              "each.value"
             ]
            },
            "retire_on_delete": {
             "references": [
              "each.value.retire_on_delete",
              "each.value"
             ]
            },
            "retiring_principal": {
             "references": [
              "each.value.retiring_principal",
              "each.value"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.grants",
             "var.create"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_kms_grant"
          },
          {
           "address": "aws_kms_key.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_external"
            ]
           },
           "expressions": {
            "bypass_policy_lockout_safety_check": {
             "references": [
              "var.bypass_policy_lockout_safety_check"
             ]
            },
            "customer_master_key_spec": {
             "references": [
              "var.customer_master_key_spec"
             ]
            },
            "deletion_window_in_days": {
             "references": [
              "var.deletion_window_in_days"
             ]
            },
            "description": {
             "references": [
              "var.description"
             ]
            },
            "enable_key_rotation": {
             "references": [
              "var.enable_key_rotation"
             ]
            },
            "is_enabled": {
             "references": [
              "var.is_enabled"
             ]
            },
            "key_usage": {
             "references": [
              "var.key_usage"
             ]
            },
            "multi_region": {
             "references": [
              "var.multi_region"
             ]
            },
            "policy": {
             "references": [
              "var.policy",
              "data.aws_iam_policy_document.this[0].json",
              "data.aws_iam_policy_document.this[0]",
              "data.aws_iam_policy_document.this"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_kms_key"
          },
          {
           "address": "data.aws_caller_identity.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_caller_identity"
          },
          {
           "address": "data.aws_iam_policy_document.this",
           "count_expression": {
            "references": [
             "var.create"
            ]
           },
           "expressions": {
            "override_policy_documents": {
             "references": [
              "var.override_policy_documents"
             ]
            },
            "source_policy_documents": {
             "references": [
              "var.source_policy_documents"
             ]
            }
           },
           "mode": "data",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy_document"
          },
          {
           "address": "data.aws_partition.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_partition"
          }
         ],
         "variables": {
          "aliases": {
           "default": [],
           "description": "A list of aliases to create. Note - due to the use of `toset()`, values must be static strings and not computed values"
          },
          "aliases_use_name_prefix": {
           "default": false,
           "description": "Determines whether the alias name is used as a prefix"
          },
          "bypass_policy_lockout_safety_check": {
           "default": null,
           "description": "A flag to indicate whether to bypass the key policy lockout safety check. Setting this value to true increases the risk that the KMS key becomes unmanageable"
          },
          "computed_aliases": {
           "default": {},
           "description": "A map of aliases to create. Values provided via the `name` key of the map can be computed from upstream resources"
          },
          "create": {
           "default": true,
           "description": "Determines whether resources will be created (affects all resources)"
          },
          "create_external": {
           "default": false,
           "description": "Determines whether an external CMK (externally provided material) will be created or a standard CMK (AWS provided material)"
          },
          "customer_master_key_spec": {
           "default": null,
           "description": "Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports. Valid values: `SYMMETRIC_DEFAULT`, `RSA_2048`, `RSA_3072`, `RSA_4096`, `HMAC_256`, `ECC_NIST_P256`, `ECC_NIST_P384`, `ECC_NIST_P521`, or `ECC_SECG_P256K1`. Defaults to `SYMMETRIC_DEFAULT`"
          },
          "deletion_window_in_days": {
           "default": null,
           "description": "The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key. If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`"
          },
          "description": {
           "default": null,
           "description": "The description of the key as viewed in AWS console"
          },
          "enable_default_policy": {
           "default": true,
           "description": "Specifies whether to enable the default key policy. Defaults to `true`"
          },
          "enable_key_rotation": {
           "default": true,
           "description": "Specifies whether key rotation is enabled. Defaults to `true`"
          },
          "grants": {
           "default": {},
           "description": "A map of grant definitions to create"
          },
          "is_enabled": {
           "default": null,
           "description": "Specifies whether the key is enabled. Defaults to `true`"
          },
          "key_administrators": {
           "default": [],
           "description": "A list of IAM ARNs for [key administrators](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-administrators)"
          },
          "key_asymmetric_public_encryption_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key asymmetric public encryption users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
          },
          "key_asymmetric_sign_verify_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key asymmetric sign and verify users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
          },
          "key_hmac_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key HMAC users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
          },
          "key_material_base64": {
           "default": null,
           "description": "Base64 encoded 256-bit symmetric encryption key material to import. The CMK is permanently associated with this key material. External key only"
          },
          "key_owners": {
           "default": [],
           "description": "A list of IAM ARNs for those who will have full key permissions (`kms:*`)"
          },
          "key_service_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key service users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-service-integration)"
          },
          "key_symmetric_encryption_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key symmetric encryption users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
          },
          "key_usage": {
           "default": null,
           "description": "Specifies the intended use of the key. Valid values: `ENCRYPT_DECRYPT` or `SIGN_VERIFY`. Defaults to `ENCRYPT_DECRYPT`"
          },
          "key_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-users)"
          },
          "multi_region": {
           "default": false,
           "description": "Indicates whether the KMS key is a multi-Region (`true`) or regional (`false`) key. Defaults to `false`"
          },
          "override_policy_documents": {
           "default": [],
           "description": "List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid`"
          },
          "policy": {
           "default": null,
           "description": "A valid policy JSON document. Although this is a key policy, not an IAM policy, an `aws_iam_policy_document`, in the form that designates a principal, can be used"
          },
          "source_policy_documents": {
           "default": [],
           "description": "List of IAM policy documents that are merged together into the exported document. Statements must have unique `sid`s"
          },
          "tags": {
           "default": {},
           "description": "A map of tags to add to all resources"
          },
          "valid_to": {
           "default": null,
           "description": "Time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. If not specified, key material does not expire"
          }
         }
        },
        "source": "terraform-aws-modules/kms/aws",
        "version_constraint": "1.1.0"
       },
       "self_managed_node_group": {
        "expressions": {
         "ami_id": {
          "references": [
           "each.value.ami_id",
           "each.value",
           "var.self_managed_node_group_defaults.ami_id",
           "var.self_managed_node_group_defaults"
          ]
         },
         "autoscaling_group_tags": {
          "references": [
           "each.value.autoscaling_group_tags",
           "each.value",
           "var.self_managed_node_group_defaults.autoscaling_group_tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "availability_zones": {
          "references": [
           "each.value.availability_zones",
           "each.value",
           "var.self_managed_node_group_defaults.availability_zones",
           "var.self_managed_node_group_defaults"
          ]
         },
         "block_device_mappings": {
          "references": [
           "each.value.block_device_mappings",
           "each.value",
           "var.self_managed_node_group_defaults.block_device_mappings",
           "var.self_managed_node_group_defaults"
          ]
         },
         "bootstrap_extra_args": {
          "references": [
           "each.value.bootstrap_extra_args",
           "each.value",
           "var.self_managed_node_group_defaults.bootstrap_extra_args",
           "var.self_managed_node_group_defaults"
          ]
         },
         "capacity_rebalance": {
          "references": [
           "each.value.capacity_rebalance",
           "each.value",
           "var.self_managed_node_group_defaults.capacity_rebalance",
           "var.self_managed_node_group_defaults"
          ]
         },
         "capacity_reservation_specification": {
          "references": [
           "each.value.capacity_reservation_specification",
           "each.value",
           "var.self_managed_node_group_defaults.capacity_reservation_specification",
           "var.self_managed_node_group_defaults"
          ]
         },
         "cluster_auth_base64": {
          "references": [
           "time_sleep.this[0].triggers[\"cluster_certificate_authority_data\"]",
           "time_sleep.this[0].triggers",
           "time_sleep.this[0]",
           "time_sleep.this"
          ]
         },
         "cluster_endpoint": {
          "references": [
           "time_sleep.this[0].triggers[\"cluster_endpoint\"]",
           "time_sleep.this[0].triggers",
           "time_sleep.this[0]",
           "time_sleep.this"
          ]
         },
         "cluster_ip_family": {
          "references": [
           "var.cluster_ip_family"
          ]
         },
         "cluster_name": {
          "references": [
           "time_sleep.this[0].triggers[\"cluster_name\"]",
           "time_sleep.this[0].triggers",
           "time_sleep.this[0]",
           "time_sleep.this"
          ]
         },
         "cluster_primary_security_group_id": {
          "references": [
           "each.value.attach_cluster_primary_security_group",
           "each.value",
           "var.self_managed_node_group_defaults.attach_cluster_primary_security_group",
           "var.self_managed_node_group_defaults",
           "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
           "aws_eks_cluster.this[0].vpc_config[0]",
           "aws_eks_cluster.this[0].vpc_config",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_version": {
          "references": [
           "each.value.cluster_version",
           "each.value",
           "var.self_managed_node_group_defaults.cluster_version",
           "var.self_managed_node_group_defaults",
           "time_sleep.this[0].triggers[\"cluster_version\"]",
           "time_sleep.this[0].triggers",
           "time_sleep.this[0]",
           "time_sleep.this"
          ]
         },
         "context": {
          "references": [
           "each.value.context",
           "each.value",
           "var.self_managed_node_group_defaults.context",
           "var.self_managed_node_group_defaults"
          ]
         },
         "cpu_options": {
          "references": [
           "each.value.cpu_options",
           "each.value",
           "var.self_managed_node_group_defaults.cpu_options",
           "var.self_managed_node_group_defaults"
          ]
         },
         "create": {
          "references": [
           "each.value.create",
           "each.value"
          ]
         },
         "create_autoscaling_group": {
          "references": [
           "each.value.create_autoscaling_group",
           "each.value",
           "var.self_managed_node_group_defaults.create_autoscaling_group",
           "var.self_managed_node_group_defaults"
          ]
         },
         "create_iam_instance_profile": {
          "references": [
           "each.value.create_iam_instance_profile",
           "each.value",
           "var.self_managed_node_group_defaults.create_iam_instance_profile",
           "var.self_managed_node_group_defaults"
          ]
         },
         "create_launch_template": {
          "references": [
           "each.value.create_launch_template",
           "each.value",
           "var.self_managed_node_group_defaults.create_launch_template",
           "var.self_managed_node_group_defaults"
          ]
         },
         "create_schedule": {
          "references": [
           "each.value.create_schedule",
           "each.value",
           "var.self_managed_node_group_defaults.create_schedule",
           "var.self_managed_node_group_defaults"
          ]
         },
         "credit_specification": {
          "references": [
           "each.value.credit_specification",
           "each.value",
           "var.self_managed_node_group_defaults.credit_specification",
           "var.self_managed_node_group_defaults"
          ]
         },
         "default_cooldown": {
          "references": [
           "each.value.default_cooldown",
           "each.value",
           "var.self_managed_node_group_defaults.default_cooldown",
           "var.self_managed_node_group_defaults"
          ]
         },
         "default_instance_warmup": {
          "references": [
           "each.value.default_instance_warmup",
           "each.value",
           "var.self_managed_node_group_defaults.default_instance_warmup",
           "var.self_managed_node_group_defaults"
          ]
         },
         "delete_timeout": {
          "references": [
           "each.value.delete_timeout",
           "each.value",
           "var.self_managed_node_group_defaults.delete_timeout",
           "var.self_managed_node_group_defaults"
          ]
         },
         "desired_size": {
          "references": [
           "each.value.desired_size",
           "each.value",
           "var.self_managed_node_group_defaults.desired_size",
           "var.self_managed_node_group_defaults"
          ]
         },
         "disable_api_termination": {
          "references": [
           "each.value.disable_api_termination",
           "each.value",
           "var.self_managed_node_group_defaults.disable_api_termination",
           "var.self_managed_node_group_defaults"
          ]
         },
         "ebs_optimized": {
          "references": [
           "each.value.ebs_optimized",
           "each.value",
           "var.self_managed_node_group_defaults.ebs_optimized",
           "var.self_managed_node_group_defaults"
          ]
         },
         "elastic_gpu_specifications": {
          "references": [
           "each.value.elastic_gpu_specifications",
           "each.value",
           "var.self_managed_node_group_defaults.elastic_gpu_specifications",
           "var.self_managed_node_group_defaults"
          ]
         },
         "elastic_inference_accelerator": {
          "references": [
           "each.value.elastic_inference_accelerator",
           "each.value",
           "var.self_managed_node_group_defaults.elastic_inference_accelerator",
           "var.self_managed_node_group_defaults"
          ]
         },
         "enable_monitoring": {
          "references": [
           "each.value.enable_monitoring",
           "each.value",
           "var.self_managed_node_group_defaults.enable_monitoring",
           "var.self_managed_node_group_defaults"
          ]
         },
         "enabled_metrics": {
          "references": [
           "each.value.enabled_metrics",
           "each.value",
           "var.self_managed_node_group_defaults.enabled_metrics",
           "var.self_managed_node_group_defaults"
          ]
         },
         "enclave_options": {
          "references": [
           "each.value.enclave_options",
           "each.value",
           "var.self_managed_node_group_defaults.enclave_options",
           "var.self_managed_node_group_defaults"
          ]
         },
         "force_delete": {
          "references": [
           "each.value.force_delete",
           "each.value",
           "var.self_managed_node_group_defaults.force_delete",
           "var.self_managed_node_group_defaults"
          ]
         },
         "force_delete_warm_pool": {
          "references": [
           "each.value.force_delete_warm_pool",
           "each.value",
           "var.self_managed_node_group_defaults.force_delete_warm_pool",
           "var.self_managed_node_group_defaults"
          ]
         },
         "health_check_grace_period": {
          "references": [
           "each.value.health_check_grace_period",
           "each.value",
           "var.self_managed_node_group_defaults.health_check_grace_period",
           "var.self_managed_node_group_defaults"
          ]
         },
         "health_check_type": {
          "references": [
           "each.value.health_check_type",
           "each.value",
           "var.self_managed_node_group_defaults.health_check_type",
           "var.self_managed_node_group_defaults"
          ]
         },
         "hibernation_options": {
          "references": [
           "each.value.hibernation_options",
           "each.value",
           "var.self_managed_node_group_defaults.hibernation_options",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_instance_profile_arn": {
          "references": [
           "each.value.iam_instance_profile_arn",
           "each.value",
           "var.self_managed_node_group_defaults.iam_instance_profile_arn",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_additional_policies": {
          "references": [
           "each.value",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_attach_cni_policy": {
          "references": [
           "each.value.iam_role_attach_cni_policy",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_attach_cni_policy",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_description": {
          "references": [
           "each.value.iam_role_description",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_description",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_name": {
          "references": [
           "each.value.iam_role_name",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_name",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_path": {
          "references": [
           "each.value.iam_role_path",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_path",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_permissions_boundary": {
          "references": [
           "each.value.iam_role_permissions_boundary",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_permissions_boundary",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_tags": {
          "references": [
           "each.value.iam_role_tags",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_use_name_prefix": {
          "references": [
           "each.value.iam_role_use_name_prefix",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_use_name_prefix",
           "var.self_managed_node_group_defaults"
          ]
         },
         "initial_lifecycle_hooks": {
          "references": [
           "each.value.initial_lifecycle_hooks",
           "each.value",
           "var.self_managed_node_group_defaults.initial_lifecycle_hooks",
           "var.self_managed_node_group_defaults"
          ]
         },
         "instance_initiated_shutdown_behavior": {
          "references": [
           "each.value.instance_initiated_shutdown_behavior",
           "each.value",
           "var.self_managed_node_group_defaults.instance_initiated_shutdown_behavior",
           "var.self_managed_node_group_defaults"
          ]
         },
         "instance_market_options": {
          "references": [
           "each.value.instance_market_options",
           "each.value",
           "var.self_managed_node_group_defaults.instance_market_options",
           "var.self_managed_node_group_defaults"
          ]
         },
         "instance_refresh": {
          "references": [
           "each.value.instance_refresh",
           "each.value",
           "var.self_managed_node_group_defaults.instance_refresh",
           "var.self_managed_node_group_defaults",
           "local.default_instance_refresh"
          ]
         },
         "instance_requirements": {
          "references": [
           "each.value.instance_requirements",
           "each.value",
           "var.self_managed_node_group_defaults.instance_requirements",
           "var.self_managed_node_group_defaults"
          ]
         },
         "instance_type": {
          "references": [
           "each.value.instance_type",
           "each.value",
           "var.self_managed_node_group_defaults.instance_type",
           "var.self_managed_node_group_defaults"
          ]
         },
         "kernel_id": {
          "references": [
           "each.value.kernel_id",
           "each.value",
           "var.self_managed_node_group_defaults.kernel_id",
           "var.self_managed_node_group_defaults"
          ]
         },
         "key_name": {
          "references": [
           "each.value.key_name",
           "each.value",
           "var.self_managed_node_group_defaults.key_name",
           "var.self_managed_node_group_defaults"
          ]
         },
         "launch_template_default_version": {
          "references": [
           "each.value.launch_template_default_version",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_default_version",
           "var.self_managed_node_group_defaults"
          ]
         },
         "launch_template_description": {
          "references": [
           "each.value.launch_template_description",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_description",
           "var.self_managed_node_group_defaults",
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "launch_template_id": {
          "references": [
           "each.value.launch_template_id",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_id",
           "var.self_managed_node_group_defaults"
          ]
         },
         "launch_template_name": {
          "references": [
           "each.value.launch_template_name",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_name",
           "var.self_managed_node_group_defaults",
           "each.key"
          ]
         },
         "launch_template_tags": {
          "references": [
           "each.value.launch_template_tags",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "launch_template_use_name_prefix": {
          "references": [
           "each.value.launch_template_use_name_prefix",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_use_name_prefix",
           "var.self_managed_node_group_defaults"
          ]
         },
         "launch_template_version": {
          "references": [
           "each.value.launch_template_version",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_version",
           "var.self_managed_node_group_defaults"
          ]
         },
         "license_specifications": {
          "references": [
           "each.value.license_specifications",
           "each.value",
           "var.self_managed_node_group_defaults.license_specifications",
           "var.self_managed_node_group_defaults"
          ]
         },
         "maintenance_options": {
          "references": [
           "each.value.maintenance_options",
           "each.value",
           "var.self_managed_node_group_defaults.maintenance_options",
           "var.self_managed_node_group_defaults"
          ]
         },
         "max_instance_lifetime": {
          "references": [
           "each.value.max_instance_lifetime",
           "each.value",
           "var.self_managed_node_group_defaults.max_instance_lifetime",
           "var.self_managed_node_group_defaults"
          ]
         },
         "max_size": {
          "references": [
           "each.value.max_size",
           "each.value",
           "var.self_managed_node_group_defaults.max_size",
           "var.self_managed_node_group_defaults"
          ]
         },
         "metadata_options": {
          "references": [
           "each.value.metadata_options",
           "each.value",
           "var.self_managed_node_group_defaults.metadata_options",
           "var.self_managed_node_group_defaults",
           "local.metadata_options"
          ]
         },
         "metrics_granularity": {
          "references": [
           "each.value.metrics_granularity",
           "each.value",
           "var.self_managed_node_group_defaults.metrics_granularity",
           "var.self_managed_node_group_defaults"
          ]
         },
         "min_elb_capacity": {
          "references": [
           "each.value.min_elb_capacity",
           "each.value",
           "var.self_managed_node_group_defaults.min_elb_capacity",
           "var.self_managed_node_group_defaults"
          ]
         },
         "min_size": {
          "references": [
           "each.value.min_size",
           "each.value",
           "var.self_managed_node_group_defaults.min_size",
           "var.self_managed_node_group_defaults"
          ]
         },
         "mixed_instances_policy": {
          "references": [
           "each.value.mixed_instances_policy",
           "each.value",
           "var.self_managed_node_group_defaults.mixed_instances_policy",
           "var.self_managed_node_group_defaults"
          ]
         },
         "name": {
          "references": [
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "network_interfaces": {
          "references": [
           "each.value.network_interfaces",
           "each.value",
           "var.self_managed_node_group_defaults.network_interfaces",
           "var.self_managed_node_group_defaults"
          ]
         },
         "placement": {
          "references": [
           "each.value.placement",
           "each.value",
           "var.self_managed_node_group_defaults.placement",
           "var.self_managed_node_group_defaults"
          ]
         },
         "placement_group": {
          "references": [
           "each.value.placement_group",
           "each.value",
           "var.self_managed_node_group_defaults.placement_group",
           "var.self_managed_node_group_defaults"
          ]
         },
         "platform": {
          "references": [
           "each.value.platform",
           "each.value",
           "var.self_managed_node_group_defaults.platform",
           "var.self_managed_node_group_defaults"
          ]
         },
         "post_bootstrap_user_data": {
          "references": [
           "each.value.post_bootstrap_user_data",
           "each.value",
           "var.self_managed_node_group_defaults.post_bootstrap_user_data",
           "var.self_managed_node_group_defaults"
          ]
         },
         "pre_bootstrap_user_data": {
          "references": [
           "each.value.pre_bootstrap_user_data",
           "each.value",
           "var.self_managed_node_group_defaults.pre_bootstrap_user_data",
           "var.self_managed_node_group_defaults"
          ]
         },
         "private_dns_name_options": {
          "references": [
           "each.value.private_dns_name_options",
           "each.value",
           "var.self_managed_node_group_defaults.private_dns_name_options",
           "var.self_managed_node_group_defaults"
          ]
         },
         "protect_from_scale_in": {
          "references": [
           "each.value.protect_from_scale_in",
           "each.value",
           "var.self_managed_node_group_defaults.protect_from_scale_in",
           "var.self_managed_node_group_defaults"
          ]
         },
         "ram_disk_id": {
          "references": [
           "each.value.ram_disk_id",
           "each.value",
           "var.self_managed_node_group_defaults.ram_disk_id",
           "var.self_managed_node_group_defaults"
          ]
         },
         "schedules": {
          "references": [
           "each.value.schedules",
           "each.value",
           "var.self_managed_node_group_defaults.schedules",
           "var.self_managed_node_group_defaults"
          ]
         },
         "service_linked_role_arn": {
          "references": [
           "each.value.service_linked_role_arn",
           "each.value",
           "var.self_managed_node_group_defaults.service_linked_role_arn",
           "var.self_managed_node_group_defaults"
          ]
         },
         "subnet_ids": {
          "references": [
           "each.value.subnet_ids",
           "each.value",
           "var.self_managed_node_group_defaults.subnet_ids",
           "var.self_managed_node_group_defaults",
           "var.subnet_ids"
          ]
         },
         "suspended_processes": {
          "references": [
           "each.value.suspended_processes",
           "each.value",
           "var.self_managed_node_group_defaults.suspended_processes",
           "var.self_managed_node_group_defaults"
          ]
         },
         "tag_specifications": {
          "references": [
           "each.value.tag_specifications",
           "each.value",
           "var.self_managed_node_group_defaults.tag_specifications",
           "var.self_managed_node_group_defaults"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "each.value.tags",
           "each.value",
           "var.self_managed_node_group_defaults.tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "target_group_arns": {
          "references": [
           "each.value.target_group_arns",
           "each.value",
           "var.self_managed_node_group_defaults.target_group_arns",
           "var.self_managed_node_group_defaults"
          ]
         },
         "termination_policies": {
          "references": [
           "each.value.termination_policies",
           "each.value",
           "var.self_managed_node_group_defaults.termination_policies",
           "var.self_managed_node_group_defaults"
          ]
         },
         "update_launch_template_default_version": {
          "references": [
           "each.value.update_launch_template_default_version",
           "each.value",
           "var.self_managed_node_group_defaults.update_launch_template_default_version",
           "var.self_managed_node_group_defaults"
          ]
         },
         "use_mixed_instances_policy": {
          "references": [
           "each.value.use_mixed_instances_policy",
           "each.value",
           "var.self_managed_node_group_defaults.use_mixed_instances_policy",
           "var.self_managed_node_group_defaults"
          ]
         },
         "use_name_prefix": {
          "references": [
           "each.value.use_name_prefix",
           "each.value",
           "var.self_managed_node_group_defaults.use_name_prefix",
           "var.self_managed_node_group_defaults"
          ]
         },
         "user_data_template_path": {
          "references": [
           "each.value.user_data_template_path",
           "each.value",
           "var.self_managed_node_group_defaults.user_data_template_path",
           "var.self_managed_node_group_defaults"
          ]
         },
         "vpc_security_group_ids": {
          "references": [
           "local.node_security_group_id",
           "each.value.vpc_security_group_ids",
           "each.value",
           "var.self_managed_node_group_defaults.vpc_security_group_ids",
           "var.self_managed_node_group_defaults"
          ]
         },
         "wait_for_capacity_timeout": {
          "references": [
           "each.value.wait_for_capacity_timeout",
           "each.value",
           "var.self_managed_node_group_defaults.wait_for_capacity_timeout",
           "var.self_managed_node_group_defaults"
          ]
         },
         "wait_for_elb_capacity": {
          "references": [
           "each.value.wait_for_elb_capacity",
           "each.value",
           "var.self_managed_node_group_defaults.wait_for_elb_capacity",
           "var.self_managed_node_group_defaults"
          ]
         },
         "warm_pool": {
          "references": [
           "each.value.warm_pool",
           "each.value",
           "var.self_managed_node_group_defaults.warm_pool",
           "var.self_managed_node_group_defaults"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.self_managed_node_groups",
          "var.create"
         ]
        },
        "module": {
         "module_calls": {
          "user_data": {
           "expressions": {
            "bootstrap_extra_args": {
             "references": [
              "var.bootstrap_extra_args"
             ]
            },
            "cluster_auth_base64": {
             "references": [
              "var.cluster_auth_base64"
             ]
            },
            "cluster_endpoint": {
             "references": [
              "var.cluster_endpoint"
             ]
            },
            "cluster_name": {
             "references": [
              "var.cluster_name"
             ]
            },
            "create": {
             "references": [
              "var.create"
             ]
            },
            "enable_bootstrap_user_data": {
             "constant_value": true
            },
            "is_eks_managed_node_group": {
             "constant_value": false
            },
            "platform": {
             "references": [
              "var.platform"
             ]
            },
            "post_bootstrap_user_data": {
             "references": [
              "var.post_bootstrap_user_data"
             ]
            },
            "pre_bootstrap_user_data": {
             "references": [
              "var.pre_bootstrap_user_data"
             ]
            },
            "user_data_template_path": {
             "references": [
              "var.user_data_template_path"
             ]
            }
           },
           "module": {
            "outputs": {
             "user_data": {
              "description": "Base64 encoded user data rendered for the provided inputs",
              "expression": {
               "references": [
                "local.platform",
                "var.platform"
               ]
              }
             }
            },
            "resources": [
             {
              "address": "data.cloudinit_config.linux_eks_managed_node_group",
              "count_expression": {
               "references": [
                "var.create",
                "var.platform",
                "var.is_eks_managed_node_group",
                "var.enable_bootstrap_user_data",
                "var.pre_bootstrap_user_data",
                "var.user_data_template_path"
               ]
              },
              "expressions": {
               "base64_encode": {
                "constant_value": true
               },
               "boundary": {
                "constant_value": "//"
               },
               "gzip": {
                "constant_value": false
               },
               "part": [
                {
                 "content": {
                  "references": [
                   "var.pre_bootstrap_user_data"
                  ]
                 },
                 "content_type": {
                  "constant_value": "text/x-shellscript"
                 }
                }
               ]
              },
              "mode": "data",
              "name": "linux_eks_managed_node_group",
              "provider_config_key": "module.eks.module.self_managed_node_group.module.user_data:cloudinit",
              "schema_version": 0,
              "type": "cloudinit_config"
             }
            ],
            "variables": {
             "bootstrap_extra_args": {
              "default": "",
              "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
             },
             "cluster_auth_base64": {
              "default": "",
              "description": "Base64 encoded CA of associated EKS cluster"
             },
             "cluster_endpoint": {
              "default": "",
              "description": "Endpoint of associated EKS cluster"
             },
             "cluster_name": {
              "default": "",
              "description": "Name of the EKS cluster"
             },
             "cluster_service_ipv4_cidr": {
              "default": null,
              "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
             },
             "create": {
              "default": true,
              "description": "Determines whether to create user-data or not"
             },
             "enable_bootstrap_user_data": {
              "default": false,
              "description": "Determines whether the bootstrap configurations are populated within the user data template"
             },
             "is_eks_managed_node_group": {
              "default": true,
              "description": "Determines whether the user data is used on nodes in an EKS managed node group. Used to determine if user data will be appended or not"
             },
             "platform": {
              "default": "linux",
              "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based"
             },
             "post_bootstrap_user_data": {
              "default": "",
              "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
             },
             "pre_bootstrap_user_data": {
              "default": "",
              "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
             },
             "user_data_template_path": {
              "default": "",
              "description": "Path to a local, custom user data template file to use when rendering user data"
             }
            }
           },
           "source": "../_user_data"
          }
         },
         "outputs": {
          "autoscaling_group_arn": {
           "description": "The ARN for this autoscaling group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].arn",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_availability_zones": {
           "description": "The availability zones of the autoscaling group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].availability_zones",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_default_cooldown": {
           "description": "Time between a scaling activity and the succeeding scaling activity",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].default_cooldown",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_desired_capacity": {
           "description": "The number of Amazon EC2 instances that should be running in the group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].desired_capacity",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_health_check_grace_period": {
           "description": "Time after instance comes into service before checking health",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].health_check_grace_period",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_health_check_type": {
           "description": "EC2 or ELB. Controls how health checking is done",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].health_check_type",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_id": {
           "description": "The autoscaling group id",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].id",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_max_size": {
           "description": "The maximum size of the autoscaling group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].max_size",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_min_size": {
           "description": "The minimum size of the autoscaling group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].min_size",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_name": {
           "description": "The autoscaling group name",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].name",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_schedule_arns": {
           "description": "ARNs of autoscaling group schedules",
           "expression": {
            "references": [
             "aws_autoscaling_schedule.this"
            ]
           }
          },
          "autoscaling_group_vpc_zone_identifier": {
           "description": "The VPC zone identifier",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].vpc_zone_identifier",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "iam_instance_profile_arn": {
           "description": "ARN assigned by AWS to the instance profile",
           "expression": {
            "references": [
             "aws_iam_instance_profile.this[0].arn",
             "aws_iam_instance_profile.this[0]",
             "aws_iam_instance_profile.this",
             "var.iam_instance_profile_arn"
            ]
           }
          },
          "iam_instance_profile_id": {
           "description": "Instance profile's ID",
           "expression": {
            "references": [
             "aws_iam_instance_profile.this[0].id",
             "aws_iam_instance_profile.this[0]",
             "aws_iam_instance_profile.this"
            ]
           }
          },
          "iam_instance_profile_unique": {
           "description": "Stable and unique string identifying the IAM instance profile",
           "expression": {
            "references": [
             "aws_iam_instance_profile.this[0].unique_id",
             "aws_iam_instance_profile.this[0]",
             "aws_iam_instance_profile.this"
            ]
           }
          },
          "iam_role_arn": {
           "description": "The Amazon Resource Name (ARN) specifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].arn",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "iam_role_name": {
           "description": "The name of the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].name",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "iam_role_unique_id": {
           "description": "Stable and unique string identifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].unique_id",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "image_id": {
           "description": "ID of the image",
           "expression": {
            "references": [
             "aws_launch_template.this[0].image_id",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_arn": {
           "description": "The ARN of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].arn",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_id": {
           "description": "The ID of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].id",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_latest_version": {
           "description": "The latest version of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].latest_version",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_name": {
           "description": "The name of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].name",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "platform": {
           "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based",
           "expression": {
            "references": [
             "var.platform"
            ]
           }
          },
          "user_data": {
           "description": "Base64 encoded user data",
           "expression": {
            "references": [
             "module.user_data.user_data",
             "module.user_data"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_autoscaling_group.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_autoscaling_group"
            ]
           },
           "expressions": {
            "availability_zones": {
             "references": [
              "var.availability_zones"
             ]
            },
            "capacity_rebalance": {
             "references": [
              "var.capacity_rebalance"
             ]
            },
            "context": {
             "references": [
              "var.context"
             ]
            },
            "default_cooldown": {
             "references": [
              "var.default_cooldown"
             ]
            },
            "default_instance_warmup": {
             "references": [
              "var.default_instance_warmup"
             ]
            },
            "desired_capacity": {
             "references": [
              "var.desired_size"
             ]
            },
            "enabled_metrics": {
             "references": [
              "var.enabled_metrics"
             ]
            },
            "force_delete": {
             "references": [
              "var.force_delete"
             ]
            },
            "force_delete_warm_pool": {
             "references": [
              "var.force_delete_warm_pool"
             ]
            },
            "health_check_grace_period": {
             "references": [
              "var.health_check_grace_period"
             ]
            },
            "health_check_type": {
             "references": [
              "var.health_check_type"
             ]
            },
            "max_instance_lifetime": {
             "references": [
              "var.max_instance_lifetime"
             ]
            },
            "max_size": {
             "references": [
              "var.max_size"
             ]
            },
            "metrics_granularity": {
             "references": [
              "var.metrics_granularity"
             ]
            },
            "min_elb_capacity": {
             "references": [
              "var.min_elb_capacity"
             ]
            },
            "min_size": {
             "references": [
              "var.min_size"
             ]
            },
            "name": {
             "references": [
              "var.use_name_prefix",
              "var.name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.use_name_prefix",
              "var.name"
             ]
            },
            "placement_group": {
             "references": [
              "var.placement_group"
             ]
            },
            "protect_from_scale_in": {
             "references": [
              "var.protect_from_scale_in"
             ]
            },
            "service_linked_role_arn": {
             "references": [
              "var.service_linked_role_arn"
             ]
            },
            "suspended_processes": {
             "references": [
              "var.suspended_processes"
             ]
            },
            "target_group_arns": {
             "references": [
              "var.target_group_arns"
             ]
            },
            "termination_policies": {
             "references": [
              "var.termination_policies"
             ]
            },
            "timeouts": {
             "delete": {
              "references": [
               "var.delete_timeout"
              ]
             }
            },
            "vpc_zone_identifier": {
             "references": [
              "var.subnet_ids"
             ]
            },
            "wait_for_capacity_timeout": {
             "references": [
              "var.wait_for_capacity_timeout"
             ]
            },
            "wait_for_elb_capacity": {
             "references": [
              "var.wait_for_elb_capacity"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_autoscaling_group"
          },
          {
           "address": "aws_autoscaling_schedule.this",
           "expressions": {
            "autoscaling_group_name": {
             "references": [
              "aws_autoscaling_group.this[0].name",
              "aws_autoscaling_group.this[0]",
              "aws_autoscaling_group.this"
             ]
            },
            "desired_capacity": {
             "references": [
              "each.value.desired_size",
              "each.value"
             ]
            },
            "end_time": {
             "references": [
              "each.value.end_time",
              "each.value"
             ]
            },
            "max_size": {
             "references": [
              "each.value.max_size",
              "each.value"
             ]
            },
            "min_size": {
             "references": [
              "each.value.min_size",
              "each.value"
             ]
            },
            "recurrence": {
             "references": [
              "each.value.recurrence",
              "each.value"
             ]
            },
            "scheduled_action_name": {
             "references": [
              "each.key"
             ]
            },
            "start_time": {
             "references": [
              "each.value.start_time",
              "each.value"
             ]
            },
            "time_zone": {
             "references": [
              "each.value.time_zone",
              "each.value"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.schedules",
             "var.create",
             "var.create_schedule"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_autoscaling_schedule"
          },
          {
           "address": "aws_iam_instance_profile.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_instance_profile"
            ]
           },
           "expressions": {
            "name": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "path": {
             "references": [
              "var.iam_role_path"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.iam_role_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_instance_profile"
          },
          {
           "address": "aws_iam_role.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_instance_profile"
            ]
           },
           "expressions": {
            "assume_role_policy": {
             "references": [
              "data.aws_iam_policy_document.assume_role_policy[0].json",
              "data.aws_iam_policy_document.assume_role_policy[0]",
              "data.aws_iam_policy_document.assume_role_policy"
             ]
            },
            "description": {
             "references": [
              "var.iam_role_description"
             ]
            },
            "force_detach_policies": {
             "constant_value": true
            },
            "name": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "path": {
             "references": [
              "var.iam_role_path"
             ]
            },
            "permissions_boundary": {
             "references": [
              "var.iam_role_permissions_boundary"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.iam_role_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role"
          },
          {
           "address": "aws_iam_role_policy_attachment.additional",
           "expressions": {
            "policy_arn": {
             "references": [
              "each.value"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.iam_role_additional_policies",
             "var.create",
             "var.create_iam_instance_profile"
            ]
           },
           "mode": "managed",
           "name": "additional",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role_policy_attachment"
          },
          {
           "address": "aws_iam_role_policy_attachment.this",
           "expressions": {
            "policy_arn": {
             "references": [
              "each.value"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "local.iam_role_policy_prefix",
             "local.iam_role_policy_prefix",
             "var.iam_role_attach_cni_policy",
             "local.cni_policy",
             "var.create",
             "var.create_iam_instance_profile"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role_policy_attachment"
          },
          {
           "address": "aws_launch_template.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_launch_template"
            ]
           },
           "depends_on": [
            "aws_iam_role_policy_attachment.this"
           ],
           "expressions": {
            "default_version": {
             "references": [
              "var.launch_template_default_version"
             ]
            },
            "description": {
             "references": [
              "var.launch_template_description"
             ]
            },
            "disable_api_termination": {
             "references": [
              "var.disable_api_termination"
             ]
            },
            "ebs_optimized": {
             "references": [
              "var.ebs_optimized"
             ]
            },
            "iam_instance_profile": [
             {
              "arn": {
               "references": [
                "var.create_iam_instance_profile",
                "aws_iam_instance_profile.this[0].arn",
                "aws_iam_instance_profile.this[0]",
                "aws_iam_instance_profile.this",
                "var.iam_instance_profile_arn"
               ]
              }
             }
            ],
            "image_id": {
             "references": [
              "var.ami_id",
              "data.aws_ami.eks_default[0].image_id",
              "data.aws_ami.eks_default[0]",
              "data.aws_ami.eks_default"
             ]
            },
            "instance_initiated_shutdown_behavior": {
             "references": [
              "var.instance_initiated_shutdown_behavior"
             ]
            },
            "instance_type": {
             "references": [
              "var.instance_type"
             ]
            },
            "kernel_id": {
             "references": [
              "var.kernel_id"
             ]
            },
            "key_name": {
             "references": [
              "var.key_name"
             ]
            },
            "name": {
             "references": [
              "var.launch_template_use_name_prefix",
              "local.launch_template_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.launch_template_use_name_prefix",
              "local.launch_template_name"
             ]
            },
            "ram_disk_id": {
             "references": [
              "var.ram_disk_id"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            },
            "update_default_version": {
             "references": [
              "var.update_launch_template_default_version"
             ]
            },
            "user_data": {
             "references": [
              "module.user_data.user_data",
              "module.user_data"
             ]
            },
            "vpc_security_group_ids": {
             "references": [
              "var.network_interfaces",
              "local.security_group_ids"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_launch_template"
          },
          {
           "address": "data.aws_ami.eks_default",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_launch_template"
            ]
           },
           "expressions": {
            "filter": [
             {
              "name": {
               "constant_value": "name"
              },
              "values": {
               "references": [
                "var.cluster_version"
               ]
              }
             }
            ],
            "most_recent": {
             "constant_value": true
            },
            "owners": {
             "constant_value": [
              "amazon"
             ]
            }
           },
           "mode": "data",
           "name": "eks_default",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_ami"
          },
          {
           "address": "data.aws_caller_identity.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_caller_identity"
          },
          {
           "address": "data.aws_iam_policy_document.assume_role_policy",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_instance_profile"
            ]
           },
           "expressions": {
            "statement": [
             {
              "actions": {
               "constant_value": [
                "sts:AssumeRole"
               ]
              },
              "principals": [
               {
                "identifiers": {
                 "references": [
                  "data.aws_partition.current.dns_suffix",
                  "data.aws_partition.current"
                 ]
                },
                "type": {
                 "constant_value": "Service"
                }
               }
              ],
              "sid": {
               "constant_value": "EKSNodeAssumeRole"
              }
             }
            ]
           },
           "mode": "data",
           "name": "assume_role_policy",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy_document"
          },
          {
           "address": "data.aws_partition.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_partition"
          }
         ],
         "variables": {
          "ami_id": {
           "default": "",
           "description": "The AMI from which to launch the instance"
          },
          "autoscaling_group_tags": {
           "default": {},
           "description": "A map of additional tags to add to the autoscaling group created. Tags are applied to the autoscaling group only and are NOT propagated to instances"
          },
          "availability_zones": {
           "default": null,
           "description": "A list of one or more availability zones for the group. Used for EC2-Classic and default subnets when not specified with `subnet_ids` argument. Conflicts with `subnet_ids`"
          },
          "block_device_mappings": {
           "default": {},
           "description": "Specify volumes to attach to the instance besides the volumes specified by the AMI"
          },
          "bootstrap_extra_args": {
           "default": "",
           "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
          },
          "capacity_rebalance": {
           "default": null,
           "description": "Indicates whether capacity rebalance is enabled"
          },
          "capacity_reservation_specification": {
           "default": {},
           "description": "Targeting for EC2 capacity reservations"
          },
          "cluster_auth_base64": {
           "default": "",
           "description": "Base64 encoded CA of associated EKS cluster"
          },
          "cluster_endpoint": {
           "default": "",
           "description": "Endpoint of associated EKS cluster"
          },
          "cluster_ip_family": {
           "default": null,
           "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
          },
          "cluster_name": {
           "default": "",
           "description": "Name of associated EKS cluster"
          },
          "cluster_primary_security_group_id": {
           "default": null,
           "description": "The ID of the EKS cluster primary security group to associate with the instance(s). This is the security group that is automatically created by the EKS service"
          },
          "cluster_version": {
           "default": null,
           "description": "Kubernetes cluster version - used to lookup default AMI ID if one is not provided"
          },
          "context": {
           "default": null,
           "description": "Reserved"
          },
          "cpu_options": {
           "default": {},
           "description": "The CPU options for the instance"
          },
          "create": {
           "default": true,
           "description": "Determines whether to create self managed node group or not"
          },
          "create_autoscaling_group": {
           "default": true,
           "description": "Determines whether to create autoscaling group or not"
          },
          "create_iam_instance_profile": {
           "default": true,
           "description": "Determines whether an IAM instance profile is created or to use an existing IAM instance profile"
          },
          "create_launch_template": {
           "default": true,
           "description": "Determines whether to create launch template or not"
          },
          "create_schedule": {
           "default": true,
           "description": "Determines whether to create autoscaling group schedule or not"
          },
          "credit_specification": {
           "default": {},
           "description": "Customize the credit specification of the instance"
          },
          "default_cooldown": {
           "default": null,
           "description": "The amount of time, in seconds, after a scaling activity completes before another scaling activity can start"
          },
          "default_instance_warmup": {
           "default": null,
           "description": "Amount of time, in seconds, until a newly launched instance can contribute to the Amazon CloudWatch metrics. This delay lets an instance finish initializing before Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage data"
          },
          "delete_timeout": {
           "default": null,
           "description": "Delete timeout to wait for destroying autoscaling group"
          },
          "desired_size": {
           "default": 1,
           "description": "The number of Amazon EC2 instances that should be running in the autoscaling group"
          },
          "disable_api_termination": {
           "default": null,
           "description": "If true, enables EC2 instance termination protection"
          },
          "ebs_optimized": {
           "default": null,
           "description": "If true, the launched EC2 instance will be EBS-optimized"
          },
          "elastic_gpu_specifications": {
           "default": {},
           "description": "The elastic GPU to attach to the instance"
          },
          "elastic_inference_accelerator": {
           "default": {},
           "description": "Configuration block containing an Elastic Inference Accelerator to attach to the instance"
          },
          "enable_monitoring": {
           "default": true,
           "description": "Enables/disables detailed monitoring"
          },
          "enabled_metrics": {
           "default": [],
           "description": "A list of metrics to collect. The allowed values are `GroupDesiredCapacity`, `GroupInServiceCapacity`, `GroupPendingCapacity`, `GroupMinSize`, `GroupMaxSize`, `GroupInServiceInstances`, `GroupPendingInstances`, `GroupStandbyInstances`, `GroupStandbyCapacity`, `GroupTerminatingCapacity`, `GroupTerminatingInstances`, `GroupTotalCapacity`, `GroupTotalInstances`"
          },
          "enclave_options": {
           "default": {},
           "description": "Enable Nitro Enclaves on launched instances"
          },
          "force_delete": {
           "default": null,
           "description": "Allows deleting the Auto Scaling Group without waiting for all instances in the pool to terminate. You can force an Auto Scaling Group to delete even if it's in the process of scaling a resource. Normally, Terraform drains all the instances before deleting the group. This bypasses that behavior and potentially leaves resources dangling"
          },
          "force_delete_warm_pool": {
           "default": null,
           "description": "Allows deleting the Auto Scaling Group without waiting for all instances in the warm pool to terminate"
          },
          "health_check_grace_period": {
           "default": null,
           "description": "Time (in seconds) after instance comes into service before checking health"
          },
          "health_check_type": {
           "default": null,
           "description": "`EC2` or `ELB`. Controls how health checking is done"
          },
          "hibernation_options": {
           "default": {},
           "description": "The hibernation options for the instance"
          },
          "iam_instance_profile_arn": {
           "default": null,
           "description": "Amazon Resource Name (ARN) of an existing IAM instance profile that provides permissions for the node group. Required if `create_iam_instance_profile` = `false`"
          },
          "iam_role_additional_policies": {
           "default": {},
           "description": "Additional policies to be added to the IAM role"
          },
          "iam_role_attach_cni_policy": {
           "default": true,
           "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
          },
          "iam_role_description": {
           "default": null,
           "description": "Description of the role"
          },
          "iam_role_name": {
           "default": null,
           "description": "Name to use on IAM role created"
          },
          "iam_role_path": {
           "default": null,
           "description": "IAM role path"
          },
          "iam_role_permissions_boundary": {
           "default": null,
           "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
          },
          "iam_role_tags": {
           "default": {},
           "description": "A map of additional tags to add to the IAM role created"
          },
          "iam_role_use_name_prefix": {
           "default": true,
           "description": "Determines whether cluster IAM role name (`iam_role_name`) is used as a prefix"
          },
          "initial_lifecycle_hooks": {
           "default": [],
           "description": "One or more Lifecycle Hooks to attach to the Auto Scaling Group before instances are launched. The syntax is exactly the same as the separate `aws_autoscaling_lifecycle_hook` resource, without the `autoscaling_group_name` attribute. Please note that this will only work when creating a new Auto Scaling Group. For all other use-cases, please use `aws_autoscaling_lifecycle_hook` resource"
          },
          "instance_initiated_shutdown_behavior": {
           "default": null,
           "description": "Shutdown behavior for the instance. Can be `stop` or `terminate`. (Default: `stop`)"
          },
          "instance_market_options": {
           "default": {},
           "description": "The market (purchasing) option for the instance"
          },
          "instance_refresh": {
           "default": {
            "preferences": {
             "min_healthy_percentage": 66
            },
            "strategy": "Rolling"
           },
           "description": "If this block is configured, start an Instance Refresh when this Auto Scaling Group is updated"
          },
          "instance_requirements": {
           "default": {},
           "description": "The attribute requirements for the type of instance. If present then `instance_type` cannot be present"
          },
          "instance_type": {
           "default": "",
           "description": "The type of the instance to launch"
          },
          "kernel_id": {
           "default": null,
           "description": "The kernel ID"
          },
          "key_name": {
           "default": null,
           "description": "The key name that should be used for the instance"
          },
          "launch_template_default_version": {
           "default": null,
           "description": "Default Version of the launch template"
          },
          "launch_template_description": {
           "default": null,
           "description": "Description of the launch template"
          },
          "launch_template_id": {
           "default": "",
           "description": "The ID of an existing launch template to use. Required when `create_launch_template` = `false`"
          },
          "launch_template_name": {
           "default": null,
           "description": "Name of launch template to be created"
          },
          "launch_template_tags": {
           "default": {},
           "description": "A map of additional tags to add to the tag_specifications of launch template created"
          },
          "launch_template_use_name_prefix": {
           "default": true,
           "description": "Determines whether to use `launch_template_name` as is or create a unique name beginning with the `launch_template_name` as the prefix"
          },
          "launch_template_version": {
           "default": null,
           "description": "Launch template version. Can be version number, `$Latest`, or `$Default`"
          },
          "license_specifications": {
           "default": {},
           "description": "A map of license specifications to associate with"
          },
          "maintenance_options": {
           "default": {},
           "description": "The maintenance options for the instance"
          },
          "max_instance_lifetime": {
           "default": null,
           "description": "The maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 604800 and 31536000 seconds"
          },
          "max_size": {
           "default": 3,
           "description": "The maximum size of the autoscaling group"
          },
          "metadata_options": {
           "default": {
            "http_endpoint": "enabled",
            "http_put_response_hop_limit": "2",
            "http_tokens": "required"
           },
           "description": "Customize the metadata options for the instance"
          },
          "metrics_granularity": {
           "default": null,
           "description": "The granularity to associate with the metrics to collect. The only valid value is `1Minute`"
          },
          "min_elb_capacity": {
           "default": null,
           "description": "Setting this causes Terraform to wait for this number of instances to show up healthy in the ELB only on creation. Updates will not wait on ELB instance number changes"
          },
          "min_size": {
           "default": 0,
           "description": "The minimum size of the autoscaling group"
          },
          "mixed_instances_policy": {
           "default": null,
           "description": "Configuration block containing settings to define launch targets for Auto Scaling groups"
          },
          "name": {
           "default": "",
           "description": "Name of the Self managed Node Group"
          },
          "network_interfaces": {
           "default": [],
           "description": "Customize network interfaces to be attached at instance boot time"
          },
          "placement": {
           "default": {},
           "description": "The placement of the instance"
          },
          "placement_group": {
           "default": null,
           "description": "The name of the placement group into which you'll launch your instances, if any"
          },
          "platform": {
           "default": "linux",
           "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based"
          },
          "post_bootstrap_user_data": {
           "default": "",
           "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
          },
          "pre_bootstrap_user_data": {
           "default": "",
           "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
          },
          "private_dns_name_options": {
           "default": {},
           "description": "The options for the instance hostname. The default values are inherited from the subnet"
          },
          "protect_from_scale_in": {
           "default": false,
           "description": "Allows setting instance protection. The autoscaling group will not select instances with this setting for termination during scale in events."
          },
          "ram_disk_id": {
           "default": null,
           "description": "The ID of the ram disk"
          },
          "schedules": {
           "default": {},
           "description": "Map of autoscaling group schedule to create"
          },
          "service_linked_role_arn": {
           "default": null,
           "description": "The ARN of the service-linked role that the ASG will use to call other AWS services"
          },
          "subnet_ids": {
           "default": null,
           "description": "A list of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with `availability_zones`"
          },
          "suspended_processes": {
           "default": [],
           "description": "A list of processes to suspend for the Auto Scaling Group. The allowed values are `Launch`, `Terminate`, `HealthCheck`, `ReplaceUnhealthy`, `AZRebalance`, `AlarmNotification`, `ScheduledActions`, `AddToLoadBalancer`. Note that if you suspend either the `Launch` or `Terminate` process types, it can prevent your Auto Scaling Group from functioning properly"
          },
          "tag_specifications": {
           "default": [
            "instance",
            "volume",
            "network-interface"
           ],
           "description": "The tags to apply to the resources during launch"
          },
          "tags": {
           "default": {},
           "description": "A map of tags to add to all resources"
          },
          "target_group_arns": {
           "default": [],
           "description": "A set of `aws_alb_target_group` ARNs, for use with Application or Network Load Balancing"
          },
          "termination_policies": {
           "default": [],
           "description": "A list of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are `OldestInstance`, `NewestInstance`, `OldestLaunchConfiguration`, `ClosestToNextInstanceHour`, `OldestLaunchTemplate`, `AllocationStrategy`, `Default`"
          },
          "update_launch_template_default_version": {
           "default": true,
           "description": "Whether to update Default Version each update. Conflicts with `launch_template_default_version`"
          },
          "use_mixed_instances_policy": {
           "default": false,
           "description": "Determines whether to use a mixed instances policy in the autoscaling group or not"
          },
          "use_name_prefix": {
           "default": true,
           "description": "Determines whether to use `name` as is or create a unique name beginning with the `name` as the prefix"
          },
          "user_data_template_path": {
           "default": "",
           "description": "Path to a local, custom user data template file to use when rendering user data"
          },
          "vpc_security_group_ids": {
           "default": [],
           "description": "A list of security group IDs to associate"
          },
          "wait_for_capacity_timeout": {
           "default": null,
           "description": "A maximum duration that Terraform should wait for ASG instances to be healthy before timing out. (See also Waiting for Capacity below.) Setting this to '0' causes Terraform to skip all Capacity Waiting behavior."
          },
          "wait_for_elb_capacity": {
           "default": null,
           "description": "Setting this will cause Terraform to wait for exactly this number of healthy instances in all attached load balancers on both create and update operations. Takes precedence over `min_elb_capacity` behavior."
          },
          "warm_pool": {
           "default": {},
           "description": "If this block is configured, add a Warm Pool to the specified Auto Scaling group"
          }
         }
        },
        "source": "./modules/self-managed-node-group"
       }
      },
      "outputs": {
       "aws_auth_configmap_yaml": {
        "description": "[DEPRECATED - use `var.manage_aws_auth_configmap`] Formatted yaml output for base aws-auth configmap containing roles used in cluster node groups/fargate profiles",
        "expression": {
         "references": [
          "path.module",
          "module.eks_managed_node_group",
          "module.self_managed_node_group",
          "module.self_managed_node_group",
          "module.fargate_profile"
         ]
        }
       },
       "cloudwatch_log_group_arn": {
        "description": "Arn of cloudwatch log group created",
        "expression": {
         "references": [
          "aws_cloudwatch_log_group.this[0].arn",
          "aws_cloudwatch_log_group.this[0]",
          "aws_cloudwatch_log_group.this"
         ]
        }
       },
       "cloudwatch_log_group_name": {
        "description": "Name of cloudwatch log group created",
        "expression": {
         "references": [
          "aws_cloudwatch_log_group.this[0].name",
          "aws_cloudwatch_log_group.this[0]",
          "aws_cloudwatch_log_group.this"
         ]
        }
       },
       "cluster_addons": {
        "description": "Map of attribute maps for all EKS cluster addons enabled",
        "expression": {
         "references": [
          "aws_eks_addon.this",
          "aws_eks_addon.before_compute"
         ]
        }
       },
       "cluster_arn": {
        "description": "The Amazon Resource Name (ARN) of the cluster",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].arn",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_certificate_authority_data": {
        "description": "Base64 encoded certificate data required to communicate with the cluster",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].certificate_authority[0].data",
          "aws_eks_cluster.this[0].certificate_authority[0]",
          "aws_eks_cluster.this[0].certificate_authority",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_endpoint": {
        "description": "Endpoint for your Kubernetes API server",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].endpoint",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_iam_role_arn": {
        "description": "IAM role ARN of the EKS cluster",
        "expression": {
         "references": [
          "aws_iam_role.this[0].arn",
          "aws_iam_role.this[0]",
          "aws_iam_role.this"
         ]
        }
       },
       "cluster_iam_role_name": {
        "description": "IAM role name of the EKS cluster",
        "expression": {
         "references": [
          "aws_iam_role.this[0].name",
          "aws_iam_role.this[0]",
          "aws_iam_role.this"
         ]
        }
       },
       "cluster_iam_role_unique_id": {
        "description": "Stable and unique string identifying the IAM role",
        "expression": {
         "references": [
          "aws_iam_role.this[0].unique_id",
          "aws_iam_role.this[0]",
          "aws_iam_role.this"
         ]
        }
       },
       "cluster_id": {
        "description": "The ID of the EKS cluster. Note: currently a value is returned only for local EKS clusters created on Outposts",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].cluster_id",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_identity_providers": {
        "description": "Map of attribute maps for all EKS identity providers enabled",
        "expression": {
         "references": [
          "aws_eks_identity_provider_config.this"
         ]
        }
       },
       "cluster_name": {
        "description": "The name of the EKS cluster",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].name",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_oidc_issuer_url": {
        "description": "The URL on the EKS cluster for the OpenID Connect identity provider",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
          "aws_eks_cluster.this[0].identity[0].oidc[0]",
          "aws_eks_cluster.this[0].identity[0].oidc",
          "aws_eks_cluster.this[0].identity[0]",
          "aws_eks_cluster.this[0].identity",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_platform_version": {
        "description": "Platform version for the cluster",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].platform_version",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_primary_security_group_id": {
        "description": "Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication. Referred to as 'Cluster security group' in the EKS console",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
          "aws_eks_cluster.this[0].vpc_config[0]",
          "aws_eks_cluster.this[0].vpc_config",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_security_group_arn": {
        "description": "Amazon Resource Name (ARN) of the cluster security group",
        "expression": {
         "references": [
          "aws_security_group.cluster[0].arn",
          "aws_security_group.cluster[0]",
          "aws_security_group.cluster"
         ]
        }
       },
       "cluster_security_group_id": {
        "description": "ID of the cluster security group",
        "expression": {
         "references": [
          "aws_security_group.cluster[0].id",
          "aws_security_group.cluster[0]",
          "aws_security_group.cluster"
         ]
        }
       },
       "cluster_status": {
        "description": "Status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].status",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_tls_certificate_sha1_fingerprint": {
        "description": "The SHA1 fingerprint of the public key of the cluster's certificate",
        "expression": {
         "references": [
          "data.tls_certificate.this[0].certificates[0].sha1_fingerprint",
          "data.tls_certificate.this[0].certificates[0]",
          "data.tls_certificate.this[0].certificates",
          "data.tls_certificate.this[0]",
          "data.tls_certificate.this"
         ]
        }
       },
       "cluster_version": {
        "description": "The Kubernetes version for the cluster",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].version",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "eks_managed_node_groups": {
        "description": "Map of attribute maps for all EKS managed node groups created",
        "expression": {
         "references": [
          "module.eks_managed_node_group"
         ]
        }
       },
       "eks_managed_node_groups_autoscaling_group_names": {
        "description": "List of the autoscaling group names created by EKS managed node groups",
        "expression": {
         "references": [
          "module.eks_managed_node_group"
         ]
        }
       },
       "fargate_profiles": {
        "description": "Map of attribute maps for all EKS Fargate Profiles created",
        "expression": {
         "references": [
          "module.fargate_profile"
         ]
        }
       },
       "kms_key_arn": {
        "description": "The Amazon Resource Name (ARN) of the key",
        "expression": {
         "references": [
          "module.kms.key_arn",
          "module.kms"
         ]
        }
       },
       "kms_key_id": {
        "description": "The globally unique identifier for the key",
        "expression": {
         "references": [
          "module.kms.key_id",
          "module.kms"
         ]
        }
       },
       "kms_key_policy": {
        "description": "The IAM resource policy set on the key",
        "expression": {
         "references": [
          "module.kms.key_policy",
          "module.kms"
         ]
        }
       },
       "node_security_group_arn": {
        "description": "Amazon Resource Name (ARN) of the node shared security group",
        "expression": {
         "references": [
          "aws_security_group.node[0].arn",
          "aws_security_group.node[0]",
          "aws_security_group.node"
         ]
        }
       },
       "node_security_group_id": {
        "description": "ID of the node shared security group",
        "expression": {
         "references": [
          "aws_security_group.node[0].id",
          "aws_security_group.node[0]",
          "aws_security_group.node"
         ]
        }
       },
       "oidc_provider": {
        "description": "The OpenID Connect identity provider (issuer URL without leading `https://`)",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
          "aws_eks_cluster.this[0].identity[0].oidc[0]",
          "aws_eks_cluster.this[0].identity[0].oidc",
          "aws_eks_cluster.this[0].identity[0]",
          "aws_eks_cluster.this[0].identity",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "oidc_provider_arn": {
        "description": "The ARN of the OIDC Provider if `enable_irsa = true`",
        "expression": {
         "references": [
          "aws_iam_openid_connect_provider.oidc_provider[0].arn",
          "aws_iam_openid_connect_provider.oidc_provider[0]",
          "aws_iam_openid_connect_provider.oidc_provider"
         ]
        }
       },
       "self_managed_node_groups": {
        "description": "Map of attribute maps for all self managed node groups created",
        "expression": {
         "references": [
          "module.self_managed_node_group"
         ]
        }
       },
       "self_managed_node_groups_autoscaling_group_names": {
        "description": "List of the autoscaling group names created by self-managed node groups",
        "expression": {
         "references": [
          "module.self_managed_node_group"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_cloudwatch_log_group.this",
        "count_expression": {
         "references": [
          "local.create",
          "var.create_cloudwatch_log_group"
         ]
        },
        "expressions": {
         "kms_key_id": {
          "references": [
           "var.cloudwatch_log_group_kms_key_id"
          ]
         },
         "name": {
          "references": [
           "var.cluster_name"
          ]
         },
         "retention_in_days": {
          "references": [
           "var.cloudwatch_log_group_retention_in_days"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.cluster_name"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_cloudwatch_log_group"
       },
       {
        "address": "aws_ec2_tag.cluster_primary_security_group",
        "expressions": {
         "key": {
          "references": [
           "each.key"
          ]
         },
         "resource_id": {
          "references": [
           "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
           "aws_eks_cluster.this[0].vpc_config[0]",
           "aws_eks_cluster.this[0].vpc_config",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "value": {
          "references": [
           "each.value"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.tags",
          "var.cluster_tags",
          "local.create",
          "var.create_cluster_primary_security_group_tags"
         ]
        },
        "mode": "managed",
        "name": "cluster_primary_security_group",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ec2_tag"
       },
       {
        "address": "aws_eks_addon.before_compute",
        "expressions": {
         "addon_name": {
          "references": [
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "addon_version": {
          "references": [
           "each.value.addon_version",
           "each.value",
           "data.aws_eks_addon_version.this",
           "each.key"
          ]
         },
         "cluster_name": {
          "references": [
           "aws_eks_cluster.this[0].name",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "configuration_values": {
          "references": [
           "each.value.configuration_values",
           "each.value"
          ]
         },
         "preserve": {
          "references": [
           "each.value.preserve",
           "each.value"
          ]
         },
         "resolve_conflicts": {
          "references": [
           "each.value.resolve_conflicts",
           "each.value"
          ]
         },
         "service_account_role_arn": {
          "references": [
           "each.value.service_account_role_arn",
           "each.value"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         },
         "timeouts": {
          "create": {
           "references": [
            "each.value.timeouts.create",
            "each.value.timeouts",
            "each.value",
            "var.cluster_addons_timeouts.create",
            "var.cluster_addons_timeouts"
           ]
          },
          "delete": {
           "references": [
            "each.value.timeouts.delete",
            "each.value.timeouts",
            "each.value",
            "var.cluster_addons_timeouts.delete",
            "var.cluster_addons_timeouts"
           ]
          },
          "update": {
           "references": [
            "each.value.timeouts.update",
            "each.value.timeouts",
            "each.value",
            "var.cluster_addons_timeouts.update",
            "var.cluster_addons_timeouts"
           ]
          }
         }
        },
        "for_each_expression": {
         "references": [
          "var.cluster_addons",
          "local.create",
          "local.create_outposts_local_cluster"
         ]
        },
        "mode": "managed",
        "name": "before_compute",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eks_addon"
       },
       {
        "address": "aws_eks_addon.this",
        "depends_on": [
         "module.fargate_profile",
         "module.eks_managed_node_group",
         "module.self_managed_node_group"
        ],
        "expressions": {
         "addon_name": {
          "references": [
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "addon_version": {
          "references": [
           "each.value.addon_version",
           "each.value",
           "data.aws_eks_addon_version.this",
           "each.key"
          ]
         },
         "cluster_name": {
          "references": [
           "aws_eks_cluster.this[0].name",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "configuration_values": {
          "references": [
           "each.value.configuration_values",
           "each.value"
          ]
         },
         "preserve": {
          "references": [
           "each.value.preserve",
           "each.value"
          ]
         },
         "resolve_conflicts": {
          "references": [
           "each.value.resolve_conflicts",
           "each.value"
          ]
         },
         "service_account_role_arn": {
          "references": [
           "each.value.service_account_role_arn",
           "each.value"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         },
         "timeouts": {
          "create": {
           "references": [
            "each.value.timeouts.create",
            "each.value.timeouts",
            "each.value",
            "var.cluster_addons_timeouts.create",
            "var.cluster_addons_timeouts"
           ]
          },
          "delete": {
           "references": [
            "each.value.timeouts.delete",
            "each.value.timeouts",
            "each.value",
            "var.cluster_addons_timeouts.delete",
            "var.cluster_addons_timeouts"
           ]
          },
          "update": {
           "references": [
            "each.value.timeouts.update",
            "each.value.timeouts",
            "each.value",
            "var.cluster_addons_timeouts.update",
            "var.cluster_addons_timeouts"
           ]
          }
         }
        },
        "for_each_expression": {
         "references": [
          "var.cluster_addons",
          "local.create",
          "local.create_outposts_local_cluster"
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eks_addon"
       },
       {
        "address": "aws_eks_cluster.this",
        "count_expression": {
         "references": [
          "local.create"
         ]
        },
        "depends_on": [
         "aws_iam_role_policy_attachment.this",
         "aws_security_group_rule.cluster",
         "aws_security_group_rule.node",
         "aws_cloudwatch_log_group.this",
         "aws_iam_policy.cni_ipv6_policy"
        ],
        "expressions": {
         "enabled_cluster_log_types": {
          "references": [
           "var.cluster_enabled_log_types"
          ]
         },
         "name": {
          "references": [
           "var.cluster_name"
          ]
         },
         "role_arn": {
          "references": [
           "local.cluster_role"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.cluster_tags"
          ]
         },
         "timeouts": {
          "create": {
           "references": [
            "var.cluster_timeouts"
           ]
          },
          "delete": {
           "references": [
            "var.cluster_timeouts"
           ]
          },
          "update": {
           "references": [
            "var.cluster_timeouts"
           ]
          }
         },
         "version": {
          "references": [
           "var.cluster_version"
          ]
         },
         "vpc_config": [
          {
           "endpoint_private_access": {
            "references": [
             "var.cluster_endpoint_private_access"
            ]
           },
           "endpoint_public_access": {
            "references": [
             "var.cluster_endpoint_public_access"
            ]
           },
           "public_access_cidrs": {
            "references": [
             "var.cluster_endpoint_public_access_cidrs"
            ]
           },
           "security_group_ids": {
            "references": [
             "var.cluster_additional_security_group_ids",
             "local.cluster_security_group_id"
            ]
           },
           "subnet_ids": {
            "references": [
             "var.control_plane_subnet_ids",
             "var.subnet_ids"
            ]
           }
          }
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eks_cluster"
       },
       {
        "address": "aws_eks_identity_provider_config.this",
        "expressions": {
         "cluster_name": {
          "references": [
           "aws_eks_cluster.this[0].name",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "oidc": [
          {
           "client_id": {
            "references": [
             "each.value.client_id",
             "each.value"
            ]
           },
           "groups_claim": {
            "references": [
             "each.value"
            ]
           },
           "groups_prefix": {
            "references": [
             "each.value"
            ]
           },
           "identity_provider_config_name": {
            "references": [
             "each.value.identity_provider_config_name",
             "each.value",
             "each.key"
            ]
           },
           "issuer_url": {
            "references": [
             "each.value.issuer_url",
             "each.value",
             "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
             "aws_eks_cluster.this[0].identity[0].oidc[0]",
             "aws_eks_cluster.this[0].identity[0].oidc",
             "aws_eks_cluster.this[0].identity[0]",
             "aws_eks_cluster.this[0].identity",
             "aws_eks_cluster.this[0]",
             "aws_eks_cluster.this"
            ]
           },
           "required_claims": {
            "references": [
             "each.value"
            ]
           },
           "username_claim": {
            "references": [
             "each.value"
            ]
           },
           "username_prefix": {
            "references": [
             "each.value"
            ]
           }
          }
         ],
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.cluster_identity_providers",
          "local.create",
          "local.create_outposts_local_cluster"
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eks_identity_provider_config"
       },
       {
        "address": "aws_iam_openid_connect_provider.oidc_provider",
        "count_expression": {
         "references": [
          "local.create",
          "var.enable_irsa",
          "local.create_outposts_local_cluster"
         ]
        },
        "expressions": {
         "client_id_list": {
          "references": [
           "local.dns_suffix",
           "var.openid_connect_audiences"
          ]
         },
         "tags": {
          "references": [
           "var.cluster_name",
           "var.tags"
          ]
         },
         "thumbprint_list": {
          "references": [
           "data.tls_certificate.this[0].certificates",
           "data.tls_certificate.this[0]",
           "data.tls_certificate.this",
           "var.custom_oidc_thumbprints"
          ]
         },
         "url": {
          "references": [
           "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
           "aws_eks_cluster.this[0].identity[0].oidc[0]",
           "aws_eks_cluster.this[0].identity[0].oidc",
           "aws_eks_cluster.this[0].identity[0]",
           "aws_eks_cluster.this[0].identity",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         }
        },
        "mode": "managed",
        "name": "oidc_provider",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_openid_connect_provider"
       },
       {
        "address": "aws_iam_policy.cluster_encryption",
        "count_expression": {
         "references": [
          "local.create_iam_role",
          "var.attach_cluster_encryption_policy",
          "local.enable_cluster_encryption_config"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.cluster_encryption_policy_description"
          ]
         },
         "name": {
          "references": [
           "var.cluster_encryption_policy_use_name_prefix",
           "local.cluster_encryption_policy_name"
          ]
         },
         "name_prefix": {
          "references": [
           "var.cluster_encryption_policy_use_name_prefix",
           "local.cluster_encryption_policy_name"
          ]
         },
         "path": {
          "references": [
           "var.cluster_encryption_policy_path"
          ]
         },
         "policy": {
          "references": [
           "var.create_kms_key",
           "module.kms.key_arn",
           "module.kms",
           "var.cluster_encryption_config.provider_key_arn",
           "var.cluster_encryption_config"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.cluster_encryption_policy_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "cluster_encryption",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy"
       },
       {
        "address": "aws_iam_policy.cni_ipv6_policy",
        "count_expression": {
         "references": [
          "var.create",
          "var.create_cni_ipv6_iam_policy"
         ]
        },
        "expressions": {
         "description": {
          "constant_value": "IAM policy for EKS CNI to assign IPV6 addresses"
         },
         "name": {
          "constant_value": "AmazonEKS_CNI_IPv6_Policy"
         },
         "policy": {
          "references": [
           "data.aws_iam_policy_document.cni_ipv6_policy[0].json",
           "data.aws_iam_policy_document.cni_ipv6_policy[0]",
           "data.aws_iam_policy_document.cni_ipv6_policy"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "mode": "managed",
        "name": "cni_ipv6_policy",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy"
       },
       {
        "address": "aws_iam_role.this",
        "count_expression": {
         "references": [
          "local.create_iam_role"
         ]
        },
        "expressions": {
         "assume_role_policy": {
          "references": [
           "data.aws_iam_policy_document.assume_role_policy[0].json",
           "data.aws_iam_policy_document.assume_role_policy[0]",
           "data.aws_iam_policy_document.assume_role_policy"
          ]
         },
         "description": {
          "references": [
           "var.iam_role_description"
          ]
         },
         "force_detach_policies": {
          "constant_value": true
         },
         "name": {
          "references": [
           "var.iam_role_use_name_prefix",
           "local.iam_role_name"
          ]
         },
         "name_prefix": {
          "references": [
           "var.iam_role_use_name_prefix",
           "local.iam_role_name",
           "var.prefix_separator"
          ]
         },
         "path": {
          "references": [
           "var.iam_role_path"
          ]
         },
         "permissions_boundary": {
          "references": [
           "var.iam_role_permissions_boundary"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.iam_role_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role"
       },
       {
        "address": "aws_iam_role_policy_attachment.additional",
        "expressions": {
         "policy_arn": {
          "references": [
           "each.value"
          ]
         },
         "role": {
          "references": [
           "aws_iam_role.this[0].name",
           "aws_iam_role.this[0]",
           "aws_iam_role.this"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.iam_role_additional_policies",
          "local.create_iam_role"
         ]
        },
        "mode": "managed",
        "name": "additional",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "aws_iam_role_policy_attachment.cluster_encryption",
        "count_expression": {
         "references": [
          "local.create_iam_role",
          "var.attach_cluster_encryption_policy",
          "local.enable_cluster_encryption_config"
         ]
        },
        "expressions": {
         "policy_arn": {
          "references": [
           "aws_iam_policy.cluster_encryption[0].arn",
           "aws_iam_policy.cluster_encryption[0]",
           "aws_iam_policy.cluster_encryption"
          ]
         },
         "role": {
          "references": [
           "aws_iam_role.this[0].name",
           "aws_iam_role.this[0]",
           "aws_iam_role.this"
          ]
         }
        },
        "mode": "managed",
        "name": "cluster_encryption",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "aws_iam_role_policy_attachment.this",
        "expressions": {
         "policy_arn": {
          "references": [
           "each.value"
          ]
         },
         "role": {
          "references": [
           "aws_iam_role.this[0].name",
           "aws_iam_role.this[0]",
           "aws_iam_role.this"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "local.create_outposts_local_cluster",
          "local.iam_role_policy_prefix",
          "local.iam_role_policy_prefix",
          "local.iam_role_policy_prefix",
          "local.create_iam_role"
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "aws_security_group.cluster",
        "count_expression": {
         "references": [
          "local.create_cluster_sg"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.cluster_security_group_description"
          ]
         },
         "name": {
          "references": [
           "var.cluster_security_group_use_name_prefix",
           "local.cluster_sg_name"
          ]
         },
         "name_prefix": {
          "references": [
           "var.cluster_security_group_use_name_prefix",
           "local.cluster_sg_name",
           "var.prefix_separator"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "local.cluster_sg_name",
           "var.cluster_security_group_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "var.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "cluster",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_security_group"
       },
       {
        "address": "aws_security_group.node",
        "count_expression": {
         "references": [
          "local.create_node_sg"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.node_security_group_description"
          ]
         },
         "name": {
          "references": [
           "var.node_security_group_use_name_prefix",
           "local.node_sg_name"
          ]
         },
         "name_prefix": {
          "references": [
           "var.node_security_group_use_name_prefix",
           "local.node_sg_name",
           "var.prefix_separator"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "local.node_sg_name",
           "var.cluster_name",
           "var.node_security_group_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "var.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "node",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_security_group"
       },
       {
        "address": "aws_security_group_rule.cluster",
        "expressions": {
         "cidr_blocks": {
          "references": [
           "each.value"
          ]
         },
         "description": {
          "references": [
           "each.value"
          ]
         },
         "from_port": {
          "references": [
           "each.value.from_port",
           "each.value"
          ]
         },
         "ipv6_cidr_blocks": {
          "references": [
           "each.value"
          ]
         },
         "prefix_list_ids": {
          "references": [
           "each.value"
          ]
         },
         "protocol": {
          "references": [
           "each.value.protocol",
           "each.value"
          ]
         },
         "security_group_id": {
          "references": [
           "aws_security_group.cluster[0].id",
           "aws_security_group.cluster[0]",
           "aws_security_group.cluster"
          ]
         },
         "self": {
          "references": [
           "each.value"
          ]
         },
         "source_security_group_id": {
          "references": [
           "each.value.source_node_security_group",
           "each.value",
           "local.node_security_group_id",
           "each.value"
          ]
         },
         "to_port": {
          "references": [
           "each.value.to_port",
           "each.value"
          ]
         },
         "type": {
          "references": [
           "each.value.type",
           "each.value"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "local.cluster_security_group_rules",
          "var.cluster_security_group_additional_rules",
          "local.create_cluster_sg"
         ]
        },
        "mode": "managed",
        "name": "cluster",
        "provider_config_key": "aws",
        "schema_version": 2,
        "type": "aws_security_group_rule"
       },
       {
        "address": "aws_security_group_rule.node",
        "expressions": {
         "cidr_blocks": {
          "references": [
           "each.value"
          ]
         },
         "description": {
          "references": [
           "each.value"
          ]
         },
         "from_port": {
          "references": [
           "each.value.from_port",
           "each.value"
          ]
         },
         "ipv6_cidr_blocks": {
          "references": [
           "each.value"
          ]
         },
         "prefix_list_ids": {
          "references": [
           "each.value"
          ]
         },
         "protocol": {
          "references": [
           "each.value.protocol",
           "each.value"
          ]
         },
         "security_group_id": {
          "references": [
           "aws_security_group.node[0].id",
           "aws_security_group.node[0]",
           "aws_security_group.node"
          ]
         },
         "self": {
          "references": [
           "each.value"
          ]
         },
         "source_security_group_id": {
          "references": [
           "each.value.source_cluster_security_group",
           "each.value",
           "local.cluster_security_group_id",
           "each.value"
          ]
         },
         "to_port": {
          "references": [
           "each.value.to_port",
           "each.value"
          ]
         },
         "type": {
          "references": [
           "each.value.type",
           "each.value"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "local.node_security_group_rules",
          "local.node_security_group_recommended_rules",
          "var.node_security_group_additional_rules",
          "local.create_node_sg"
         ]
        },
        "mode": "managed",
        "name": "node",
        "provider_config_key": "aws",
        "schema_version": 2,
        "type": "aws_security_group_rule"
       },
       {
        "address": "kubernetes_config_map.aws_auth",
        "count_expression": {
         "references": [
          "var.create",
          "var.create_aws_auth_configmap"
         ]
        },
        "expressions": {
         "data": {
          "references": [
           "local.aws_auth_configmap_data"
          ]
         },
         "metadata": [
          {
           "name": {
            "constant_value": "aws-auth"
           },
           "namespace": {
            "constant_value": "kube-system"
           }
          }
         ]
        },
        "mode": "managed",
        "name": "aws_auth",
        "provider_config_key": "module.eks:kubernetes",
        "schema_version": 0,
        "type": "kubernetes_config_map"
       },
       {
        "address": "kubernetes_config_map_v1_data.aws_auth",
        "count_expression": {
         "references": [
          "var.create",
          "var.manage_aws_auth_configmap"
         ]
        },
        "depends_on": [
         "kubernetes_config_map.aws_auth"
        ],
        "expressions": {
         "data": {
          "references": [
           "local.aws_auth_configmap_data"
          ]
         },
         "force": {
          "constant_value": true
         },
         "metadata": [
          {
           "name": {
            "constant_value": "aws-auth"
           },
           "namespace": {
            "constant_value": "kube-system"
           }
          }
         ]
        },
        "mode": "managed",
        "name": "aws_auth",
        "provider_config_key": "module.eks:kubernetes",
        "schema_version": 0,
        "type": "kubernetes_config_map_v1_data"
       },
       {
        "address": "time_sleep.this",
        "count_expression": {
         "references": [
          "var.create"
         ]
        },
        "expressions": {
         "create_duration": {
          "references": [
           "var.dataplane_wait_duration"
          ]
         },
         "triggers": {
          "references": [
           "aws_eks_cluster.this[0].name",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this",
           "aws_eks_cluster.this[0].endpoint",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this",
           "aws_eks_cluster.this[0].version",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this",
           "aws_eks_cluster.this[0].certificate_authority[0].data",
           "aws_eks_cluster.this[0].certificate_authority[0]",
           "aws_eks_cluster.this[0].certificate_authority",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "module.eks:time",
        "schema_version": 0,
        "type": "time_sleep"
       },
       {
        "address": "data.aws_caller_identity.current",
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_caller_identity"
       },
       {
        "address": "data.aws_eks_addon_version.this",
        "expressions": {
         "addon_name": {
          "references": [
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "kubernetes_version": {
          "references": [
           "var.cluster_version",
           "aws_eks_cluster.this[0].version",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "most_recent": {
          "references": [
           "each.value.most_recent",
           "each.value"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.cluster_addons",
          "local.create",
          "local.create_outposts_local_cluster"
         ]
        },
        "mode": "data",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eks_addon_version"
       },
       {
        "address": "data.aws_iam_policy_document.assume_role_policy",
        "count_expression": {
         "references": [
          "local.create",
          "var.create_iam_role"
         ]
        },
        "expressions": {
         "statement": [
          {
           "actions": {
            "constant_value": [
             "sts:AssumeRole"
            ]
           },
           "principals": [
            {
             "identifiers": {
              "references": [
               "local.dns_suffix"
              ]
             },
             "type": {
              "constant_value": "Service"
             }
            }
           ],
           "sid": {
            "constant_value": "EKSClusterAssumeRole"
           }
          }
         ]
        },
        "mode": "data",
        "name": "assume_role_policy",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy_document"
       },
       {
        "address": "data.aws_iam_policy_document.cni_ipv6_policy",
        "count_expression": {
         "references": [
          "var.create",
          "var.create_cni_ipv6_iam_policy"
         ]
        },
        "expressions": {
         "statement": [
          {
           "actions": {
            "constant_value": [
             "ec2:AssignIpv6Addresses",
             "ec2:DescribeInstances",
             "ec2:DescribeTags",
             "ec2:DescribeNetworkInterfaces",
             "ec2:DescribeInstanceTypes"
            ]
           },
           "resources": {
            "constant_value": [
             "*"
            ]
           },
           "sid": {
            "constant_value": "AssignDescribe"
           }
          },
          {
           "actions": {
            "constant_value": [
             "ec2:CreateTags"
            ]
           },
           "resources": {
            "references": [
             "data.aws_partition.current.partition",
             "data.aws_partition.current"
            ]
           },
           "sid": {
            "constant_value": "CreateTags"
           }
          }
         ]
        },
        "mode": "data",
        "name": "cni_ipv6_policy",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy_document"
       },
       {
        "address": "data.aws_iam_session_context.current",
        "expressions": {
         "arn": {
          "references": [
           "data.aws_caller_identity.current.arn",
           "data.aws_caller_identity.current"
          ]
         }
        },
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_session_context"
       },
       {
        "address": "data.aws_partition.current",
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_partition"
       },
       {
        "address": "data.tls_certificate.this",
        "count_expression": {
         "references": [
          "local.create",
          "var.enable_irsa",
          "local.create_outposts_local_cluster"
         ]
        },
        "expressions": {
         "url": {
          "references": [
           "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
           "aws_eks_cluster.this[0].identity[0].oidc[0]",
           "aws_eks_cluster.this[0].identity[0].oidc",
           "aws_eks_cluster.this[0].identity[0]",
           "aws_eks_cluster.this[0].identity",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         }
        },
        "mode": "data",
        "name": "this",
        "provider_config_key": "module.eks:tls",
        "schema_version": 0,
        "type": "tls_certificate"
       }
      ],
      "variables": {
       "attach_cluster_encryption_policy": {
        "default": true,
        "description": "Indicates whether or not to attach an additional policy for the cluster IAM role to utilize the encryption key provided"
       },
       "aws_auth_accounts": {
        "default": [],
        "description": "List of account maps to add to the aws-auth configmap"
       },
       "aws_auth_fargate_profile_pod_execution_role_arns": {
        "default": [],
        "description": "List of Fargate profile pod execution role ARNs to add to the aws-auth configmap"
       },
       "aws_auth_node_iam_role_arns_non_windows": {
        "default": [],
        "description": "List of non-Windows based node IAM role ARNs to add to the aws-auth configmap"
       },
       "aws_auth_node_iam_role_arns_windows": {
        "default": [],
        "description": "List of Windows based node IAM role ARNs to add to the aws-auth configmap"
       },
       "aws_auth_roles": {
        "default": [],
        "description": "List of role maps to add to the aws-auth configmap"
       },
       "aws_auth_users": {
        "default": [],
        "description": "List of user maps to add to the aws-auth configmap"
       },
       "cloudwatch_log_group_kms_key_id": {
        "default": null,
        "description": "If a KMS Key ARN is set, this key will be used to encrypt the corresponding log group. Please be sure that the KMS Key has an appropriate key policy (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)"
       },
       "cloudwatch_log_group_retention_in_days": {
        "default": 90,
        "description": "Number of days to retain log events. Default retention - 90 days"
       },
       "cluster_additional_security_group_ids": {
        "default": [],
        "description": "List of additional, externally created security group IDs to attach to the cluster control plane"
       },
       "cluster_addons": {
        "default": {},
        "description": "Map of cluster addon configurations to enable for the cluster. Addon name can be the map keys or set with `name`"
       },
       "cluster_addons_timeouts": {
        "default": {},
        "description": "Create, update, and delete timeout configurations for the cluster addons"
       },
       "cluster_enabled_log_types": {
        "default": [
         "audit",
         "api",
         "authenticator"
        ],
        "description": "A list of the desired control plane logs to enable. For more information, see Amazon EKS Control Plane Logging documentation (https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)"
       },
       "cluster_encryption_config": {
        "default": {
         "resources": [
          "secrets"
         ]
        },
        "description": "Configuration block with encryption configuration for the cluster. To disable secret encryption, set this value to `{}`"
       },
       "cluster_encryption_policy_description": {
        "default": "Cluster encryption policy to allow cluster role to utilize CMK provided",
        "description": "Description of the cluster encryption policy created"
       },
       "cluster_encryption_policy_name": {
        "default": null,
        "description": "Name to use on cluster encryption policy created"
       },
       "cluster_encryption_policy_path": {
        "default": null,
        "description": "Cluster encryption policy path"
       },
       "cluster_encryption_policy_tags": {
        "default": {},
        "description": "A map of additional tags to add to the cluster encryption policy created"
       },
       "cluster_encryption_policy_use_name_prefix": {
        "default": true,
        "description": "Determines whether cluster encryption policy name (`cluster_encryption_policy_name`) is used as a prefix"
       },
       "cluster_endpoint_private_access": {
        "default": true,
        "description": "Indicates whether or not the Amazon EKS private API server endpoint is enabled"
       },
       "cluster_endpoint_public_access": {
        "default": false,
        "description": "Indicates whether or not the Amazon EKS public API server endpoint is enabled"
       },
       "cluster_endpoint_public_access_cidrs": {
        "default": [
         "0.0.0.0/0"
        ],
        "description": "List of CIDR blocks which can access the Amazon EKS public API server endpoint"
       },
       "cluster_iam_role_dns_suffix": {
        "default": null,
        "description": "Base DNS domain name for the current partition (e.g., amazonaws.com in AWS Commercial, amazonaws.com.cn in AWS China)"
       },
       "cluster_identity_providers": {
        "default": {},
        "description": "Map of cluster identity provider configurations to enable for the cluster. Note - this is different/separate from IRSA"
       },
       "cluster_ip_family": {
        "default": null,
        "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created"
       },
       "cluster_name": {
        "default": "",
        "description": "Name of the EKS cluster"
       },
       "cluster_security_group_additional_rules": {
        "default": {},
        "description": "List of additional security group rules to add to the cluster security group created. Set `source_node_security_group = true` inside rules to set the `node_security_group` as source"
       },
       "cluster_security_group_description": {
        "default": "EKS cluster security group",
        "description": "Description of the cluster security group created"
       },
       "cluster_security_group_id": {
        "default": "",
        "description": "Existing security group ID to be attached to the cluster"
       },
       "cluster_security_group_name": {
        "default": null,
        "description": "Name to use on cluster security group created"
       },
       "cluster_security_group_tags": {
        "default": {},
        "description": "A map of additional tags to add to the cluster security group created"
       },
       "cluster_security_group_use_name_prefix": {
        "default": true,
        "description": "Determines whether cluster security group name (`cluster_security_group_name`) is used as a prefix"
       },
       "cluster_service_ipv4_cidr": {
        "default": null,
        "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
       },
       "cluster_service_ipv6_cidr": {
        "default": null,
        "description": "The CIDR block to assign Kubernetes pod and service IP addresses from if `ipv6` was specified when the cluster was created. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CIDR block when you create the cluster"
       },
       "cluster_tags": {
        "default": {},
        "description": "A map of additional tags to add to the cluster"
       },
       "cluster_timeouts": {
        "default": {},
        "description": "Create, update, and delete timeout configurations for the cluster"
       },
       "cluster_version": {
        "default": null,
        "description": "Kubernetes `\u003cmajor\u003e.\u003cminor\u003e` version to use for the EKS cluster (i.e.: `1.27`)"
       },
       "control_plane_subnet_ids": {
        "default": [],
        "description": "A list of subnet IDs where the EKS cluster control plane (ENIs) will be provisioned. Used for expanding the pool of subnets used by nodes/node groups without replacing the EKS control plane"
       },
       "create": {
        "default": true,
        "description": "Controls if EKS resources should be created (affects nearly all resources)"
       },
       "create_aws_auth_configmap": {
        "default": false,
        "description": "Determines whether to create the aws-auth configmap. NOTE - this is only intended for scenarios where the configmap does not exist (i.e. - when using only self-managed node groups). Most users should use `manage_aws_auth_configmap`"
       },
       "create_cloudwatch_log_group": {
        "default": true,
        "description": "Determines whether a log group is created by this module for the cluster logs. If not, AWS will automatically create one if logging is enabled"
       },
       "create_cluster_primary_security_group_tags": {
        "default": true,
        "description": "Indicates whether or not to tag the cluster's primary security group. This security group is created by the EKS service, not the module, and therefore tagging is handled after cluster creation"
       },
       "create_cluster_security_group": {
        "default": true,
        "description": "Determines if a security group is created for the cluster. Note: the EKS service creates a primary security group for the cluster by default"
       },
       "create_cni_ipv6_iam_policy": {
        "default": false,
        "description": "Determines whether to create an [`AmazonEKS_CNI_IPv6_Policy`](https://docs.aws.amazon.com/eks/latest/userguide/cni-iam-role.html#cni-iam-role-create-ipv6-policy)"
       },
       "create_iam_role": {
        "default": true,
        "description": "Determines whether a an IAM role is created or to use an existing IAM role"
       },
       "create_kms_key": {
        "default": true,
        "description": "Controls if a KMS key for cluster encryption should be created"
       },
       "create_node_security_group": {
        "default": true,
        "description": "Determines whether to create a security group for the node groups or use the existing `node_security_group_id`"
       },
       "custom_oidc_thumbprints": {
        "default": [],
        "description": "Additional list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificate(s)"
       },
       "dataplane_wait_duration": {
        "default": "30s",
        "description": "Duration to wait after the EKS cluster has become active before creating the dataplane components (EKS managed nodegroup(s), self-managed nodegroup(s), Fargate profile(s))"
       },
       "eks_managed_node_group_defaults": {
        "default": {},
        "description": "Map of EKS managed node group default configurations"
       },
       "eks_managed_node_groups": {
        "default": {},
        "description": "Map of EKS managed node group definitions to create"
       },
       "enable_irsa": {
        "default": true,
        "description": "Determines whether to create an OpenID Connect Provider for EKS to enable IRSA"
       },
       "enable_kms_key_rotation": {
        "default": true,
        "description": "Specifies whether key rotation is enabled. Defaults to `true`"
       },
       "fargate_profile_defaults": {
        "default": {},
        "description": "Map of Fargate Profile default configurations"
       },
       "fargate_profiles": {
        "default": {},
        "description": "Map of Fargate Profile definitions to create"
       },
       "iam_role_additional_policies": {
        "default": {},
        "description": "Additional policies to be added to the IAM role"
       },
       "iam_role_arn": {
        "default": null,
        "description": "Existing IAM role ARN for the cluster. Required if `create_iam_role` is set to `false`"
       },
       "iam_role_description": {
        "default": null,
        "description": "Description of the role"
       },
       "iam_role_name": {
        "default": null,
        "description": "Name to use on IAM role created"
       },
       "iam_role_path": {
        "default": null,
        "description": "Cluster IAM role path"
       },
       "iam_role_permissions_boundary": {
        "default": null,
        "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
       },
       "iam_role_tags": {
        "default": {},
        "description": "A map of additional tags to add to the IAM role created"
       },
       "iam_role_use_name_prefix": {
        "default": true,
        "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
       },
       "kms_key_administrators": {
        "default": [],
        "description": "A list of IAM ARNs for [key administrators](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-administrators). If no value is provided, the current caller identity is used to ensure at least one key admin is available"
       },
       "kms_key_aliases": {
        "default": [],
        "description": "A list of aliases to create. Note - due to the use of `toset()`, values must be static strings and not computed values"
       },
       "kms_key_deletion_window_in_days": {
        "default": null,
        "description": "The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key. If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`"
       },
       "kms_key_description": {
        "default": null,
        "description": "The description of the key as viewed in AWS console"
       },
       "kms_key_enable_default_policy": {
        "default": false,
        "description": "Specifies whether to enable the default key policy. Defaults to `false`"
       },
       "kms_key_override_policy_documents": {
        "default": [],
        "description": "List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid`"
       },
       "kms_key_owners": {
        "default": [],
        "description": "A list of IAM ARNs for those who will have full key permissions (`kms:*`)"
       },
       "kms_key_service_users": {
        "default": [],
        "description": "A list of IAM ARNs for [key service users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-service-integration)"
       },
       "kms_key_source_policy_documents": {
        "default": [],
        "description": "List of IAM policy documents that are merged together into the exported document. Statements must have unique `sid`s"
       },
       "kms_key_users": {
        "default": [],
        "description": "A list of IAM ARNs for [key users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-users)"
       },
       "manage_aws_auth_configmap": {
        "default": false,
        "description": "Determines whether to manage the aws-auth configmap"
       },
       "node_security_group_additional_rules": {
        "default": {},
        "description": "List of additional security group rules to add to the node security group created. Set `source_cluster_security_group = true` inside rules to set the `cluster_security_group` as source"
       },
       "node_security_group_description": {
        "default": "EKS node shared security group",
        "description": "Description of the node security group created"
       },
       "node_security_group_enable_recommended_rules": {
        "default": true,
        "description": "Determines whether to enable recommended security group rules for the node security group created. This includes node-to-node TCP ingress on ephemeral ports and allows all egress traffic"
       },
       "node_security_group_id": {
        "default": "",
        "description": "ID of an existing security group to attach to the node groups created"
       },
       "node_security_group_name": {
        "default": null,
        "description": "Name to use on node security group created"
       },
       "node_security_group_tags": {
        "default": {},
        "description": "A map of additional tags to add to the node security group created"
       },
       "node_security_group_use_name_prefix": {
        "default": true,
        "description": "Determines whether node security group name (`node_security_group_name`) is used as a prefix"
       },
       "openid_connect_audiences": {
        "default": [],
        "description": "List of OpenID Connect audience client IDs to add to the IRSA provider"
       },
       "outpost_config": {
        "default": {},
        "description": "Configuration for the AWS Outpost to provision the cluster on"
       },
       "prefix_separator": {
        "default": "-",
        "description": "The separator to use between the prefix and the generated timestamp for resource names"
       },
       "putin_khuylo": {
        "default": true,
        "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
       },
       "self_managed_node_group_defaults": {
        "default": {},
        "description": "Map of self-managed node group default configurations"
       },
       "self_managed_node_groups": {
        "default": {},
        "description": "Map of self-managed node group definitions to create"
       },
       "subnet_ids": {
        "default": [],
        "description": "A list of subnet IDs where the nodes/node groups will be provisioned. If `control_plane_subnet_ids` is not provided, the EKS cluster control plane (ENIs) will be provisioned in these subnets"
       },
       "tags": {
        "default": {},
        "description": "A map of tags to add to all resources"
       },
       "vpc_id": {
        "default": null,
        "description": "ID of the VPC where the cluster security group will be provisioned"
       }
      }
     },
     "source": "terraform-aws-modules/eks/aws"
    }
   },
   "outputs": {
    "cluster_endpoint": {
     "expression": {
      "references": [
       "module.eks.cluster_endpoint",
       "module.eks"
      ]
     }
    },
    "cluster_security_group_id": {
     "expression": {
      "references": [
       "module.eks.cluster_security_group_id",
       "module.eks"
      ]
     }
    },
    "route-table-id": {
     "expression": {
      "references": [
       "aws_route_table.private_route_table"
      ]
     }
    }
   },
   "resources": [
    {
     "address": "aws_alb.load_balancer",
     "expressions": {
      "enable_deletion_protection": {
       "constant_value": false
      },
      "internal": {
       "constant_value": true
      },
      "name": {
       "constant_value": "my-alb"
      },
      "security_groups": {
       "references": [
        "aws_security_group.eks_control_plane_sg.id",
        "aws_security_group.eks_control_plane_sg",
        "aws_security_group.worker_node_sg.id",
        "aws_security_group.worker_node_sg"
       ]
      },
      "subnets": {
       "references": [
        "aws_subnet.private_subnet"
       ]
      },
      "tags": {
       "constant_value": {
        "Name": "my-alb"
       }
      }
     },
     "mode": "managed",
     "name": "load_balancer",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_alb"
    },
    {
     "address": "aws_alb_listener.listener",
     "expressions": {
      "default_action": [
       {
        "target_group_arn": {
         "references": [
          "aws_alb_target_group.target_group.arn",
          "aws_alb_target_group.target_group"
         ]
        },
        "type": {
         "constant_value": "forward"
        }
       }
      ],
      "load_balancer_arn": {
       "references": [
        "aws_alb.load_balancer.arn",
        "aws_alb.load_balancer"
       ]
      },
      "port": {
       "constant_value": 80
      },
      "protocol": {
       "constant_value": "HTTP"
      }
     },
     "mode": "managed",
     "name": "listener",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_alb_listener"
    },
    {
     "address": "aws_alb_target_group.target_group",
     "expressions": {
      "health_check": [
       {
        "enabled": {
         "constant_value": true
        },
        "healthy_threshold": {
         "constant_value": 3
        },
        "interval": {
         "constant_value": 30
        },
        "path": {
         "constant_value": "/"
        },
        "port": {
         "constant_value": "traffic-port"
        },
        "timeout": {
         "constant_value": 5
        },
        "unhealthy_threshold": {
         "constant_value": 3
        }
       }
      ],
      "name": {
       "constant_value": "my-target-group"
      },
      "port": {
       "constant_value": 80
      },
      "protocol": {
       "constant_value": "HTTP"
      },
      "tags": {
       "constant_value": {
        "Name": "my-target-group"
       }
      },
      "vpc_id": {
       "references": [
        "aws_vpc.vpc.id",
        "aws_vpc.vpc"
       ]
      }
     },
     "mode": "managed",
     "name": "target_group",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_alb_target_group"
    },
    {
     "address": "aws_eip.my_eip",
     "expressions": {
      "domain": {
       "constant_value": "vpc"
      },
      "tags": {
       "references": [
        "each.key"
       ]
      }
     },
     "for_each_expression": {
      "references": [
       "aws_subnet.private_subnet"
      ]
     },
     "mode": "managed",
     "name": "my_eip",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_eip"
    },
    {
     "address": "aws_iam_instance_profile.worker",
     "depends_on": [
      "aws_iam_role.worker"
     ],
     "expressions": {
      "name": {
       "constant_value": "ed-eks-worker-new-profile"
      },
      "role": {
       "references": [
        "aws_iam_role.worker.name",
        "aws_iam_role.worker"
       ]
      }
     },
     "mode": "managed",
     "name": "worker",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_instance_profile"
    },
    {
     "address": "aws_iam_policy.autoscaler",
     "expressions": {
      "name": {
       "constant_value": "ed-eks-autoscaler-policy"
      },
      "policy": {
       "constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"autoscaling:DescribeAutoScalingGroups\",\n        \"autoscaling:DescribeAutoScalingInstances\",\n        \"autoscaling:DescribeTags\",\n        \"autoscaling:DescribeLaunchConfigurations\",\n        \"autoscaling:SetDesiredCapacity\",\n        \"autoscaling:TerminateInstanceInAutoScalingGroup\",\n        \"ec2:DescribeLaunchTemplateVersions\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
      }
     },
     "mode": "managed",
     "name": "autoscaler",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_policy"
    },
    {
     "address": "aws_iam_role.master",
     "expressions": {
      "assume_role_policy": {
       "constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n"
      },
      "name": {
       "constant_value": "ed-eks-master"
      }
     },
     "mode": "managed",
     "name": "master",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_role"
    },
    {
     "address": "aws_iam_role.worker",
     "expressions": {
      "assume_role_policy": {
       "constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n"
      },
      "name": {
       "constant_value": "ed-eks-worker"
      }
     },
     "mode": "managed",
     "name": "worker",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_role"
    },
    {
     "address": "aws_iam_role_policy_attachment.AmazonEC2ContainerRegistryReadOnly",
     "expressions": {
      "policy_arn": {
       "constant_value": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      },
      "role": {
       "references": [
        "aws_iam_role.worker.name",
        "aws_iam_role.worker"
       ]
      }
     },
     "mode": "managed",
     "name": "AmazonEC2ContainerRegistryReadOnly",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_role_policy_attachment"
    },
    {
     "address": "aws_iam_role_policy_attachment.AmazonEKSClusterPolicy",
     "expressions": {
      "policy_arn": {
       "constant_value": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      },
      "role": {
       "references": [
        "aws_iam_role.master.name",
        "aws_iam_role.master"
       ]
      }
     },
     "mode": "managed",
     "name": "AmazonEKSClusterPolicy",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_role_policy_attachment"
    },
    {
     "address": "aws_iam_role_policy_attachment.AmazonEKSServicePolicy",
     "expressions": {
      "policy_arn": {
       "constant_value": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"
      },
      "role": {
       "references": [
        "aws_iam_role.master.name",
        "aws_iam_role.master"
       ]
      }
     },
     "mode": "managed",
     "name": "AmazonEKSServicePolicy",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_role_policy_attachment"
    },
    {
     "address": "aws_iam_role_policy_attachment.AmazonEKSVPCResourceController",
     "expressions": {
      "policy_arn": {
       "constant_value": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
      },
      "role": {
       "references": [
        "aws_iam_role.master.name",
        "aws_iam_role.master"
       ]
      }
     },
     "mode": "managed",
     "name": "AmazonEKSVPCResourceController",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_role_policy_attachment"
    },
    {
     "address": "aws_iam_role_policy_attachment.AmazonEKSWorkerNodePolicy",
     "expressions": {
      "policy_arn": {
       "constant_value": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      },
      "role": {
       "references": [
        "aws_iam_role.worker.name",
        "aws_iam_role.worker"
       ]
      }
     },
     "mode": "managed",
     "name": "AmazonEKSWorkerNodePolicy",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_role_policy_attachment"
    },
    {
     "address": "aws_iam_role_policy_attachment.AmazonEKS_CNI_Policy",
     "expressions": {
      "policy_arn": {
       "constant_value": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      },
      "role": {
       "references": [
        "aws_iam_role.worker.name",
        "aws_iam_role.worker"
       ]
      }
     },
     "mode": "managed",
     "name": "AmazonEKS_CNI_Policy",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_role_policy_attachment"
    },
    {
     "address": "aws_iam_role_policy_attachment.AmazonSSMManagedInstanceCore",
     "expressions": {
      "policy_arn": {
       "constant_value": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      },
      "role": {
       "references": [
        "aws_iam_role.worker.name",
        "aws_iam_role.worker"
       ]
      }
     },
     "mode": "managed",
     "name": "AmazonSSMManagedInstanceCore",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_role_policy_attachment"
    },
    {
     "address": "aws_iam_role_policy_attachment.autoscaler",
     "expressions": {
      "policy_arn": {
       "references": [
        "aws_iam_policy.autoscaler.arn",
        "aws_iam_policy.autoscaler"
       ]
      },
      "role": {
       "references": [
        "aws_iam_role.worker.name",
        "aws_iam_role.worker"
       ]
      }
     },
     "mode": "managed",
     "name": "autoscaler",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_role_policy_attachment"
    },
    {
     "address": "aws_iam_role_policy_attachment.s3",
     "expressions": {
      "policy_arn": {
       "constant_value": "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      },
      "role": {
       "references": [
        "aws_iam_role.worker.name",
        "aws_iam_role.worker"
       ]
      }
     },
     "mode": "managed",
     "name": "s3",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_role_policy_attachment"
    },
    {
     "address": "aws_iam_role_policy_attachment.x-ray",
     "expressions": {
      "policy_arn": {
       "constant_value": "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess"
      },
      "role": {
       "references": [
        "aws_iam_role.worker.name",
        "aws_iam_role.worker"
       ]
      }
     },
     "mode": "managed",
     "name": "x-ray",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_role_policy_attachment"
    },
    {
     "address": "aws_internet_gateway.igw",
     "expressions": {
      "tags": {
       "constant_value": {
        "Name": "my-internet-gateway"
       }
      },
      "vpc_id": {
       "references": [
        "aws_vpc.vpc.id",
        "aws_vpc.vpc"
       ]
      }
     },
     "mode": "managed",
     "name": "igw",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_internet_gateway"
    },
    {
     "address": "aws_nat_gateway.my_nat_gateway",
     "expressions": {
      "allocation_id": {
       "references": [
        "aws_eip.my_eip",
        "each.key"
       ]
      },
      "subnet_id": {
       "references": [
        "each.value.id",
        "each.value"
       ]
      },
      "tags": {
       "references": [
        "each.key"
       ]
      }
     },
     "for_each_expression": {
      "references": [
       "aws_subnet.private_subnet"
      ]
     },
     "mode": "managed",
     "name": "my_nat_gateway",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_nat_gateway"
    },
    {
     "address": "aws_route.private_route",
     "expressions": {
      "destination_cidr_block": {
       "constant_value": "0.0.0.0/0"
      },
      "nat_gateway_id": {
       "references": [
        "each.value.id",
        "each.value"
       ]
      },
      "route_table_id": {
       "references": [
        "aws_route_table.private_route_table",
        "each.key"
       ]
      }
     },
     "for_each_expression": {
      "references": [
       "aws_nat_gateway.my_nat_gateway"
      ]
     },
     "mode": "managed",
     "name": "private_route",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_route"
    },
    {
     "address": "aws_route_table.private_route_table",
     "expressions": {
      "vpc_id": {
       "references": [
        "aws_vpc.vpc.id",
        "aws_vpc.vpc"
       ]
      }
     },
     "for_each_expression": {
      "references": [
       "aws_subnet.private_subnet"
      ]
     },
     "mode": "managed",
     "name": "private_route_table",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_route_table"
    },
    {
     "address": "aws_route_table_association.my_rta",
     "expressions": {
      "route_table_id": {
       "references": [
        "aws_route_table.private_route_table",
        "each.key"
       ]
      },
      "subnet_id": {
       "references": [
        "each.value.id",
        "each.value"
       ]
      }
     },
     "for_each_expression": {
      "references": [
       "aws_subnet.private_subnet"
      ]
     },
     "mode": "managed",
     "name": "my_rta",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_route_table_association"
    },
    {
     "address": "aws_security_group.eks_control_plane_sg",
     "expressions": {
      "description": {
       "constant_value": "Security group for the EKS control plane"
      },
      "name": {
       "constant_value": "eks-control-plane-sg"
      },
      "tags": {
       "constant_value": {
        "Environment": "staging",
        "Name": "eks-control-plane-sg"
       }
      },
      "vpc_id": {
       "references": [
        "aws_vpc.vpc.id",
        "aws_vpc.vpc"
       ]
      }
     },
     "mode": "managed",
     "name": "eks_control_plane_sg",
     "provider_config_key": "aws",
     "schema_version": 1,
     "type": "aws_security_group"
    },
    {
     "address": "aws_security_group.worker_node_sg",
     "expressions": {
      "description": {
       "constant_value": "Security group for EKS worker nodes"
      },
      "name": {
       "constant_value": "eks-worker-node-sg"
      },
      "tags": {
       "constant_value": {
        "Environment": "staging",
        "Name": "eks-worker-node-sg"
       }
      },
      "vpc_id": {
       "references": [
        "aws_vpc.vpc.id",
        "aws_vpc.vpc"
       ]
      }
     },
     "mode": "managed",
     "name": "worker_node_sg",
     "provider_config_key": "aws",
     "schema_version": 1,
     "type": "aws_security_group"
    },
    {
     "address": "aws_security_group_rule.control_plane_egress",
     "expressions": {
      "cidr_blocks": {
       "constant_value": [
        "0.0.0.0/0"
       ]
      },
      "from_port": {
       "constant_value": 0
      },
      "protocol": {
       "constant_value": "-1"
      },
      "security_group_id": {
       "references": [
        "aws_security_group.eks_control_plane_sg.id",
        "aws_security_group.eks_control_plane_sg"
       ]
      },
      "to_port": {
       "constant_value": 0
      },
      "type": {
       "constant_value": "egress"
      }
     },
     "mode": "managed",
     "name": "control_plane_egress",
     "provider_config_key": "aws",
     "schema_version": 2,
     "type": "aws_security_group_rule"
    },
    {
     "address": "aws_security_group_rule.control_plane_ingress",
     "expressions": {
      "cidr_blocks": {
       "constant_value": [
        "0.0.0.0/0"
       ]
      },
      "from_port": {
       "constant_value": 443
      },
      "protocol": {
       "constant_value": "tcp"
      },
      "security_group_id": {
       "references": [
        "aws_security_group.eks_control_plane_sg.id",
        "aws_security_group.eks_control_plane_sg"
       ]
      },
      "to_port": {
       "constant_value": 443
      },
      "type": {
       "constant_value": "ingress"
      }
     },
     "mode": "managed",
     "name": "control_plane_ingress",
     "provider_config_key": "aws",
     "schema_version": 2,
     "type": "aws_security_group_rule"
    },
    {
     "address": "aws_security_group_rule.control_plane_to_worker",
     "expressions": {
      "from_port": {
       "constant_value": 0
      },
      "protocol": {
       "constant_value": "-1"
      },
      "security_group_id": {
       "references": [
        "aws_security_group.worker_node_sg.id",
        "aws_security_group.worker_node_sg"
       ]
      },
      "source_security_group_id": {
       "references": [
        "aws_security_group.eks_control_plane_sg.id",
        "aws_security_group.eks_control_plane_sg"
       ]
      },
      "to_port": {
       "constant_value": 0
      },
      "type": {
       "constant_value": "ingress"
      }
     },
     "mode": "managed",
     "name": "control_plane_to_worker",
     "provider_config_key": "aws",
     "schema_version": 2,
     "type": "aws_security_group_rule"
    },
    {
     "address": "aws_security_group_rule.worker_egress",
     "expressions": {
      "cidr_blocks": {
       "constant_value": [
        "0.0.0.0/0"
       ]
      },
      "from_port": {
       "constant_value": 0
      },
      "protocol": {
       "constant_value": "-1"
      },
      "security_group_id": {
       "references": [
        "aws_security_group.worker_node_sg.id",
        "aws_security_group.worker_node_sg"
       ]
      },
      "to_port": {
       "constant_value": 0
      },
      "type": {
       "constant_value": "egress"
      }
     },
     "mode": "managed",
     "name": "worker_egress",
     "provider_config_key": "aws",
     "schema_version": 2,
     "type": "aws_security_group_rule"
    },
    {
     "address": "aws_security_group_rule.worker_ssh_ingress",
     "expressions": {
      "cidr_blocks": {
       "constant_value": [
        "0.0.0.0/0"
       ]
      },
      "from_port": {
       "constant_value": 22
      },
      "protocol": {
       "constant_value": "tcp"
      },
      "security_group_id": {
       "references": [
        "aws_security_group.worker_node_sg.id",
        "aws_security_group.worker_node_sg"
       ]
      },
      "to_port": {
       "constant_value": 22
      },
      "type": {
       "constant_value": "ingress"
      }
     },
     "mode": "managed",
     "name": "worker_ssh_ingress",
     "provider_config_key": "aws",
     "schema_version": 2,
     "type": "aws_security_group_rule"
    },
    {
     "address": "aws_security_group_rule.worker_to_control_plane",
     "expressions": {
      "from_port": {
       "constant_value": 0
      },
      "protocol": {
       "constant_value": "-1"
      },
      "security_group_id": {
       "references": [
        "aws_security_group.eks_control_plane_sg.id",
        "aws_security_group.eks_control_plane_sg"
       ]
      },
      "source_security_group_id": {
       "references": [
        "aws_security_group.worker_node_sg.id",
        "aws_security_group.worker_node_sg"
       ]
      },
      "to_port": {
       "constant_value": 0
      },
      "type": {
       "constant_value": "ingress"
      }
     },
     "mode": "managed",
     "name": "worker_to_control_plane",
     "provider_config_key": "aws",
     "schema_version": 2,
     "type": "aws_security_group_rule"
    },
    {
     "address": "aws_subnet.private_subnet",
     "expressions": {
      "availability_zone": {
       "references": [
        "each.value.availability_zone",
        "each.value"
       ]
      },
      "cidr_block": {
       "references": [
        "each.value.cidr_block",
        "each.value"
       ]
      },
      "map_public_ip_on_launch": {
       "constant_value": false
      },
      "vpc_id": {
       "references": [
        "aws_vpc.vpc.id",
        "aws_vpc.vpc"
       ]
      }
     },
     "for_each_expression": {
      "references": [
       "var.subnets"
      ]
     },
     "mode": "managed",
     "name": "private_subnet",
     "provider_config_key": "aws",
     "schema_version": 1,
     "type": "aws_subnet"
    },
    {
     "address": "aws_vpc.vpc",
     "expressions": {
      "cidr_block": {
       "constant_value": "10.0.0.0/16"
      },
      "enable_dns_hostnames": {
       "constant_value": true
      },
      "enable_dns_support": {
       "constant_value": true
      },
      "instance_tenancy": {
       "constant_value": "default"
      },
      "tags": {
       "constant_value": {
        "Envrironment": "staging"
       }
      }
     },
     "mode": "managed",
     "name": "vpc",
     "provider_config_key": "aws",
     "schema_version": 1,
     "type": "aws_vpc"
    }
   ],
   "variables": {
    "capacity": {
     "default": [
      {
       "capacity_type": "SPOT",
       "desired_size": 1,
       "instance_types": [
        "t3.micro"
       ],
       "max_size": 2,
       "min_size": 1
      }
     ]
    },
    "cluster_name": {
     "default": "my_eks"
    },
    "ingress_rules": {
     "default": [
      {
       "description": "Allow TLS (HTTPS) inbound traffic from VPC",
       "from_port": 443,
       "protocol": "tcp",
       "to_port": 443
      },
      {
       "description": "Allow HTTP (HTTP) inbound traffic from VPC",
       "from_port": 80,
       "protocol": "tcp",
       "to_port": 80
      },
      {
       "description": "Allow custom port (8080) inbound traffic from VPC",
       "from_port": 8080,
       "protocol": "tcp",
       "to_port": 8080
      }
     ],
     "description": "Ingress rules for the security group"
    },
    "namespaces": {
     "default": [
      "my_namespace"
     ]
    },
    "region": {
     "default": "us-east-1"
    },
    "subnets": {
     "default": [
      {
       "availability_zone": "us-east-1a",
       "cidr_block": "10.0.1.0/24"
      },
      {
       "availability_zone": "us-east-1b",
       "cidr_block": "10.0.2.0/24"
      }
     ],
     "description": "List of subnets"
    }
   }
  }
 },
 "format_version": "1.2",
 "output_changes": {
  "cluster_endpoint": {
   "actions": [
    "no-op"
   ],
   "after": "https://B55713EFAAFA43A934348AD6A9CFC181.gr7.us-east-1.eks.amazonaws.com",
   "after_sensitive": false,
   "after_unknown": false,
   "before": "https://B55713EFAAFA43A934348AD6A9CFC181.gr7.us-east-1.eks.amazonaws.com",
   "before_sensitive": false
  },
  "cluster_security_group_id": {
   "actions": [
    "no-op"
   ],
   "after": "sg-00d0fd8acde68f1c9",
   "after_sensitive": false,
   "after_unknown": false,
   "before": "sg-00d0fd8acde68f1c9",
   "before_sensitive": false
  },
  "route-table-id": {
   "actions": [
    "create"
   ],
   "after": {
    "10.0.1.0/24": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-0e192ea7ef9fe961a",
     "id": "rtb-0e192ea7ef9fe961a",
     "owner_id": "086603201384",
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "10.0.2.0/24": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-000ca2c4d8e86213c",
     "id": "rtb-000ca2c4d8e86213c",
     "owner_id": "086603201384",
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    }
   },
   "after_sensitive": false,
   "after_unknown": false,
   "before": null,
   "before_sensitive": false
  }
 },
 "planned_values": {
  "outputs": {
   "cluster_endpoint": {
    "sensitive": false,
    "type": "string",
    "value": "https://B55713EFAAFA43A934348AD6A9CFC181.gr7.us-east-1.eks.amazonaws.com"
   },
   "cluster_security_group_id": {
    "sensitive": false,
    "type": "string",
    "value": "sg-00d0fd8acde68f1c9"
   },
   "route-table-id": {
    "sensitive": false,
    "type": [
     "object",
     {
      "10.0.1.0/24": [
       "object",
       {
        "arn": "string",
        "id": "string",
        "owner_id": "string",
        "propagating_vgws": [
         "set",
         "string"
        ],
        "route": [
         "set",
         [
          "object",
          {
           "carrier_gateway_id": "string",
           "cidr_block": "string",
           "core_network_arn": "string",
           "destination_prefix_list_id": "string",
           "egress_only_gateway_id": "string",
           "gateway_id": "string",
           "ipv6_cidr_block": "string",
           "local_gateway_id": "string",
           "nat_gateway_id": "string",
           "network_interface_id": "string",
           "transit_gateway_id": "string",
           "vpc_endpoint_id": "string",
           "vpc_peering_connection_id": "string"
          }
         ]
        ],
        "tags": [
         "map",
         "string"
        ],
        "tags_all": [
         "map",
         "string"
        ],
        "timeouts": [
         "object",
         {
          "create": "string",
          "delete": "string",
          "update": "string"
         }
        ],
        "vpc_id": "string"
       }
      ],
      "10.0.2.0/24": [
       "object",
       {
        "arn": "string",
        "id": "string",
        "owner_id": "string",
        "propagating_vgws": [
         "set",
         "string"
        ],
        "route": [
         "set",
         [
          "object",
          {
           "carrier_gateway_id": "string",
           "cidr_block": "string",
           "core_network_arn": "string",
           "destination_prefix_list_id": "string",
           "egress_only_gateway_id": "string",
           "gateway_id": "string",
           "ipv6_cidr_block": "string",
           "local_gateway_id": "string",
           "nat_gateway_id": "string",
           "network_interface_id": "string",
           "transit_gateway_id": "string",
           "vpc_endpoint_id": "string",
           "vpc_peering_connection_id": "string"
          }
         ]
        ],
        "tags": [
         "map",
         "string"
        ],
        "tags_all": [
         "map",
         "string"
        ],
        "timeouts": [
         "object",
         {
          "create": "string",
          "delete": "string",
          "update": "string"
         }
        ],
        "vpc_id": "string"
       }
      ]
     }
    ],
    "value": {
     "10.0.1.0/24": {
      "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-0e192ea7ef9fe961a",
      "id": "rtb-0e192ea7ef9fe961a",
      "owner_id": "086603201384",
      "propagating_vgws": [],
      "route": [],
      "tags": {},
      "tags_all": {},
      "timeouts": null,
      "vpc_id": "vpc-00de26259c65152d4"
     },
     "10.0.2.0/24": {
      "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-000ca2c4d8e86213c",
      "id": "rtb-000ca2c4d8e86213c",
      "owner_id": "086603201384",
      "propagating_vgws": [],
      "route": [],
      "tags": {},
      "tags_all": {},
      "timeouts": null,
      "vpc_id": "vpc-00de26259c65152d4"
     }
    }
   }
  },
  "root_module": {
   "child_modules": [
    {
     "address": "module.eks",
     "child_modules": [
      {
       "address": "module.eks.module.eks_managed_node_group[\"ng1\"]",
       "resources": [
        {
         "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_eks_node_group.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "instance_types": [
           false
          ],
          "launch_template": [
           {}
          ],
          "remote_access": [],
          "resources": [],
          "scaling_config": [
           {}
          ],
          "subnet_ids": [
           false,
           false
          ],
          "tags": {},
          "tags_all": {},
          "taint": [],
          "timeouts": {},
          "update_config": [
           {}
          ]
         },
         "type": "aws_eks_node_group",
         "values": {
          "ami_type": "AL2_x86_64",
          "capacity_type": "ON_DEMAND",
          "cluster_name": "my_eks",
          "force_update_version": null,
          "instance_types": [
           "t2.micro"
          ],
          "labels": null,
          "launch_template": [
           {
            "id": "lt-0cbad37c3cd6534eb",
            "version": "1"
           }
          ],
          "node_group_name_prefix": "ng1-",
          "node_role_arn": "arn:aws:iam::086603201384:role/ng1-eks-node-group-20230929104251899300000012",
          "remote_access": [],
          "scaling_config": [
           {
            "desired_size": 1,
            "max_size": 3,
            "min_size": 1
           }
          ],
          "subnet_ids": [
           "subnet-01e25e0c76c6457f6",
           "subnet-0465084bc667c4897"
          ],
          "tags": {
           "Name": "ng1"
          },
          "tags_all": {
           "Name": "ng1"
          },
          "taint": [],
          "timeouts": {
           "create": null,
           "delete": null,
           "update": null
          },
          "update_config": [
           {
            "max_unavailable": null,
            "max_unavailable_percentage": 33
           }
          ],
          "version": "1.28"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "inline_policy": [],
          "managed_policy_arns": [
           false,
           false,
           false
          ],
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_iam_role",
         "values": {
          "arn": "arn:aws:iam::086603201384:role/ng1-eks-node-group-20230929104251899300000012",
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
          "create_date": "2023-09-29T10:42:52Z",
          "description": "EKS managed node group IAM role",
          "force_detach_policies": true,
          "id": "ng1-eks-node-group-20230929104251899300000012",
          "inline_policy": [],
          "managed_policy_arns": [
           "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
           "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
           "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
          ],
          "max_session_duration": 3600,
          "name": "ng1-eks-node-group-20230929104251899300000012",
          "name_prefix": "ng1-eks-node-group-",
          "path": "/",
          "permissions_boundary": null,
          "tags": {
           "Name": "ng1"
          },
          "tags_all": {
           "Name": "ng1"
          },
          "unique_id": "AROARIKPT7NUGPNRXKT2S"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
         "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_iam_role_policy_attachment",
         "values": {
          "id": "ng1-eks-node-group-20230929104251899300000012-20230929104252569100000015",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "role": "ng1-eks-node-group-20230929104251899300000012"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
         "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_iam_role_policy_attachment",
         "values": {
          "id": "ng1-eks-node-group-20230929104251899300000012-20230929104252567500000013",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "role": "ng1-eks-node-group-20230929104251899300000012"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
         "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_iam_role_policy_attachment",
         "values": {
          "id": "ng1-eks-node-group-20230929104251899300000012-20230929104252567500000014",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "role": "ng1-eks-node-group-20230929104251899300000012"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_launch_template.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "instance_market_options": [],
          "instance_requirements": [],
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
           {}
          ],
          "monitoring": [
           {}
          ],
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "security_group_names": [],
          "tag_specifications": [
           {
            "tags": {}
           },
           {
            "tags": {}
           },
           {
            "tags": {}
           }
          ],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": [
           false
          ]
         },
         "type": "aws_launch_template",
         "values": {
          "arn": "arn:aws:ec2:us-east-1:086603201384:launch-template/lt-0cbad37c3cd6534eb",
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "default_version": 1,
          "description": "Custom launch template for ng1 EKS managed node group",
          "disable_api_stop": false,
          "disable_api_termination": false,
          "ebs_optimized": "",
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "id": "lt-0cbad37c3cd6534eb",
          "image_id": "",
          "instance_initiated_shutdown_behavior": "",
          "instance_market_options": [],
          "instance_requirements": [],
          "instance_type": "",
          "kernel_id": "",
          "key_name": "",
          "latest_version": 1,
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
           {
            "http_endpoint": "enabled",
            "http_protocol_ipv6": "",
            "http_put_response_hop_limit": 2,
            "http_tokens": "required",
            "instance_metadata_tags": ""
           }
          ],
          "monitoring": [
           {
            "enabled": true
           }
          ],
          "name": "ng1-20230929110631595900000018",
          "name_prefix": "ng1-",
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "ram_disk_id": "",
          "security_group_names": [],
          "tag_specifications": [
           {
            "resource_type": "instance",
            "tags": {
             "Name": "ng1"
            }
           },
           {
            "resource_type": "network-interface",
            "tags": {
             "Name": "ng1"
            }
           },
           {
            "resource_type": "volume",
            "tags": {
             "Name": "ng1"
            }
           }
          ],
          "tags": {
           "Name": "ng1"
          },
          "tags_all": {
           "Name": "ng1"
          },
          "update_default_version": true,
          "user_data": "",
          "vpc_security_group_ids": [
           "sg-0f13c4ac5030c4c04"
          ]
         }
        }
       ]
      },
      {
       "address": "module.eks.module.kms",
       "resources": [
        {
         "address": "module.eks.module.kms.aws_kms_alias.this[\"cluster\"]",
         "index": "cluster",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_kms_alias",
         "values": {
          "name": "alias/eks/my_eks",
          "target_key_id": "6168a72a-a511-4a8f-8e36-dd2e7d08dc06"
         }
        },
        {
         "address": "module.eks.module.kms.aws_kms_key.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_kms_key",
         "values": {
          "arn": "arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
          "bypass_policy_lockout_safety_check": false,
          "custom_key_store_id": "",
          "customer_master_key_spec": "SYMMETRIC_DEFAULT",
          "deletion_window_in_days": null,
          "description": "my_eks cluster encryption key",
          "enable_key_rotation": true,
          "id": "6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
          "is_enabled": true,
          "key_id": "6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
          "key_usage": "ENCRYPT_DECRYPT",
          "multi_region": false,
          "policy": "{\"Statement\":[{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:Put*\",\"kms:List*\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::086603201384:root\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
          "tags": {},
          "tags_all": {}
         }
        }
       ]
      }
     ],
     "resources": [
      {
       "address": "module.eks.aws_cloudwatch_log_group.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_cloudwatch_log_group",
       "values": {
        "arn": "arn:aws:logs:us-east-1:086603201384:log-group:/aws/eks/my_eks/cluster",
        "id": "/aws/eks/my_eks/cluster",
        "kms_key_id": "",
        "name": "/aws/eks/my_eks/cluster",
        "name_prefix": "",
        "retention_in_days": 90,
        "skip_destroy": false,
        "tags": {
         "Name": "/aws/eks/my_eks/cluster"
        },
        "tags_all": {
         "Name": "/aws/eks/my_eks/cluster"
        }
       }
      },
      {
       "address": "module.eks.aws_eks_cluster.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "certificate_authority": [
         {}
        ],
        "enabled_cluster_log_types": [
         false,
         false,
         false
        ],
        "encryption_config": [
         {
          "provider": [
           {}
          ],
          "resources": [
           false
          ]
         }
        ],
        "identity": [
         {
          "oidc": [
           {}
          ]
         }
        ],
        "kubernetes_network_config": [
         {}
        ],
        "outpost_config": [],
        "tags": {},
        "tags_all": {},
        "timeouts": {},
        "vpc_config": [
         {
          "public_access_cidrs": [
           false
          ],
          "security_group_ids": [
           false
          ],
          "subnet_ids": [
           false,
           false
          ]
         }
        ]
       },
       "type": "aws_eks_cluster",
       "values": {
        "arn": "arn:aws:eks:us-east-1:086603201384:cluster/my_eks",
        "certificate_authority": [
         {
          "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJUXQreUFNWWhXSlV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpBNU1qa3hNRFF6TWpaYUZ3MHpNekE1TWpZeE1EUTRNalphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURNL2V0OTg1Y1JSaHd6Q3U1emxSb3dzQ0dJR1FxUnk0VndJYVk1M2Z4Z25YKytxenZ0c2xMb1RSQTAKdVA4YktNb2J3RmhzYkRsSm5aSHkyUS9oRmZKRjVhWWhDZjMzYy8vOGNsVEhGYVZKN2l5RUJZODJZUG81M1psQQpBeUlhZ25VNkdTZ21qbGF6Y2hyOTFsdUdjK21rV0pISjZxem9KMU5vNUp3cnhmNElSKzN2bS9GZmZzT01yaEloCi9jT044c0U3MDhOSEhjODArU0N0ODYwcDJqOGpjdDR2NHAyNmFZd0E0YmZCUUR0NTMyY09QU1pPdzRsQUZia28KM0lhdGlNQnZyV1hJSmFUZFNkanlxUEpwV0hmUThscFFNTEEvb0xSNi9DbzRNVGt2R2RoaXNzRWw2elV2aUMvTQpnTnRkVXhPSjNnMkxoRmZobE9kSTZRRWd6L3haQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTZEUwUmdRVW0xM0dPV2JVS3EvQWpvU1dPbUxqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPUFRsNm52cQpDNzg5aFRSRDRNNW5XSG92L295MVlUbWdJTlpXWmVScmhLRnpXL2FrdEZYc1RCcmUweEdIUkJnU1ByME9VUUFDCndpczYxaVlCcnRMSThmZHZVMmRrZThhOHB2NW9JcGh4bmtlYUJkWGZHOEhJL3FleVhJTlBKNkxMOWhKOXF5QTgKRGpPRU9uWlIxOXg5R1ROczBnOVJzR3J1cXpTZGQ1Q1Q2TGNNdnZIZlZjaUQ5VkkraHZYdno3WGQ3dlJjTHpoeQprQTl1cUpmTnMzaDI4cDROdm45MGtoQlV2VlQ0NmkvMTdud0ZZZWRUcmlCamJCc3J0L0lXOUVSdCtYb1ZnWGJCCmp5Vzg2d0Q4amxwcG95NFNsQWFIWkY5dnFwK0NpajRGSVZGb2VXV0h1ZU1acnRtUE9WOHJhU0o1R25IR1ZTTTQKQUxUd2M4a0ZCY2NxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
         }
        ],
        "cluster_id": null,
        "created_at": "2023-09-29 10:43:01.311 +0000 UTC",
        "enabled_cluster_log_types": [
         "api",
         "audit",
         "authenticator"
        ],
        "encryption_config": [
         {
          "provider": [
           {
            "key_arn": "arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06"
           }
          ],
          "resources": [
           "secrets"
          ]
         }
        ],
        "endpoint": "https://B55713EFAAFA43A934348AD6A9CFC181.gr7.us-east-1.eks.amazonaws.com",
        "id": "my_eks",
        "identity": [
         {
          "oidc": [
           {
            "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181"
           }
          ]
         }
        ],
        "kubernetes_network_config": [
         {
          "ip_family": "ipv4",
          "service_ipv4_cidr": "172.20.0.0/16",
          "service_ipv6_cidr": ""
         }
        ],
        "name": "my_eks",
        "outpost_config": [],
        "platform_version": "eks.1",
        "role_arn": "arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001",
        "status": "ACTIVE",
        "tags": {},
        "tags_all": {},
        "timeouts": {
         "create": null,
         "delete": null,
         "update": null
        },
        "version": "1.28",
        "vpc_config": [
         {
          "cluster_security_group_id": "sg-099854db6bbb6d7fb",
          "endpoint_private_access": true,
          "endpoint_public_access": false,
          "public_access_cidrs": [
           "0.0.0.0/0"
          ],
          "security_group_ids": [
           "sg-00d0fd8acde68f1c9"
          ],
          "subnet_ids": [
           "subnet-01e25e0c76c6457f6",
           "subnet-0465084bc667c4897"
          ],
          "vpc_id": "vpc-00de26259c65152d4"
         }
        ]
       }
      },
      {
       "address": "module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
       "index": 0,
       "mode": "managed",
       "name": "oidc_provider",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "client_id_list": [
         false
        ],
        "tags": {},
        "tags_all": {},
        "thumbprint_list": [
         false,
         false,
         false,
         false
        ]
       },
       "type": "aws_iam_openid_connect_provider",
       "values": {
        "arn": "arn:aws:iam::086603201384:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181",
        "client_id_list": [
         "sts.amazonaws.com"
        ],
        "id": "arn:aws:iam::086603201384:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181",
        "tags": {
         "Name": "my_eks-eks-irsa"
        },
        "tags_all": {
         "Name": "my_eks-eks-irsa"
        },
        "thumbprint_list": [
         "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
         "06b25927c42a721631c1efd9431e648fa62e1e39",
         "414a2060b738c635cc7fc243e052615592830c53",
         "aaa68bb211d468db8a8a19561ccba2e4043dcc80"
        ],
        "url": "oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181"
       }
      },
      {
       "address": "module.eks.aws_iam_policy.cluster_encryption[0]",
       "index": 0,
       "mode": "managed",
       "name": "cluster_encryption",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_iam_policy",
       "values": {
        "arn": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
        "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
        "id": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
        "name": "my_eks-cluster-ClusterEncryption20230929104256397900000016",
        "name_prefix": "my_eks-cluster-ClusterEncryption",
        "path": "/",
        "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06\"}],\"Version\":\"2012-10-17\"}",
        "policy_id": "ANPARIKPT7NUHJEFZEZ7Z",
        "tags": {},
        "tags_all": {}
       }
      },
      {
       "address": "module.eks.aws_iam_role.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "inline_policy": [
         {}
        ],
        "managed_policy_arns": [
         false,
         false,
         false
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_iam_role",
       "values": {
        "arn": "arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001",
        "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
        "create_date": "2023-09-29T10:42:37Z",
        "description": "",
        "force_detach_policies": true,
        "id": "my_eks-cluster-20230929104236806800000001",
        "inline_policy": [
         {
          "name": "my_eks-cluster",
          "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
         }
        ],
        "managed_policy_arns": [
         "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
         "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
         "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
        ],
        "max_session_duration": 3600,
        "name": "my_eks-cluster-20230929104236806800000001",
        "name_prefix": "my_eks-cluster-",
        "path": "/",
        "permissions_boundary": null,
        "tags": {},
        "tags_all": {},
        "unique_id": "AROARIKPT7NUOZFDMYB4I"
       }
      },
      {
       "address": "module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]",
       "index": 0,
       "mode": "managed",
       "name": "cluster_encryption",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_iam_role_policy_attachment",
       "values": {
        "id": "my_eks-cluster-20230929104236806800000001-20230929104257056100000017",
        "policy_arn": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
        "role": "my_eks-cluster-20230929104236806800000001"
       }
      },
      {
       "address": "module.eks.aws_iam_role_policy_attachment.this[\"AmazonEKSClusterPolicy\"]",
       "index": "AmazonEKSClusterPolicy",
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_iam_role_policy_attachment",
       "values": {
        "id": "my_eks-cluster-20230929104236806800000001-2023092910423838790000000c",
        "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
        "role": "my_eks-cluster-20230929104236806800000001"
       }
      },
      {
       "address": "module.eks.aws_iam_role_policy_attachment.this[\"AmazonEKSVPCResourceController\"]",
       "index": "AmazonEKSVPCResourceController",
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_iam_role_policy_attachment",
       "values": {
        "id": "my_eks-cluster-20230929104236806800000001-2023092910423838800000000d",
        "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
        "role": "my_eks-cluster-20230929104236806800000001"
       }
      },
      {
       "address": "module.eks.aws_security_group.cluster[0]",
       "index": 0,
       "mode": "managed",
       "name": "cluster",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "egress": [],
        "ingress": [
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         }
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_security_group",
       "values": {
        "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-00d0fd8acde68f1c9",
        "description": "EKS cluster security group",
        "egress": [],
        "id": "sg-00d0fd8acde68f1c9",
        "ingress": [
         {
          "cidr_blocks": [],
          "description": "Node groups to cluster API",
          "from_port": 443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-0f13c4ac5030c4c04"
          ],
          "self": false,
          "to_port": 443
         }
        ],
        "name": "my_eks-cluster-2023092910424951780000000f",
        "name_prefix": "my_eks-cluster-",
        "owner_id": "086603201384",
        "revoke_rules_on_delete": false,
        "tags": {
         "Name": "my_eks-cluster"
        },
        "tags_all": {
         "Name": "my_eks-cluster"
        },
        "timeouts": null,
        "vpc_id": "vpc-00de26259c65152d4"
       }
      },
      {
       "address": "module.eks.aws_security_group.node[0]",
       "index": 0,
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "egress": [
         {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         }
        ],
        "ingress": [
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         }
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_security_group",
       "values": {
        "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0f13c4ac5030c4c04",
        "description": "EKS node shared security group",
        "egress": [
         {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "Allow all egress",
          "from_port": 0,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "-1",
          "security_groups": [],
          "self": false,
          "to_port": 0
         }
        ],
        "id": "sg-0f13c4ac5030c4c04",
        "ingress": [
         {
          "cidr_blocks": [],
          "description": "Cluster API to node 4443/tcp webhook",
          "from_port": 4443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-00d0fd8acde68f1c9"
          ],
          "self": false,
          "to_port": 4443
         },
         {
          "cidr_blocks": [],
          "description": "Cluster API to node 6443/tcp webhook",
          "from_port": 6443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-00d0fd8acde68f1c9"
          ],
          "self": false,
          "to_port": 6443
         },
         {
          "cidr_blocks": [],
          "description": "Cluster API to node 8443/tcp webhook",
          "from_port": 8443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-00d0fd8acde68f1c9"
          ],
          "self": false,
          "to_port": 8443
         },
         {
          "cidr_blocks": [],
          "description": "Cluster API to node 9443/tcp webhook",
          "from_port": 9443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-00d0fd8acde68f1c9"
          ],
          "self": false,
          "to_port": 9443
         },
         {
          "cidr_blocks": [],
          "description": "Cluster API to node groups",
          "from_port": 443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-00d0fd8acde68f1c9"
          ],
          "self": false,
          "to_port": 443
         },
         {
          "cidr_blocks": [],
          "description": "Cluster API to node kubelets",
          "from_port": 10250,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-00d0fd8acde68f1c9"
          ],
          "self": false,
          "to_port": 10250
         },
         {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS UDP",
          "from_port": 53,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_groups": [],
          "self": true,
          "to_port": 53
         },
         {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": true,
          "to_port": 53
         },
         {
          "cidr_blocks": [],
          "description": "Node to node ingress on ephemeral ports",
          "from_port": 1025,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": true,
          "to_port": 65535
         }
        ],
        "name": "my_eks-node-2023092910424951710000000e",
        "name_prefix": "my_eks-node-",
        "owner_id": "086603201384",
        "revoke_rules_on_delete": false,
        "tags": {
         "Name": "my_eks-node",
         "kubernetes.io/cluster/my_eks": "owned"
        },
        "tags_all": {
         "Name": "my_eks-node",
         "kubernetes.io/cluster/my_eks": "owned"
        },
        "timeouts": null,
        "vpc_id": "vpc-00de26259c65152d4"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
       "index": "ingress_nodes_443",
       "mode": "managed",
       "name": "cluster",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {},
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node groups to cluster API",
        "from_port": 443,
        "id": "sgrule-2141954177",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": null,
        "protocol": "tcp",
        "security_group_id": "sg-00d0fd8acde68f1c9",
        "security_group_rule_id": "sgr-0f76f48db4e731eac",
        "self": false,
        "source_security_group_id": "sg-0f13c4ac5030c4c04",
        "timeouts": null,
        "to_port": 443,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"egress_all\"]",
       "index": "egress_all",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "cidr_blocks": [
         false
        ],
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": [
         "0.0.0.0/0"
        ],
        "description": "Allow all egress",
        "from_port": 0,
        "id": "sgrule-1823995722",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "-1",
        "security_group_id": "sg-0f13c4ac5030c4c04",
        "security_group_rule_id": "sgr-0d72b98f125f3f6bf",
        "self": false,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 0,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
       "index": "ingress_cluster_443",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Cluster API to node groups",
        "from_port": 443,
        "id": "sgrule-1210006692",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0f13c4ac5030c4c04",
        "security_group_rule_id": "sgr-0440ab05e32f1ca9c",
        "self": false,
        "source_security_group_id": "sg-00d0fd8acde68f1c9",
        "timeouts": null,
        "to_port": 443,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_4443_webhook\"]",
       "index": "ingress_cluster_4443_webhook",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Cluster API to node 4443/tcp webhook",
        "from_port": 4443,
        "id": "sgrule-3728605025",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0f13c4ac5030c4c04",
        "security_group_rule_id": "sgr-08b3dbe0ab8f7bd73",
        "self": false,
        "source_security_group_id": "sg-00d0fd8acde68f1c9",
        "timeouts": null,
        "to_port": 4443,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_6443_webhook\"]",
       "index": "ingress_cluster_6443_webhook",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Cluster API to node 6443/tcp webhook",
        "from_port": 6443,
        "id": "sgrule-394238199",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0f13c4ac5030c4c04",
        "security_group_rule_id": "sgr-0e448cc2458bf5818",
        "self": false,
        "source_security_group_id": "sg-00d0fd8acde68f1c9",
        "timeouts": null,
        "to_port": 6443,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_8443_webhook\"]",
       "index": "ingress_cluster_8443_webhook",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Cluster API to node 8443/tcp webhook",
        "from_port": 8443,
        "id": "sgrule-69444822",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0f13c4ac5030c4c04",
        "security_group_rule_id": "sgr-002cb5237c4a4d6b0",
        "self": false,
        "source_security_group_id": "sg-00d0fd8acde68f1c9",
        "timeouts": null,
        "to_port": 8443,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_9443_webhook\"]",
       "index": "ingress_cluster_9443_webhook",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Cluster API to node 9443/tcp webhook",
        "from_port": 9443,
        "id": "sgrule-1619171101",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0f13c4ac5030c4c04",
        "security_group_rule_id": "sgr-0eab215cd2eebc086",
        "self": false,
        "source_security_group_id": "sg-00d0fd8acde68f1c9",
        "timeouts": null,
        "to_port": 9443,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
       "index": "ingress_cluster_kubelet",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Cluster API to node kubelets",
        "from_port": 10250,
        "id": "sgrule-3518697164",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0f13c4ac5030c4c04",
        "security_group_rule_id": "sgr-0f767af673b86bd16",
        "self": false,
        "source_security_group_id": "sg-00d0fd8acde68f1c9",
        "timeouts": null,
        "to_port": 10250,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_nodes_ephemeral\"]",
       "index": "ingress_nodes_ephemeral",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node to node ingress on ephemeral ports",
        "from_port": 1025,
        "id": "sgrule-3386777945",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0f13c4ac5030c4c04",
        "security_group_rule_id": "sgr-07de3bda1d620abf9",
        "self": true,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 65535,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
       "index": "ingress_self_coredns_tcp",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node to node CoreDNS",
        "from_port": 53,
        "id": "sgrule-1630413796",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0f13c4ac5030c4c04",
        "security_group_rule_id": "sgr-06f9b4c421cc23b1a",
        "self": true,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 53,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
       "index": "ingress_self_coredns_udp",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node to node CoreDNS UDP",
        "from_port": 53,
        "id": "sgrule-3312549899",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "udp",
        "security_group_id": "sg-0f13c4ac5030c4c04",
        "security_group_rule_id": "sgr-0b58988450f66bfea",
        "self": true,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 53,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.time_sleep.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/time",
       "schema_version": 0,
       "sensitive_values": {
        "triggers": {}
       },
       "type": "time_sleep",
       "values": {
        "create_duration": "30s",
        "destroy_duration": null,
        "id": "2023-09-29T11:06:31Z",
        "triggers": {
         "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJUXQreUFNWWhXSlV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpBNU1qa3hNRFF6TWpaYUZ3MHpNekE1TWpZeE1EUTRNalphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURNL2V0OTg1Y1JSaHd6Q3U1emxSb3dzQ0dJR1FxUnk0VndJYVk1M2Z4Z25YKytxenZ0c2xMb1RSQTAKdVA4YktNb2J3RmhzYkRsSm5aSHkyUS9oRmZKRjVhWWhDZjMzYy8vOGNsVEhGYVZKN2l5RUJZODJZUG81M1psQQpBeUlhZ25VNkdTZ21qbGF6Y2hyOTFsdUdjK21rV0pISjZxem9KMU5vNUp3cnhmNElSKzN2bS9GZmZzT01yaEloCi9jT044c0U3MDhOSEhjODArU0N0ODYwcDJqOGpjdDR2NHAyNmFZd0E0YmZCUUR0NTMyY09QU1pPdzRsQUZia28KM0lhdGlNQnZyV1hJSmFUZFNkanlxUEpwV0hmUThscFFNTEEvb0xSNi9DbzRNVGt2R2RoaXNzRWw2elV2aUMvTQpnTnRkVXhPSjNnMkxoRmZobE9kSTZRRWd6L3haQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTZEUwUmdRVW0xM0dPV2JVS3EvQWpvU1dPbUxqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPUFRsNm52cQpDNzg5aFRSRDRNNW5XSG92L295MVlUbWdJTlpXWmVScmhLRnpXL2FrdEZYc1RCcmUweEdIUkJnU1ByME9VUUFDCndpczYxaVlCcnRMSThmZHZVMmRrZThhOHB2NW9JcGh4bmtlYUJkWGZHOEhJL3FleVhJTlBKNkxMOWhKOXF5QTgKRGpPRU9uWlIxOXg5R1ROczBnOVJzR3J1cXpTZGQ1Q1Q2TGNNdnZIZlZjaUQ5VkkraHZYdno3WGQ3dlJjTHpoeQprQTl1cUpmTnMzaDI4cDROdm45MGtoQlV2VlQ0NmkvMTdud0ZZZWRUcmlCamJCc3J0L0lXOUVSdCtYb1ZnWGJCCmp5Vzg2d0Q4amxwcG95NFNsQWFIWkY5dnFwK0NpajRGSVZGb2VXV0h1ZU1acnRtUE9WOHJhU0o1R25IR1ZTTTQKQUxUd2M4a0ZCY2NxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
         "cluster_endpoint": "https://B55713EFAAFA43A934348AD6A9CFC181.gr7.us-east-1.eks.amazonaws.com",
         "cluster_name": "my_eks",
         "cluster_version": "1.28"
        }
       }
      }
     ]
    }
   ],
   "resources": [
    {
     "address": "aws_alb.load_balancer",
     "mode": "managed",
     "name": "load_balancer",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "access_logs": [
       {}
      ],
      "security_groups": [
       false,
       false
      ],
      "subnet_mapping": [
       {},
       {}
      ],
      "subnets": [
       false,
       false
      ],
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_alb",
     "values": {
      "access_logs": [
       {
        "bucket": "",
        "enabled": false,
        "prefix": ""
       }
      ],
      "arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:loadbalancer/app/my-alb/eb45bc3180a981a9",
      "arn_suffix": "app/my-alb/eb45bc3180a981a9",
      "customer_owned_ipv4_pool": "",
      "desync_mitigation_mode": "defensive",
      "dns_name": "internal-my-alb-1424119879.us-east-1.elb.amazonaws.com",
      "drop_invalid_header_fields": false,
      "enable_cross_zone_load_balancing": true,
      "enable_deletion_protection": false,
      "enable_http2": true,
      "enable_tls_version_and_cipher_suite_headers": false,
      "enable_waf_fail_open": false,
      "enable_xff_client_port": false,
      "id": "arn:aws:elasticloadbalancing:us-east-1:086603201384:loadbalancer/app/my-alb/eb45bc3180a981a9",
      "idle_timeout": 60,
      "internal": true,
      "ip_address_type": "ipv4",
      "load_balancer_type": "application",
      "name": "my-alb",
      "name_prefix": null,
      "preserve_host_header": false,
      "security_groups": [
       "sg-0a7a62279598f4465",
       "sg-0afd46c11f40daa43"
      ],
      "subnet_mapping": [
       {
        "allocation_id": "",
        "ipv6_address": "",
        "outpost_id": "",
        "private_ipv4_address": "",
        "subnet_id": "subnet-01e25e0c76c6457f6"
       },
       {
        "allocation_id": "",
        "ipv6_address": "",
        "outpost_id": "",
        "private_ipv4_address": "",
        "subnet_id": "subnet-0465084bc667c4897"
       }
      ],
      "subnets": [
       "subnet-01e25e0c76c6457f6",
       "subnet-0465084bc667c4897"
      ],
      "tags": {
       "Name": "my-alb"
      },
      "tags_all": {
       "Name": "my-alb"
      },
      "timeouts": null,
      "vpc_id": "vpc-00de26259c65152d4",
      "xff_header_processing_mode": "append",
      "zone_id": "Z35SXDOTRQ7X7K"
     }
    },
    {
     "address": "aws_alb_listener.listener",
     "mode": "managed",
     "name": "listener",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "default_action": [
       {
        "authenticate_cognito": [],
        "authenticate_oidc": [],
        "fixed_response": [],
        "forward": [],
        "redirect": []
       }
      ],
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_alb_listener",
     "values": {
      "alpn_policy": null,
      "arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:listener/app/my-alb/eb45bc3180a981a9/0779fbbe7f27f8ef",
      "certificate_arn": null,
      "default_action": [
       {
        "authenticate_cognito": [],
        "authenticate_oidc": [],
        "fixed_response": [],
        "forward": [],
        "order": 1,
        "redirect": [],
        "target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:targetgroup/my-target-group/aa3de2f648ae5261",
        "type": "forward"
       }
      ],
      "id": "arn:aws:elasticloadbalancing:us-east-1:086603201384:listener/app/my-alb/eb45bc3180a981a9/0779fbbe7f27f8ef",
      "load_balancer_arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:loadbalancer/app/my-alb/eb45bc3180a981a9",
      "port": 80,
      "protocol": "HTTP",
      "ssl_policy": "",
      "tags": {},
      "tags_all": {},
      "timeouts": null
     }
    },
    {
     "address": "aws_alb_target_group.target_group",
     "mode": "managed",
     "name": "target_group",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "health_check": [
       {}
      ],
      "stickiness": [
       {}
      ],
      "tags": {},
      "tags_all": {},
      "target_failover": [
       {}
      ]
     },
     "type": "aws_alb_target_group",
     "values": {
      "arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:targetgroup/my-target-group/aa3de2f648ae5261",
      "arn_suffix": "targetgroup/my-target-group/aa3de2f648ae5261",
      "connection_termination": false,
      "deregistration_delay": "300",
      "health_check": [
       {
        "enabled": true,
        "healthy_threshold": 3,
        "interval": 30,
        "matcher": "200",
        "path": "/",
        "port": "traffic-port",
        "protocol": "HTTP",
        "timeout": 5,
        "unhealthy_threshold": 3
       }
      ],
      "id": "arn:aws:elasticloadbalancing:us-east-1:086603201384:targetgroup/my-target-group/aa3de2f648ae5261",
      "ip_address_type": "ipv4",
      "lambda_multi_value_headers_enabled": false,
      "load_balancing_algorithm_type": "round_robin",
      "load_balancing_cross_zone_enabled": "use_load_balancer_configuration",
      "name": "my-target-group",
      "name_prefix": null,
      "port": 80,
      "preserve_client_ip": null,
      "protocol": "HTTP",
      "protocol_version": "HTTP1",
      "proxy_protocol_v2": false,
      "slow_start": 0,
      "stickiness": [
       {
        "cookie_duration": 86400,
        "cookie_name": "",
        "enabled": false,
        "type": "lb_cookie"
       }
      ],
      "tags": {
       "Name": "my-target-group"
      },
      "tags_all": {
       "Name": "my-target-group"
      },
      "target_failover": [
       {
        "on_deregistration": null,
        "on_unhealthy": null
       }
      ],
      "target_type": "instance",
      "vpc_id": "vpc-00de26259c65152d4"
     }
    },
    {
     "address": "aws_eip.my_eip[\"10.0.1.0/24\"]",
     "index": "10.0.1.0/24",
     "mode": "managed",
     "name": "my_eip",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_eip",
     "values": {
      "address": null,
      "allocation_id": "eipalloc-0e2344eeee7bf7c66",
      "associate_with_private_ip": null,
      "association_id": "",
      "carrier_ip": "",
      "customer_owned_ip": "",
      "customer_owned_ipv4_pool": "",
      "domain": "vpc",
      "id": "eipalloc-0e2344eeee7bf7c66",
      "instance": "",
      "network_border_group": "us-east-1",
      "network_interface": "",
      "private_dns": null,
      "private_ip": "",
      "public_dns": "ec2-54-144-242-29.compute-1.amazonaws.com",
      "public_ip": "54.144.242.29",
      "public_ipv4_pool": "amazon",
      "tags": {
       "Name": "my-eip-10.0.1.0/24"
      },
      "tags_all": {
       "Name": "my-eip-10.0.1.0/24"
      },
      "timeouts": null,
      "vpc": true
     }
    },
    {
     "address": "aws_eip.my_eip[\"10.0.2.0/24\"]",
     "index": "10.0.2.0/24",
     "mode": "managed",
     "name": "my_eip",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_eip",
     "values": {
      "address": null,
      "allocation_id": "eipalloc-0c88edee8e090ecc0",
      "associate_with_private_ip": null,
      "association_id": "",
      "carrier_ip": "",
      "customer_owned_ip": "",
      "customer_owned_ipv4_pool": "",
      "domain": "vpc",
      "id": "eipalloc-0c88edee8e090ecc0",
      "instance": "",
      "network_border_group": "us-east-1",
      "network_interface": "",
      "private_dns": null,
      "private_ip": "",
      "public_dns": "ec2-44-218-206-65.compute-1.amazonaws.com",
      "public_ip": "44.218.206.65",
      "public_ipv4_pool": "amazon",
      "tags": {
       "Name": "my-eip-10.0.2.0/24"
      },
      "tags_all": {
       "Name": "my-eip-10.0.2.0/24"
      },
      "timeouts": null,
      "vpc": true
     }
    },
    {
     "address": "aws_iam_instance_profile.worker",
     "mode": "managed",
     "name": "worker",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_iam_instance_profile",
     "values": {
      "arn": "arn:aws:iam::086603201384:instance-profile/ed-eks-worker-new-profile",
      "create_date": "2023-09-29T10:42:38Z",
      "id": "ed-eks-worker-new-profile",
      "name": "ed-eks-worker-new-profile",
      "name_prefix": "",
      "path": "/",
      "role": "ed-eks-worker",
      "tags": {},
      "tags_all": {},
      "unique_id": "AIPARIKPT7NUHINPW2D7C"
     }
    },
    {
     "address": "aws_iam_policy.autoscaler",
     "mode": "managed",
     "name": "autoscaler",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_iam_policy",
     "values": {
      "arn": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
      "description": "",
      "id": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
      "name": "ed-eks-autoscaler-policy",
      "name_prefix": "",
      "path": "/",
      "policy": "{\"Statement\":[{\"Action\":[\"autoscaling:DescribeAutoScalingGroups\",\"autoscaling:DescribeAutoScalingInstances\",\"autoscaling:DescribeTags\",\"autoscaling:DescribeLaunchConfigurations\",\"autoscaling:SetDesiredCapacity\",\"autoscaling:TerminateInstanceInAutoScalingGroup\",\"ec2:DescribeLaunchTemplateVersions\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
      "policy_id": "ANPARIKPT7NUGHKEJTDWO",
      "tags": {},
      "tags_all": {}
     }
    },
    {
     "address": "aws_iam_role.master",
     "mode": "managed",
     "name": "master",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "inline_policy": [],
      "managed_policy_arns": [
       false,
       false,
       false
      ],
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_iam_role",
     "values": {
      "arn": "arn:aws:iam::086603201384:role/ed-eks-master",
      "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
      "create_date": "2023-09-29T10:42:37Z",
      "description": "",
      "force_detach_policies": false,
      "id": "ed-eks-master",
      "inline_policy": [],
      "managed_policy_arns": [
       "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
       "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
       "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
      ],
      "max_session_duration": 3600,
      "name": "ed-eks-master",
      "name_prefix": "",
      "path": "/",
      "permissions_boundary": null,
      "tags": {},
      "tags_all": {},
      "unique_id": "AROARIKPT7NUN4FMIWO54"
     }
    },
    {
     "address": "aws_iam_role.worker",
     "mode": "managed",
     "name": "worker",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "inline_policy": [],
      "managed_policy_arns": [
       false,
       false,
       false,
       false,
       false,
       false,
       false
      ],
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_iam_role",
     "values": {
      "arn": "arn:aws:iam::086603201384:role/ed-eks-worker",
      "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
      "create_date": "2023-09-29T10:42:37Z",
      "description": "",
      "force_detach_policies": false,
      "id": "ed-eks-worker",
      "inline_policy": [],
      "managed_policy_arns": [
       "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
       "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
       "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
       "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
       "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
       "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
       "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      ],
      "max_session_duration": 3600,
      "name": "ed-eks-worker",
      "name_prefix": "",
      "path": "/",
      "permissions_boundary": null,
      "tags": {},
      "tags_all": {},
      "unique_id": "AROARIKPT7NUI4SEGKIQG"
     }
    },
    {
     "address": "aws_iam_role_policy_attachment.AmazonEC2ContainerRegistryReadOnly",
     "mode": "managed",
     "name": "AmazonEC2ContainerRegistryReadOnly",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_iam_role_policy_attachment",
     "values": {
      "id": "ed-eks-worker-2023092910423820630000000b",
      "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "role": "ed-eks-worker"
     }
    },
    {
     "address": "aws_iam_role_policy_attachment.AmazonEKSClusterPolicy",
     "mode": "managed",
     "name": "AmazonEKSClusterPolicy",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_iam_role_policy_attachment",
     "values": {
      "id": "ed-eks-master-2023092910423820460000000a",
      "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
      "role": "ed-eks-master"
     }
    },
    {
     "address": "aws_iam_role_policy_attachment.AmazonEKSServicePolicy",
     "mode": "managed",
     "name": "AmazonEKSServicePolicy",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_iam_role_policy_attachment",
     "values": {
      "id": "ed-eks-master-20230929104238203300000009",
      "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
      "role": "ed-eks-master"
     }
    },
    {
     "address": "aws_iam_role_policy_attachment.AmazonEKSVPCResourceController",
     "mode": "managed",
     "name": "AmazonEKSVPCResourceController",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_iam_role_policy_attachment",
     "values": {
      "id": "ed-eks-master-20230929104238201600000008",
      "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
      "role": "ed-eks-master"
     }
    },
    {
     "address": "aws_iam_role_policy_attachment.AmazonEKSWorkerNodePolicy",
     "mode": "managed",
     "name": "AmazonEKSWorkerNodePolicy",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_iam_role_policy_attachment",
     "values": {
      "id": "ed-eks-worker-20230929104237944600000004",
      "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "role": "ed-eks-worker"
     }
    },
    {
     "address": "aws_iam_role_policy_attachment.AmazonEKS_CNI_Policy",
     "mode": "managed",
     "name": "AmazonEKS_CNI_Policy",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_iam_role_policy_attachment",
     "values": {
      "id": "ed-eks-worker-20230929104238060500000007",
      "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
      "role": "ed-eks-worker"
     }
    },
    {
     "address": "aws_iam_role_policy_attachment.AmazonSSMManagedInstanceCore",
     "mode": "managed",
     "name": "AmazonSSMManagedInstanceCore",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_iam_role_policy_attachment",
     "values": {
      "id": "ed-eks-worker-20230929104237884100000002",
      "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
      "role": "ed-eks-worker"
     }
    },
    {
     "address": "aws_iam_role_policy_attachment.autoscaler",
     "mode": "managed",
     "name": "autoscaler",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_iam_role_policy_attachment",
     "values": {
      "id": "ed-eks-worker-20230929104237984800000005",
      "policy_arn": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
      "role": "ed-eks-worker"
     }
    },
    {
     "address": "aws_iam_role_policy_attachment.s3",
     "mode": "managed",
     "name": "s3",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_iam_role_policy_attachment",
     "values": {
      "id": "ed-eks-worker-20230929104238050500000006",
      "policy_arn": "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
      "role": "ed-eks-worker"
     }
    },
    {
     "address": "aws_iam_role_policy_attachment.x-ray",
     "mode": "managed",
     "name": "x-ray",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_iam_role_policy_attachment",
     "values": {
      "id": "ed-eks-worker-20230929104237890000000003",
      "policy_arn": "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
      "role": "ed-eks-worker"
     }
    },
    {
     "address": "aws_internet_gateway.igw",
     "mode": "managed",
     "name": "igw",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_internet_gateway",
     "values": {
      "tags": {
       "Name": "my-internet-gateway"
      },
      "tags_all": {
       "Name": "my-internet-gateway"
      },
      "timeouts": null,
      "vpc_id": "vpc-00de26259c65152d4"
     }
    },
    {
     "address": "aws_nat_gateway.my_nat_gateway[\"10.0.1.0/24\"]",
     "index": "10.0.1.0/24",
     "mode": "managed",
     "name": "my_nat_gateway",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "secondary_private_ip_addresses": [],
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_nat_gateway",
     "values": {
      "allocation_id": "eipalloc-0e2344eeee7bf7c66",
      "connectivity_type": "public",
      "secondary_allocation_ids": null,
      "subnet_id": "subnet-01e25e0c76c6457f6",
      "tags": {
       "Name": "my-nat-gateway-10.0.1.0/24"
      },
      "tags_all": {
       "Name": "my-nat-gateway-10.0.1.0/24"
      },
      "timeouts": null
     }
    },
    {
     "address": "aws_nat_gateway.my_nat_gateway[\"10.0.2.0/24\"]",
     "index": "10.0.2.0/24",
     "mode": "managed",
     "name": "my_nat_gateway",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "secondary_private_ip_addresses": [],
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_nat_gateway",
     "values": {
      "allocation_id": "eipalloc-0c88edee8e090ecc0",
      "connectivity_type": "public",
      "secondary_allocation_ids": null,
      "subnet_id": "subnet-0465084bc667c4897",
      "tags": {
       "Name": "my-nat-gateway-10.0.2.0/24"
      },
      "tags_all": {
       "Name": "my-nat-gateway-10.0.2.0/24"
      },
      "timeouts": null
     }
    },
    {
     "address": "aws_route.private_route[\"10.0.1.0/24\"]",
     "index": "10.0.1.0/24",
     "mode": "managed",
     "name": "private_route",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_route",
     "values": {
      "carrier_gateway_id": null,
      "core_network_arn": null,
      "destination_cidr_block": "0.0.0.0/0",
      "destination_ipv6_cidr_block": null,
      "destination_prefix_list_id": null,
      "egress_only_gateway_id": null,
      "gateway_id": null,
      "local_gateway_id": null,
      "route_table_id": "rtb-0e192ea7ef9fe961a",
      "timeouts": null,
      "transit_gateway_id": null,
      "vpc_endpoint_id": null,
      "vpc_peering_connection_id": null
     }
    },
    {
     "address": "aws_route.private_route[\"10.0.2.0/24\"]",
     "index": "10.0.2.0/24",
     "mode": "managed",
     "name": "private_route",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_route",
     "values": {
      "carrier_gateway_id": null,
      "core_network_arn": null,
      "destination_cidr_block": "0.0.0.0/0",
      "destination_ipv6_cidr_block": null,
      "destination_prefix_list_id": null,
      "egress_only_gateway_id": null,
      "gateway_id": null,
      "local_gateway_id": null,
      "route_table_id": "rtb-000ca2c4d8e86213c",
      "timeouts": null,
      "transit_gateway_id": null,
      "vpc_endpoint_id": null,
      "vpc_peering_connection_id": null
     }
    },
    {
     "address": "aws_route_table.private_route_table[\"10.0.1.0/24\"]",
     "index": "10.0.1.0/24",
     "mode": "managed",
     "name": "private_route_table",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "propagating_vgws": [],
      "route": [],
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_route_table",
     "values": {
      "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-0e192ea7ef9fe961a",
      "id": "rtb-0e192ea7ef9fe961a",
      "owner_id": "086603201384",
      "propagating_vgws": [],
      "route": [],
      "tags": {},
      "tags_all": {},
      "timeouts": null,
      "vpc_id": "vpc-00de26259c65152d4"
     }
    },
    {
     "address": "aws_route_table.private_route_table[\"10.0.2.0/24\"]",
     "index": "10.0.2.0/24",
     "mode": "managed",
     "name": "private_route_table",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "propagating_vgws": [],
      "route": [],
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_route_table",
     "values": {
      "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-000ca2c4d8e86213c",
      "id": "rtb-000ca2c4d8e86213c",
      "owner_id": "086603201384",
      "propagating_vgws": [],
      "route": [],
      "tags": {},
      "tags_all": {},
      "timeouts": null,
      "vpc_id": "vpc-00de26259c65152d4"
     }
    },
    {
     "address": "aws_route_table_association.my_rta[\"10.0.1.0/24\"]",
     "index": "10.0.1.0/24",
     "mode": "managed",
     "name": "my_rta",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_route_table_association",
     "values": {
      "gateway_id": "",
      "id": "rtbassoc-09b870cd44789b5b6",
      "route_table_id": "rtb-0e192ea7ef9fe961a",
      "subnet_id": "subnet-01e25e0c76c6457f6",
      "timeouts": null
     }
    },
    {
     "address": "aws_route_table_association.my_rta[\"10.0.2.0/24\"]",
     "index": "10.0.2.0/24",
     "mode": "managed",
     "name": "my_rta",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_route_table_association",
     "values": {
      "gateway_id": "",
      "id": "rtbassoc-035b6ce4113107d39",
      "route_table_id": "rtb-000ca2c4d8e86213c",
      "subnet_id": "subnet-0465084bc667c4897",
      "timeouts": null
     }
    },
    {
     "address": "aws_security_group.eks_control_plane_sg",
     "mode": "managed",
     "name": "eks_control_plane_sg",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 1,
     "sensitive_values": {
      "egress": [
       {
        "cidr_blocks": [
         false
        ],
        "ipv6_cidr_blocks": [],
        "prefix_list_ids": [],
        "security_groups": []
       }
      ],
      "ingress": [
       {
        "cidr_blocks": [
         false
        ],
        "ipv6_cidr_blocks": [],
        "prefix_list_ids": [],
        "security_groups": []
       },
       {
        "cidr_blocks": [],
        "ipv6_cidr_blocks": [],
        "prefix_list_ids": [],
        "security_groups": [
         false
        ]
       }
      ],
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_security_group",
     "values": {
      "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0afd46c11f40daa43",
      "description": "Security group for the EKS control plane",
      "egress": [
       {
        "cidr_blocks": [
         "0.0.0.0/0"
        ],
        "description": "",
        "from_port": 0,
        "ipv6_cidr_blocks": [],
        "prefix_list_ids": [],
        "protocol": "-1",
        "security_groups": [],
        "self": false,
        "to_port": 0
       }
      ],
      "id": "sg-0afd46c11f40daa43",
      "ingress": [
       {
        "cidr_blocks": [
         "0.0.0.0/0"
        ],
        "description": "",
        "from_port": 443,
        "ipv6_cidr_blocks": [],
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_groups": [],
        "self": false,
        "to_port": 443
       },
       {
        "cidr_blocks": [],
        "description": "",
        "from_port": 0,
        "ipv6_cidr_blocks": [],
        "prefix_list_ids": [],
        "protocol": "-1",
        "security_groups": [
         "sg-0a7a62279598f4465"
        ],
        "self": false,
        "to_port": 0
       }
      ],
      "name": "eks-control-plane-sg",
      "name_prefix": "",
      "owner_id": "086603201384",
      "revoke_rules_on_delete": false,
      "tags": {
       "Environment": "staging",
       "Name": "eks-control-plane-sg"
      },
      "tags_all": {
       "Environment": "staging",
       "Name": "eks-control-plane-sg"
      },
      "timeouts": null,
      "vpc_id": "vpc-00de26259c65152d4"
     }
    },
    {
     "address": "aws_security_group.worker_node_sg",
     "mode": "managed",
     "name": "worker_node_sg",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 1,
     "sensitive_values": {
      "egress": [
       {
        "cidr_blocks": [
         false
        ],
        "ipv6_cidr_blocks": [],
        "prefix_list_ids": [],
        "security_groups": []
       }
      ],
      "ingress": [
       {
        "cidr_blocks": [
         false
        ],
        "ipv6_cidr_blocks": [],
        "prefix_list_ids": [],
        "security_groups": []
       },
       {
        "cidr_blocks": [],
        "ipv6_cidr_blocks": [],
        "prefix_list_ids": [],
        "security_groups": [
         false
        ]
       }
      ],
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_security_group",
     "values": {
      "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0a7a62279598f4465",
      "description": "Security group for EKS worker nodes",
      "egress": [
       {
        "cidr_blocks": [
         "0.0.0.0/0"
        ],
        "description": "",
        "from_port": 0,
        "ipv6_cidr_blocks": [],
        "prefix_list_ids": [],
        "protocol": "-1",
        "security_groups": [],
        "self": false,
        "to_port": 0
       }
      ],
      "id": "sg-0a7a62279598f4465",
      "ingress": [
       {
        "cidr_blocks": [
         "0.0.0.0/0"
        ],
        "description": "",
        "from_port": 22,
        "ipv6_cidr_blocks": [],
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_groups": [],
        "self": false,
        "to_port": 22
       },
       {
        "cidr_blocks": [],
        "description": "",
        "from_port": 0,
        "ipv6_cidr_blocks": [],
        "prefix_list_ids": [],
        "protocol": "-1",
        "security_groups": [
         "sg-0afd46c11f40daa43"
        ],
        "self": false,
        "to_port": 0
       }
      ],
      "name": "eks-worker-node-sg",
      "name_prefix": "",
      "owner_id": "086603201384",
      "revoke_rules_on_delete": false,
      "tags": {
       "Environment": "staging",
       "Name": "eks-worker-node-sg"
      },
      "tags_all": {
       "Environment": "staging",
       "Name": "eks-worker-node-sg"
      },
      "timeouts": null,
      "vpc_id": "vpc-00de26259c65152d4"
     }
    },
    {
     "address": "aws_security_group_rule.control_plane_egress",
     "mode": "managed",
     "name": "control_plane_egress",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 2,
     "sensitive_values": {
      "cidr_blocks": [
       false
      ]
     },
     "type": "aws_security_group_rule",
     "values": {
      "cidr_blocks": [
       "0.0.0.0/0"
      ],
      "description": "",
      "from_port": 0,
      "id": "sgrule-3593713217",
      "ipv6_cidr_blocks": null,
      "prefix_list_ids": null,
      "protocol": "-1",
      "security_group_id": "sg-0afd46c11f40daa43",
      "security_group_rule_id": "sgr-0b88db6161d47ef95",
      "self": false,
      "source_security_group_id": null,
      "timeouts": null,
      "to_port": 0,
      "type": "egress"
     }
    },
    {
     "address": "aws_security_group_rule.control_plane_ingress",
     "mode": "managed",
     "name": "control_plane_ingress",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 2,
     "sensitive_values": {
      "cidr_blocks": [
       false
      ]
     },
     "type": "aws_security_group_rule",
     "values": {
      "cidr_blocks": [
       "0.0.0.0/0"
      ],
      "description": "",
      "from_port": 443,
      "id": "sgrule-1651983592",
      "ipv6_cidr_blocks": null,
      "prefix_list_ids": null,
      "protocol": "tcp",
      "security_group_id": "sg-0afd46c11f40daa43",
      "security_group_rule_id": "sgr-09ebe54cbfe80346c",
      "self": false,
      "source_security_group_id": null,
      "timeouts": null,
      "to_port": 443,
      "type": "ingress"
     }
    },
    {
     "address": "aws_security_group_rule.control_plane_to_worker",
     "mode": "managed",
     "name": "control_plane_to_worker",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 2,
     "sensitive_values": {},
     "type": "aws_security_group_rule",
     "values": {
      "cidr_blocks": null,
      "description": "",
      "from_port": 0,
      "id": "sgrule-1792465420",
      "ipv6_cidr_blocks": null,
      "prefix_list_ids": null,
      "protocol": "-1",
      "security_group_id": "sg-0a7a62279598f4465",
      "security_group_rule_id": "sgr-06f5da83fac090767",
      "self": false,
      "source_security_group_id": "sg-0afd46c11f40daa43",
      "timeouts": null,
      "to_port": 0,
      "type": "ingress"
     }
    },
    {
     "address": "aws_security_group_rule.worker_egress",
     "mode": "managed",
     "name": "worker_egress",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 2,
     "sensitive_values": {
      "cidr_blocks": [
       false
      ]
     },
     "type": "aws_security_group_rule",
     "values": {
      "cidr_blocks": [
       "0.0.0.0/0"
      ],
      "description": "",
      "from_port": 0,
      "id": "sgrule-3630475665",
      "ipv6_cidr_blocks": null,
      "prefix_list_ids": null,
      "protocol": "-1",
      "security_group_id": "sg-0a7a62279598f4465",
      "security_group_rule_id": "sgr-0e8f46dd8b087c27c",
      "self": false,
      "source_security_group_id": null,
      "timeouts": null,
      "to_port": 0,
      "type": "egress"
     }
    },
    {
     "address": "aws_security_group_rule.worker_ssh_ingress",
     "mode": "managed",
     "name": "worker_ssh_ingress",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 2,
     "sensitive_values": {
      "cidr_blocks": [
       false
      ]
     },
     "type": "aws_security_group_rule",
     "values": {
      "cidr_blocks": [
       "0.0.0.0/0"
      ],
      "description": "",
      "from_port": 22,
      "id": "sgrule-1454391944",
      "ipv6_cidr_blocks": null,
      "prefix_list_ids": null,
      "protocol": "tcp",
      "security_group_id": "sg-0a7a62279598f4465",
      "security_group_rule_id": "sgr-0fb3682a9b443c31f",
      "self": false,
      "source_security_group_id": null,
      "timeouts": null,
      "to_port": 22,
      "type": "ingress"
     }
    },
    {
     "address": "aws_security_group_rule.worker_to_control_plane",
     "mode": "managed",
     "name": "worker_to_control_plane",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 2,
     "sensitive_values": {},
     "type": "aws_security_group_rule",
     "values": {
      "cidr_blocks": null,
      "description": "",
      "from_port": 0,
      "id": "sgrule-2431943090",
      "ipv6_cidr_blocks": null,
      "prefix_list_ids": null,
      "protocol": "-1",
      "security_group_id": "sg-0afd46c11f40daa43",
      "security_group_rule_id": "sgr-039e0602c8f4745b3",
      "self": false,
      "source_security_group_id": "sg-0a7a62279598f4465",
      "timeouts": null,
      "to_port": 0,
      "type": "ingress"
     }
    },
    {
     "address": "aws_subnet.private_subnet[\"10.0.1.0/24\"]",
     "index": "10.0.1.0/24",
     "mode": "managed",
     "name": "private_subnet",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 1,
     "sensitive_values": {
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_subnet",
     "values": {
      "arn": "arn:aws:ec2:us-east-1:086603201384:subnet/subnet-01e25e0c76c6457f6",
      "assign_ipv6_address_on_creation": false,
      "availability_zone": "us-east-1a",
      "availability_zone_id": "use1-az1",
      "cidr_block": "10.0.1.0/24",
      "customer_owned_ipv4_pool": "",
      "enable_dns64": false,
      "enable_lni_at_device_index": 0,
      "enable_resource_name_dns_a_record_on_launch": false,
      "enable_resource_name_dns_aaaa_record_on_launch": false,
      "id": "subnet-01e25e0c76c6457f6",
      "ipv6_cidr_block": "",
      "ipv6_cidr_block_association_id": "",
      "ipv6_native": false,
      "map_customer_owned_ip_on_launch": false,
      "map_public_ip_on_launch": false,
      "outpost_arn": "",
      "owner_id": "086603201384",
      "private_dns_hostname_type_on_launch": "ip-name",
      "tags": {},
      "tags_all": {},
      "timeouts": null,
      "vpc_id": "vpc-00de26259c65152d4"
     }
    },
    {
     "address": "aws_subnet.private_subnet[\"10.0.2.0/24\"]",
     "index": "10.0.2.0/24",
     "mode": "managed",
     "name": "private_subnet",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 1,
     "sensitive_values": {
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_subnet",
     "values": {
      "arn": "arn:aws:ec2:us-east-1:086603201384:subnet/subnet-0465084bc667c4897",
      "assign_ipv6_address_on_creation": false,
      "availability_zone": "us-east-1b",
      "availability_zone_id": "use1-az2",
      "cidr_block": "10.0.2.0/24",
      "customer_owned_ipv4_pool": "",
      "enable_dns64": false,
      "enable_lni_at_device_index": 0,
      "enable_resource_name_dns_a_record_on_launch": false,
      "enable_resource_name_dns_aaaa_record_on_launch": false,
      "id": "subnet-0465084bc667c4897",
      "ipv6_cidr_block": "",
      "ipv6_cidr_block_association_id": "",
      "ipv6_native": false,
      "map_customer_owned_ip_on_launch": false,
      "map_public_ip_on_launch": false,
      "outpost_arn": "",
      "owner_id": "086603201384",
      "private_dns_hostname_type_on_launch": "ip-name",
      "tags": {},
      "tags_all": {},
      "timeouts": null,
      "vpc_id": "vpc-00de26259c65152d4"
     }
    },
    {
     "address": "aws_vpc.vpc",
     "mode": "managed",
     "name": "vpc",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 1,
     "sensitive_values": {
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_vpc",
     "values": {
      "arn": "arn:aws:ec2:us-east-1:086603201384:vpc/vpc-00de26259c65152d4",
      "assign_generated_ipv6_cidr_block": false,
      "cidr_block": "10.0.0.0/16",
      "default_network_acl_id": "acl-0311f83415a4a0d51",
      "default_route_table_id": "rtb-0d7da816b4e73db19",
      "default_security_group_id": "sg-05bb4fee2ac8de8ce",
      "dhcp_options_id": "dopt-08e6ff91b51211784",
      "enable_dns_hostnames": true,
      "enable_dns_support": true,
      "enable_network_address_usage_metrics": false,
      "id": "vpc-00de26259c65152d4",
      "instance_tenancy": "default",
      "ipv4_ipam_pool_id": null,
      "ipv4_netmask_length": null,
      "ipv6_association_id": "",
      "ipv6_cidr_block": "",
      "ipv6_cidr_block_network_border_group": "",
      "ipv6_ipam_pool_id": "",
      "ipv6_netmask_length": 0,
      "main_route_table_id": "rtb-0d7da816b4e73db19",
      "owner_id": "086603201384",
      "tags": {
       "Envrironment": "staging"
      },
      "tags_all": {
       "Envrironment": "staging"
      }
     }
    }
   ]
  }
 },
 "prior_state": {
  "format_version": "1.0",
  "terraform_version": "1.5.7",
  "values": {
   "outputs": {
    "cluster_endpoint": {
     "sensitive": false,
     "type": "string",
     "value": "https://B55713EFAAFA43A934348AD6A9CFC181.gr7.us-east-1.eks.amazonaws.com"
    },
    "cluster_security_group_id": {
     "sensitive": false,
     "type": "string",
     "value": "sg-00d0fd8acde68f1c9"
    },
    "route-table-id": {
     "sensitive": false,
     "type": [
      "object",
      {
       "10.0.1.0/24": [
        "object",
        {
         "arn": "string",
         "id": "string",
         "owner_id": "string",
         "propagating_vgws": [
          "set",
          "string"
         ],
         "route": [
          "set",
          [
           "object",
           {
            "carrier_gateway_id": "string",
            "cidr_block": "string",
            "core_network_arn": "string",
            "destination_prefix_list_id": "string",
            "egress_only_gateway_id": "string",
            "gateway_id": "string",
            "ipv6_cidr_block": "string",
            "local_gateway_id": "string",
            "nat_gateway_id": "string",
            "network_interface_id": "string",
            "transit_gateway_id": "string",
            "vpc_endpoint_id": "string",
            "vpc_peering_connection_id": "string"
           }
          ]
         ],
         "tags": [
          "map",
          "string"
         ],
         "tags_all": [
          "map",
          "string"
         ],
         "timeouts": [
          "object",
          {
           "create": "string",
           "delete": "string",
           "update": "string"
          }
         ],
         "vpc_id": "string"
        }
       ],
       "10.0.2.0/24": [
        "object",
        {
         "arn": "string",
         "id": "string",
         "owner_id": "string",
         "propagating_vgws": [
          "set",
          "string"
         ],
         "route": [
          "set",
          [
           "object",
           {
            "carrier_gateway_id": "string",
            "cidr_block": "string",
            "core_network_arn": "string",
            "destination_prefix_list_id": "string",
            "egress_only_gateway_id": "string",
            "gateway_id": "string",
            "ipv6_cidr_block": "string",
            "local_gateway_id": "string",
            "nat_gateway_id": "string",
            "network_interface_id": "string",
            "transit_gateway_id": "string",
            "vpc_endpoint_id": "string",
            "vpc_peering_connection_id": "string"
           }
          ]
         ],
         "tags": [
          "map",
          "string"
         ],
         "tags_all": [
          "map",
          "string"
         ],
         "timeouts": [
          "object",
          {
           "create": "string",
           "delete": "string",
           "update": "string"
          }
         ],
         "vpc_id": "string"
        }
       ]
      }
     ],
     "value": {
      "10.0.1.0/24": {
       "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-0e192ea7ef9fe961a",
       "id": "rtb-0e192ea7ef9fe961a",
       "owner_id": "086603201384",
       "propagating_vgws": [],
       "route": [],
       "tags": {},
       "tags_all": {},
       "timeouts": null,
       "vpc_id": "vpc-00de26259c65152d4"
      },
      "10.0.2.0/24": {
       "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-000ca2c4d8e86213c",
       "id": "rtb-000ca2c4d8e86213c",
       "owner_id": "086603201384",
       "propagating_vgws": [],
       "route": [],
       "tags": {},
       "tags_all": {},
       "timeouts": null,
       "vpc_id": "vpc-00de26259c65152d4"
      }
     }
    }
   },
   "root_module": {
    "child_modules": [
     {
      "address": "module.eks",
      "child_modules": [
       {
        "address": "module.eks.module.eks_managed_node_group[\"ng1\"]",
        "child_modules": [
         {
          "address": "module.eks.module.eks_managed_node_group[\"ng1\"].module.user_data"
         }
        ],
        "resources": [
         {
          "address": "module.eks.module.eks_managed_node_group[\"ng1\"].data.aws_caller_identity.current",
          "mode": "data",
          "name": "current",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_caller_identity",
          "values": {
           "account_id": "086603201384",
           "arn": "arn:aws:iam::086603201384:root",
           "id": "086603201384",
           "user_id": "086603201384"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"ng1\"].data.aws_iam_policy_document.assume_role_policy[0]",
          "index": 0,
          "mode": "data",
          "name": "assume_role_policy",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "statement": [
            {
             "actions": [
              false
             ],
             "condition": [],
             "not_actions": [],
             "not_principals": [],
             "not_resources": [],
             "principals": [
              {
               "identifiers": [
                false
               ]
              }
             ],
             "resources": []
            }
           ]
          },
          "type": "aws_iam_policy_document",
          "values": {
           "id": "2560088296",
           "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
           "override_policy_documents": null,
           "policy_id": null,
           "source_policy_documents": null,
           "statement": [
            {
             "actions": [
              "sts:AssumeRole"
             ],
             "condition": [],
             "effect": "Allow",
             "not_actions": [],
             "not_principals": [],
             "not_resources": [],
             "principals": [
              {
               "identifiers": [
                "ec2.amazonaws.com"
               ],
               "type": "Service"
              }
             ],
             "resources": [],
             "sid": "EKSNodeAssumeRole"
            }
           ],
           "version": "2012-10-17"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"ng1\"].data.aws_partition.current",
          "mode": "data",
          "name": "current",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_partition",
          "values": {
           "dns_suffix": "amazonaws.com",
           "id": "aws",
           "partition": "aws",
           "reverse_dns_prefix": "com.amazonaws"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role.this[0]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "inline_policy": [],
           "managed_policy_arns": [
            false,
            false,
            false
           ],
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_iam_role",
          "values": {
           "arn": "arn:aws:iam::086603201384:role/ng1-eks-node-group-20230929104251899300000012",
           "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
           "create_date": "2023-09-29T10:42:52Z",
           "description": "EKS managed node group IAM role",
           "force_detach_policies": true,
           "id": "ng1-eks-node-group-20230929104251899300000012",
           "inline_policy": [],
           "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
           ],
           "max_session_duration": 3600,
           "name": "ng1-eks-node-group-20230929104251899300000012",
           "name_prefix": "ng1-eks-node-group-",
           "path": "/",
           "permissions_boundary": null,
           "tags": {
            "Name": "ng1"
           },
           "tags_all": {
            "Name": "ng1"
           },
           "unique_id": "AROARIKPT7NUGPNRXKT2S"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_iam_role_policy_attachment",
          "values": {
           "id": "ng1-eks-node-group-20230929104251899300000012-20230929104252569100000015",
           "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
           "role": "ng1-eks-node-group-20230929104251899300000012"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_iam_role_policy_attachment",
          "values": {
           "id": "ng1-eks-node-group-20230929104251899300000012-20230929104252567500000013",
           "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
           "role": "ng1-eks-node-group-20230929104251899300000012"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_iam_role_policy_attachment",
          "values": {
           "id": "ng1-eks-node-group-20230929104251899300000012-20230929104252567500000014",
           "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
           "role": "ng1-eks-node-group-20230929104251899300000012"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_launch_template.this[0]",
          "depends_on": [
           "aws_subnet.private_subnet",
           "aws_vpc.vpc",
           "module.eks.aws_cloudwatch_log_group.this",
           "module.eks.aws_eks_cluster.this",
           "module.eks.aws_iam_policy.cni_ipv6_policy",
           "module.eks.aws_iam_role.this",
           "module.eks.aws_iam_role_policy_attachment.this",
           "module.eks.aws_security_group.cluster",
           "module.eks.aws_security_group.node",
           "module.eks.aws_security_group_rule.cluster",
           "module.eks.aws_security_group_rule.node",
           "module.eks.data.aws_caller_identity.current",
           "module.eks.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
           "module.eks.data.aws_iam_session_context.current",
           "module.eks.data.aws_partition.current",
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current",
           "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
           "module.eks.module.kms.aws_kms_external_key.this",
           "module.eks.module.kms.aws_kms_key.this",
           "module.eks.module.kms.data.aws_caller_identity.current",
           "module.eks.module.kms.data.aws_iam_policy_document.this",
           "module.eks.module.kms.data.aws_partition.current",
           "module.eks.time_sleep.this"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "block_device_mappings": [],
           "capacity_reservation_specification": [],
           "cpu_options": [],
           "credit_specification": [],
           "elastic_gpu_specifications": [],
           "elastic_inference_accelerator": [],
           "enclave_options": [],
           "hibernation_options": [],
           "iam_instance_profile": [],
           "instance_market_options": [],
           "instance_requirements": [],
           "license_specification": [],
           "maintenance_options": [],
           "metadata_options": [
            {}
           ],
           "monitoring": [
            {}
           ],
           "network_interfaces": [],
           "placement": [],
           "private_dns_name_options": [],
           "security_group_names": [],
           "tag_specifications": [
            {
             "tags": {}
            },
            {
             "tags": {}
            },
            {
             "tags": {}
            }
           ],
           "tags": {},
           "tags_all": {},
           "vpc_security_group_ids": [
            false
           ]
          },
          "type": "aws_launch_template",
          "values": {
           "arn": "arn:aws:ec2:us-east-1:086603201384:launch-template/lt-0cbad37c3cd6534eb",
           "block_device_mappings": [],
           "capacity_reservation_specification": [],
           "cpu_options": [],
           "credit_specification": [],
           "default_version": 1,
           "description": "Custom launch template for ng1 EKS managed node group",
           "disable_api_stop": false,
           "disable_api_termination": false,
           "ebs_optimized": "",
           "elastic_gpu_specifications": [],
           "elastic_inference_accelerator": [],
           "enclave_options": [],
           "hibernation_options": [],
           "iam_instance_profile": [],
           "id": "lt-0cbad37c3cd6534eb",
           "image_id": "",
           "instance_initiated_shutdown_behavior": "",
           "instance_market_options": [],
           "instance_requirements": [],
           "instance_type": "",
           "kernel_id": "",
           "key_name": "",
           "latest_version": 1,
           "license_specification": [],
           "maintenance_options": [],
           "metadata_options": [
            {
             "http_endpoint": "enabled",
             "http_protocol_ipv6": "",
             "http_put_response_hop_limit": 2,
             "http_tokens": "required",
             "instance_metadata_tags": ""
            }
           ],
           "monitoring": [
            {
             "enabled": true
            }
           ],
           "name": "ng1-20230929110631595900000018",
           "name_prefix": "ng1-",
           "network_interfaces": [],
           "placement": [],
           "private_dns_name_options": [],
           "ram_disk_id": "",
           "security_group_names": [],
           "tag_specifications": [
            {
             "resource_type": "instance",
             "tags": {
              "Name": "ng1"
             }
            },
            {
             "resource_type": "network-interface",
             "tags": {
              "Name": "ng1"
             }
            },
            {
             "resource_type": "volume",
             "tags": {
              "Name": "ng1"
             }
            }
           ],
           "tags": {
            "Name": "ng1"
           },
           "tags_all": {
            "Name": "ng1"
           },
           "update_default_version": true,
           "user_data": "",
           "vpc_security_group_ids": [
            "sg-0f13c4ac5030c4c04"
           ]
          }
         }
        ]
       },
       {
        "address": "module.eks.module.kms",
        "resources": [
         {
          "address": "module.eks.module.kms.data.aws_caller_identity.current",
          "mode": "data",
          "name": "current",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_caller_identity",
          "values": {
           "account_id": "086603201384",
           "arn": "arn:aws:iam::086603201384:root",
           "id": "086603201384",
           "user_id": "086603201384"
          }
         },
         {
          "address": "module.eks.module.kms.data.aws_iam_policy_document.this[0]",
          "index": 0,
          "mode": "data",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "statement": [
            {
             "actions": [
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false
             ],
             "condition": [],
             "not_actions": [],
             "not_principals": [],
             "not_resources": [],
             "principals": [
              {
               "identifiers": [
                false
               ]
              }
             ],
             "resources": [
              false
             ]
            },
            {
             "actions": [
              false,
              false,
              false,
              false,
              false
             ],
             "condition": [],
             "not_actions": [],
             "not_principals": [],
             "not_resources": [],
             "principals": [
              {
               "identifiers": [
                false
               ]
              }
             ],
             "resources": [
              false
             ]
            }
           ]
          },
          "type": "aws_iam_policy_document",
          "values": {
           "id": "107566548",
           "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"KeyAdministration\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Update*\",\n        \"kms:UntagResource\",\n        \"kms:TagResource\",\n        \"kms:ScheduleKeyDeletion\",\n        \"kms:Revoke*\",\n        \"kms:Put*\",\n        \"kms:List*\",\n        \"kms:Get*\",\n        \"kms:Enable*\",\n        \"kms:Disable*\",\n        \"kms:Describe*\",\n        \"kms:Delete*\",\n        \"kms:Create*\",\n        \"kms:CancelKeyDeletion\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::086603201384:root\"\n      }\n    },\n    {\n      \"Sid\": \"KeyUsage\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:Encrypt\",\n        \"kms:DescribeKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001\"\n      }\n    }\n  ]\n}",
           "override_policy_documents": null,
           "policy_id": null,
           "source_policy_documents": null,
           "statement": [
            {
             "actions": [
              "kms:CancelKeyDeletion",
              "kms:Create*",
              "kms:Delete*",
              "kms:Describe*",
              "kms:Disable*",
              "kms:Enable*",
              "kms:Get*",
              "kms:List*",
              "kms:Put*",
              "kms:Revoke*",
              "kms:ScheduleKeyDeletion",
              "kms:TagResource",
              "kms:UntagResource",
              "kms:Update*"
             ],
             "condition": [],
             "effect": "Allow",
             "not_actions": [],
             "not_principals": [],
             "not_resources": [],
             "principals": [
              {
               "identifiers": [
                "arn:aws:iam::086603201384:root"
               ],
               "type": "AWS"
              }
             ],
             "resources": [
              "*"
             ],
             "sid": "KeyAdministration"
            },
            {
             "actions": [
              "kms:Decrypt",
              "kms:DescribeKey",
              "kms:Encrypt",
              "kms:GenerateDataKey*",
              "kms:ReEncrypt*"
             ],
             "condition": [],
             "effect": "Allow",
             "not_actions": [],
             "not_principals": [],
             "not_resources": [],
             "principals": [
              {
               "identifiers": [
                "arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001"
               ],
               "type": "AWS"
              }
             ],
             "resources": [
              "*"
             ],
             "sid": "KeyUsage"
            }
           ],
           "version": "2012-10-17"
          }
         },
         {
          "address": "module.eks.module.kms.data.aws_partition.current",
          "mode": "data",
          "name": "current",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_partition",
          "values": {
           "dns_suffix": "amazonaws.com",
           "id": "aws",
           "partition": "aws",
           "reverse_dns_prefix": "com.amazonaws"
          }
         },
         {
          "address": "module.eks.module.kms.aws_kms_key.this[0]",
          "depends_on": [
           "module.eks.aws_iam_role.this",
           "module.eks.data.aws_caller_identity.current",
           "module.eks.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.data.aws_iam_session_context.current",
           "module.eks.data.aws_partition.current",
           "module.eks.module.kms.data.aws_caller_identity.current",
           "module.eks.module.kms.data.aws_iam_policy_document.this",
           "module.eks.module.kms.data.aws_partition.current"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_kms_key",
          "values": {
           "arn": "arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
           "bypass_policy_lockout_safety_check": false,
           "custom_key_store_id": "",
           "customer_master_key_spec": "SYMMETRIC_DEFAULT",
           "deletion_window_in_days": null,
           "description": "my_eks cluster encryption key",
           "enable_key_rotation": true,
           "id": "6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
           "is_enabled": true,
           "key_id": "6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
           "key_usage": "ENCRYPT_DECRYPT",
           "multi_region": false,
           "policy": "{\"Statement\":[{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:Put*\",\"kms:List*\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::086603201384:root\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
           "tags": {},
           "tags_all": {}
          }
         }
        ]
       }
      ],
      "resources": [
       {
        "address": "module.eks.data.aws_caller_identity.current",
        "mode": "data",
        "name": "current",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_caller_identity",
        "values": {
         "account_id": "086603201384",
         "arn": "arn:aws:iam::086603201384:root",
         "id": "086603201384",
         "user_id": "086603201384"
        }
       },
       {
        "address": "module.eks.data.aws_iam_policy_document.assume_role_policy[0]",
        "index": 0,
        "mode": "data",
        "name": "assume_role_policy",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "statement": [
          {
           "actions": [
            false
           ],
           "condition": [],
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [
            {
             "identifiers": [
              false
             ]
            }
           ],
           "resources": []
          }
         ]
        },
        "type": "aws_iam_policy_document",
        "values": {
         "id": "2764486067",
         "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
         "override_policy_documents": null,
         "policy_id": null,
         "source_policy_documents": null,
         "statement": [
          {
           "actions": [
            "sts:AssumeRole"
           ],
           "condition": [],
           "effect": "Allow",
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [
            {
             "identifiers": [
              "eks.amazonaws.com"
             ],
             "type": "Service"
            }
           ],
           "resources": [],
           "sid": "EKSClusterAssumeRole"
          }
         ],
         "version": "2012-10-17"
        }
       },
       {
        "address": "module.eks.data.aws_iam_session_context.current",
        "mode": "data",
        "name": "current",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_iam_session_context",
        "values": {
         "arn": "arn:aws:iam::086603201384:root",
         "id": "arn:aws:iam::086603201384:root",
         "issuer_arn": "arn:aws:iam::086603201384:root",
         "issuer_id": "",
         "issuer_name": "",
         "session_name": ""
        }
       },
       {
        "address": "module.eks.data.aws_partition.current",
        "mode": "data",
        "name": "current",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_partition",
        "values": {
         "dns_suffix": "amazonaws.com",
         "id": "aws",
         "partition": "aws",
         "reverse_dns_prefix": "com.amazonaws"
        }
       },
       {
        "address": "module.eks.data.tls_certificate.this[0]",
        "index": 0,
        "mode": "data",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/tls",
        "schema_version": 0,
        "sensitive_values": {
         "certificates": [
          {},
          {},
          {},
          {}
         ]
        },
        "type": "tls_certificate",
        "values": {
         "certificates": [
          {
           "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
           "is_ca": true,
           "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
           "not_after": "2034-06-28T17:39:16Z",
           "not_before": "2009-09-02T00:00:00Z",
           "public_key_algorithm": "RSA",
           "serial_number": "12037640545166866303",
           "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
           "signature_algorithm": "SHA256-RSA",
           "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
           "version": 3
          },
          {
           "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
           "is_ca": true,
           "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
           "not_after": "2037-12-31T01:00:00Z",
           "not_before": "2015-05-25T12:00:00Z",
           "public_key_algorithm": "RSA",
           "serial_number": "144918191876577076464031512351042010504348870",
           "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
           "signature_algorithm": "SHA256-RSA",
           "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
           "version": 3
          },
          {
           "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSSkvL1E7HtTvq8ZSELToPoTANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjUzMFoXDTMwMDgyMzIyMjUzMFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALtDGMZa\nqHneKei1by6+pUPPLljTB143Si6VpEWPc6mSkFhZb/6qrkZyoHlQLbDYnI2D7hD0\nsdzEqfnuAjIsuXQLG3A8TvX6V3oFNBFVe8NlLJHvBseKY88saLwufxkZVwk74g4n\nWlNMXzla9Y5F3wwRHwMVH443xGz6UtGSZSqQ94eFx5X7Tlqt8whi8qCaKdZ5rNak\n+r9nUThOeClqFd4oXych//Rc7Y0eX1KNWHYSI1Nk31mYgiK3JvH063g+K9tHA63Z\neTgKgndlh+WI+zv7i44HepRZjA1FYwYZ9Vv/9UkC5Yz8/yU65fgjaE+wVHM4e/Yy\nC2osrPWE7gJ+dXMCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUwDFSzVpQw4J8dHHOy+mc+XrrguIwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQAtTi6Fs0Azfi+iwm7jrz+CSxHH+uHl7Law3MQSXVtR8RV53PtR6r/6gNpqlzdo\nZq4FKbADi1v9Bun8RY8D51uedRfjsbeodizeBB8nXmeyD33Ep7VATj4ozcd31YFV\nfgRhvTSxNrrTlNpWkUk0m3BMPv8sg381HhA6uEYokE5q9uws/3YkKqRiEz3TsaWm\nJqIRZhMbgAfp7O7FUwFIb7UIspogZSKxPIWJpxiPo3TcBambbVtQOcNRWz5qCQdD\nslI2yayq0n2TXoHyNCLEH8rpsJRVILFsg0jc7BaFrMnF462+ajSehgj12IidNeRN\n4zl+EoNaWdpnWndvSpAEkq2P\n-----END CERTIFICATE-----\n",
           "is_ca": true,
           "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
           "not_after": "2030-08-23T22:25:30Z",
           "not_before": "2022-08-23T22:25:30Z",
           "public_key_algorithm": "RSA",
           "serial_number": "166129353110899469622597955040406457904926625",
           "sha1_fingerprint": "414a2060b738c635cc7fc243e052615592830c53",
           "signature_algorithm": "SHA256-RSA",
           "subject": "CN=Amazon RSA 2048 M02,O=Amazon,C=US",
           "version": 3
          },
          {
           "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF7DCCBNSgAwIBAgIQByOkjeOvl//8xMrhlZkruzANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAyMB4XDTIzMDUxMzAwMDAwMFoXDTI0MDYxMDIzNTk1OVowKzEp\nMCcGA1UEAxMgb2lkYy5la3MudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20wggEiMA0G\nCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQClT+mO1HZk/Gp/3sS6BO8QDhG0yK53\nE11wkdlUn9HEomcqZ2VVhbEG4ahOZY5MLUqIQViMswUueYFov57zyGnPSnH0IrMu\nmL3/dqxEwP96VPm5ZgbjCfartRfJcuYmmMCoWxocMdTq09ECEjawt47i4FmOLJmH\n+UUnisQgHMvPHtCrfL1WYAgdN3ls4meIFkS1CVHLmoCG9MuponJu3+uqw9UHxPZz\nvGLezHUUSzLE0+b+1Wd6DAPJBZmCa+PBweaRfrlqhhgW+QHcCK7XxlfwMxvzwmdv\nicOBHF7SJM/o3opUvrUf/XJCtCDHuv0GQNxyCcpJImQJ4Ae0MtEihY/rAgMBAAGj\nggL5MIIC9TAfBgNVHSMEGDAWgBTAMVLNWlDDgnx0cc7L6Zz5euuC4jAdBgNVHQ4E\nFgQUeamiamg4o8YroTJziJnlxHJnDdEwKwYDVR0RBCQwIoIgb2lkYy5la3MudXMt\nZWFzdC0xLmFtYXpvbmF3cy5jb20wDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQG\nCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8ENDAyMDCgLqAshipodHRwOi8vY3Js\nLnIybTAyLmFtYXpvbnRydXN0LmNvbS9yMm0wMi5jcmwwEwYDVR0gBAwwCjAIBgZn\ngQwBAgEwdQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8vb2NzcC5y\nMm0wMi5hbWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9jcnQucjJt\nMDIuYW1hem9udHJ1c3QuY29tL3IybTAyLmNlcjAMBgNVHRMBAf8EAjAAMIIBfgYK\nKwYBBAHWeQIEAgSCAW4EggFqAWgAdgDuzdBk1dsazsVct520zROiModGfLzs3sNR\nSFlGcR+1mwAAAYgTgMKgAAAEAwBHMEUCIHtTzRueHJdgA2Wq32YkXNXRJ1ZRD2uC\nQCn025Jin2hCAiEAlV/lCQaMq1JoBRlULDV7n9f/VS8+xyJSVgMFRFwFtzsAdgBI\nsONr2qZHNA/lagL6nTDrHFIBy1bdLIHZu7+rOdiEcwAAAYgTgMLXAAAEAwBHMEUC\nIAKsJE1jj4gpyaa2VgkbHFszMoco2rABil1iy2YvVzmTAiEAsuzpO1atz7WIx1CM\nMU9iMqq58yDpLhjQFktRuWamDlsAdgDatr9rP7W2Ip+bwrtca+hwkXFsu1GEhTS9\npD0wSNf7qwAAAYgTgMKjAAAEAwBHMEUCIHuwITeM92ncsbOvXgXPQjLHDLgReknJ\nTUoo4uIlPetJAiEApQ3W+NHlj6/RhckoAxGn4zE1alq+Y3Bk3JUFAvDrR78wDQYJ\nKoZIhvcNAQELBQADggEBAFNUUzuzuuDQMUvefHzllQPg/zbGNeDRZeOomSl1FrxS\nFJ0CA2vznfoTXAJLS2/aWlQT9mR3h6WlxI5XSUaLrzcZi94F+l6Ixn8DJUhfgf+O\nZUxtmBX91AEQ1ccU+Odj2ILrWdSs28J82ODoPlkJ6OqIYo+kEXrUwy8SM2N9iFJw\nHgZNOwzPQ2Ox/ozlRh6/6OUgYZ84j343BoDnNbTQijLBe6HL4pVw4nPKWrUQnTot\nxMymAcBknnb4X4TcmEoJ0CrB1H6FKfe8yASCLjwSC72Os9ADyADMZqTUSOH1V8Vh\nR3Zv4DlLItu8BHaE59teueLM9AW1PBFMci5JiYrgLEM=\n-----END CERTIFICATE-----\n",
           "is_ca": false,
           "issuer": "CN=Amazon RSA 2048 M02,O=Amazon,C=US",
           "not_after": "2024-06-10T23:59:59Z",
           "not_before": "2023-05-13T00:00:00Z",
           "public_key_algorithm": "RSA",
           "serial_number": "9489663917354420509896793514074254267",
           "sha1_fingerprint": "aaa68bb211d468db8a8a19561ccba2e4043dcc80",
           "signature_algorithm": "SHA256-RSA",
           "subject": "CN=oidc.eks.us-east-1.amazonaws.com",
           "version": 3
          }
         ],
         "content": null,
         "id": "5933588ce34e24e9fb40c3565fb0b5993639df67",
         "url": "https://oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181",
         "verify_chain": true
        }
       },
       {
        "address": "module.eks.aws_cloudwatch_log_group.this[0]",
        "index": 0,
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_cloudwatch_log_group",
        "values": {
         "arn": "arn:aws:logs:us-east-1:086603201384:log-group:/aws/eks/my_eks/cluster",
         "id": "/aws/eks/my_eks/cluster",
         "kms_key_id": "",
         "name": "/aws/eks/my_eks/cluster",
         "name_prefix": "",
         "retention_in_days": 90,
         "skip_destroy": false,
         "tags": {
          "Name": "/aws/eks/my_eks/cluster"
         },
         "tags_all": {
          "Name": "/aws/eks/my_eks/cluster"
         }
        }
       },
       {
        "address": "module.eks.aws_eks_cluster.this[0]",
        "depends_on": [
         "aws_subnet.private_subnet",
         "aws_vpc.vpc",
         "module.eks.aws_cloudwatch_log_group.this",
         "module.eks.aws_iam_policy.cni_ipv6_policy",
         "module.eks.aws_iam_role.this",
         "module.eks.aws_iam_role_policy_attachment.this",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.eks.aws_security_group_rule.cluster",
         "module.eks.aws_security_group_rule.node",
         "module.eks.data.aws_caller_identity.current",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
         "module.eks.data.aws_iam_session_context.current",
         "module.eks.data.aws_partition.current",
         "module.eks.module.kms.aws_kms_external_key.this",
         "module.eks.module.kms.aws_kms_key.this",
         "module.eks.module.kms.data.aws_caller_identity.current",
         "module.eks.module.kms.data.aws_iam_policy_document.this",
         "module.eks.module.kms.data.aws_partition.current"
        ],
        "index": 0,
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "certificate_authority": [
          {}
         ],
         "enabled_cluster_log_types": [
          false,
          false,
          false
         ],
         "encryption_config": [
          {
           "provider": [
            {}
           ],
           "resources": [
            false
           ]
          }
         ],
         "identity": [
          {
           "oidc": [
            {}
           ]
          }
         ],
         "kubernetes_network_config": [
          {}
         ],
         "outpost_config": [],
         "tags": {},
         "tags_all": {},
         "timeouts": {},
         "vpc_config": [
          {
           "public_access_cidrs": [
            false
           ],
           "security_group_ids": [
            false
           ],
           "subnet_ids": [
            false,
            false
           ]
          }
         ]
        },
        "type": "aws_eks_cluster",
        "values": {
         "arn": "arn:aws:eks:us-east-1:086603201384:cluster/my_eks",
         "certificate_authority": [
          {
           "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJUXQreUFNWWhXSlV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpBNU1qa3hNRFF6TWpaYUZ3MHpNekE1TWpZeE1EUTRNalphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURNL2V0OTg1Y1JSaHd6Q3U1emxSb3dzQ0dJR1FxUnk0VndJYVk1M2Z4Z25YKytxenZ0c2xMb1RSQTAKdVA4YktNb2J3RmhzYkRsSm5aSHkyUS9oRmZKRjVhWWhDZjMzYy8vOGNsVEhGYVZKN2l5RUJZODJZUG81M1psQQpBeUlhZ25VNkdTZ21qbGF6Y2hyOTFsdUdjK21rV0pISjZxem9KMU5vNUp3cnhmNElSKzN2bS9GZmZzT01yaEloCi9jT044c0U3MDhOSEhjODArU0N0ODYwcDJqOGpjdDR2NHAyNmFZd0E0YmZCUUR0NTMyY09QU1pPdzRsQUZia28KM0lhdGlNQnZyV1hJSmFUZFNkanlxUEpwV0hmUThscFFNTEEvb0xSNi9DbzRNVGt2R2RoaXNzRWw2elV2aUMvTQpnTnRkVXhPSjNnMkxoRmZobE9kSTZRRWd6L3haQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTZEUwUmdRVW0xM0dPV2JVS3EvQWpvU1dPbUxqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPUFRsNm52cQpDNzg5aFRSRDRNNW5XSG92L295MVlUbWdJTlpXWmVScmhLRnpXL2FrdEZYc1RCcmUweEdIUkJnU1ByME9VUUFDCndpczYxaVlCcnRMSThmZHZVMmRrZThhOHB2NW9JcGh4bmtlYUJkWGZHOEhJL3FleVhJTlBKNkxMOWhKOXF5QTgKRGpPRU9uWlIxOXg5R1ROczBnOVJzR3J1cXpTZGQ1Q1Q2TGNNdnZIZlZjaUQ5VkkraHZYdno3WGQ3dlJjTHpoeQprQTl1cUpmTnMzaDI4cDROdm45MGtoQlV2VlQ0NmkvMTdud0ZZZWRUcmlCamJCc3J0L0lXOUVSdCtYb1ZnWGJCCmp5Vzg2d0Q4amxwcG95NFNsQWFIWkY5dnFwK0NpajRGSVZGb2VXV0h1ZU1acnRtUE9WOHJhU0o1R25IR1ZTTTQKQUxUd2M4a0ZCY2NxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
          }
         ],
         "cluster_id": null,
         "created_at": "2023-09-29 10:43:01.311 +0000 UTC",
         "enabled_cluster_log_types": [
          "api",
          "audit",
          "authenticator"
         ],
         "encryption_config": [
          {
           "provider": [
            {
             "key_arn": "arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06"
            }
           ],
           "resources": [
            "secrets"
           ]
          }
         ],
         "endpoint": "https://B55713EFAAFA43A934348AD6A9CFC181.gr7.us-east-1.eks.amazonaws.com",
         "id": "my_eks",
         "identity": [
          {
           "oidc": [
            {
             "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181"
            }
           ]
          }
         ],
         "kubernetes_network_config": [
          {
           "ip_family": "ipv4",
           "service_ipv4_cidr": "172.20.0.0/16",
           "service_ipv6_cidr": ""
          }
         ],
         "name": "my_eks",
         "outpost_config": [],
         "platform_version": "eks.1",
         "role_arn": "arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001",
         "status": "ACTIVE",
         "tags": {},
         "tags_all": {},
         "timeouts": {
          "create": null,
          "delete": null,
          "update": null
         },
         "version": "1.28",
         "vpc_config": [
          {
           "cluster_security_group_id": "sg-099854db6bbb6d7fb",
           "endpoint_private_access": true,
           "endpoint_public_access": false,
           "public_access_cidrs": [
            "0.0.0.0/0"
           ],
           "security_group_ids": [
            "sg-00d0fd8acde68f1c9"
           ],
           "subnet_ids": [
            "subnet-01e25e0c76c6457f6",
            "subnet-0465084bc667c4897"
           ],
           "vpc_id": "vpc-00de26259c65152d4"
          }
         ]
        }
       },
       {
        "address": "module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
        "depends_on": [
         "aws_subnet.private_subnet",
         "aws_vpc.vpc",
         "module.eks.aws_cloudwatch_log_group.this",
         "module.eks.aws_eks_cluster.this",
         "module.eks.aws_iam_policy.cni_ipv6_policy",
         "module.eks.aws_iam_role.this",
         "module.eks.aws_iam_role_policy_attachment.this",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.eks.aws_security_group_rule.cluster",
         "module.eks.aws_security_group_rule.node",
         "module.eks.data.aws_caller_identity.current",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
         "module.eks.data.aws_iam_session_context.current",
         "module.eks.data.aws_partition.current",
         "module.eks.data.tls_certificate.this",
         "module.eks.module.kms.aws_kms_external_key.this",
         "module.eks.module.kms.aws_kms_key.this",
         "module.eks.module.kms.data.aws_caller_identity.current",
         "module.eks.module.kms.data.aws_iam_policy_document.this",
         "module.eks.module.kms.data.aws_partition.current"
        ],
        "index": 0,
        "mode": "managed",
        "name": "oidc_provider",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "client_id_list": [
          false
         ],
         "tags": {},
         "tags_all": {},
         "thumbprint_list": [
          false,
          false,
          false,
          false
         ]
        },
        "type": "aws_iam_openid_connect_provider",
        "values": {
         "arn": "arn:aws:iam::086603201384:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181",
         "client_id_list": [
          "sts.amazonaws.com"
         ],
         "id": "arn:aws:iam::086603201384:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181",
         "tags": {
          "Name": "my_eks-eks-irsa"
         },
         "tags_all": {
          "Name": "my_eks-eks-irsa"
         },
         "thumbprint_list": [
          "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
          "06b25927c42a721631c1efd9431e648fa62e1e39",
          "414a2060b738c635cc7fc243e052615592830c53",
          "aaa68bb211d468db8a8a19561ccba2e4043dcc80"
         ],
         "url": "oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181"
        }
       },
       {
        "address": "module.eks.aws_iam_policy.cluster_encryption[0]",
        "depends_on": [
         "module.eks.aws_iam_role.this",
         "module.eks.data.aws_caller_identity.current",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_iam_session_context.current",
         "module.eks.data.aws_partition.current",
         "module.eks.module.kms.aws_kms_external_key.this",
         "module.eks.module.kms.aws_kms_key.this",
         "module.eks.module.kms.data.aws_caller_identity.current",
         "module.eks.module.kms.data.aws_iam_policy_document.this",
         "module.eks.module.kms.data.aws_partition.current"
        ],
        "index": 0,
        "mode": "managed",
        "name": "cluster_encryption",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_iam_policy",
        "values": {
         "arn": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
         "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
         "id": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
         "name": "my_eks-cluster-ClusterEncryption20230929104256397900000016",
         "name_prefix": "my_eks-cluster-ClusterEncryption",
         "path": "/",
         "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06\"}],\"Version\":\"2012-10-17\"}",
         "policy_id": "ANPARIKPT7NUHJEFZEZ7Z",
         "tags": {},
         "tags_all": {}
        }
       },
       {
        "address": "module.eks.aws_iam_role.this[0]",
        "depends_on": [
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_partition.current"
        ],
        "index": 0,
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "inline_policy": [
          {}
         ],
         "managed_policy_arns": [
          false,
          false,
          false
         ],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_iam_role",
        "values": {
         "arn": "arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001",
         "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
         "create_date": "2023-09-29T10:42:37Z",
         "description": "",
         "force_detach_policies": true,
         "id": "my_eks-cluster-20230929104236806800000001",
         "inline_policy": [
          {
           "name": "my_eks-cluster",
           "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
          }
         ],
         "managed_policy_arns": [
          "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
          "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
          "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
         ],
         "max_session_duration": 3600,
         "name": "my_eks-cluster-20230929104236806800000001",
         "name_prefix": "my_eks-cluster-",
         "path": "/",
         "permissions_boundary": null,
         "tags": {},
         "tags_all": {},
         "unique_id": "AROARIKPT7NUOZFDMYB4I"
        }
       },
       {
        "address": "module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]",
        "depends_on": [
         "module.eks.aws_iam_policy.cluster_encryption",
         "module.eks.aws_iam_role.this",
         "module.eks.data.aws_caller_identity.current",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_iam_session_context.current",
         "module.eks.data.aws_partition.current",
         "module.eks.module.kms.aws_kms_external_key.this",
         "module.eks.module.kms.aws_kms_key.this",
         "module.eks.module.kms.data.aws_caller_identity.current",
         "module.eks.module.kms.data.aws_iam_policy_document.this",
         "module.eks.module.kms.data.aws_partition.current"
        ],
        "index": 0,
        "mode": "managed",
        "name": "cluster_encryption",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_iam_role_policy_attachment",
        "values": {
         "id": "my_eks-cluster-20230929104236806800000001-20230929104257056100000017",
         "policy_arn": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
         "role": "my_eks-cluster-20230929104236806800000001"
        }
       },
       {
        "address": "module.eks.aws_iam_role_policy_attachment.this[\"AmazonEKSClusterPolicy\"]",
        "depends_on": [
         "module.eks.aws_iam_role.this",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_partition.current"
        ],
        "index": "AmazonEKSClusterPolicy",
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_iam_role_policy_attachment",
        "values": {
         "id": "my_eks-cluster-20230929104236806800000001-2023092910423838790000000c",
         "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
         "role": "my_eks-cluster-20230929104236806800000001"
        }
       },
       {
        "address": "module.eks.aws_iam_role_policy_attachment.this[\"AmazonEKSVPCResourceController\"]",
        "depends_on": [
         "module.eks.aws_iam_role.this",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_partition.current"
        ],
        "index": "AmazonEKSVPCResourceController",
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_iam_role_policy_attachment",
        "values": {
         "id": "my_eks-cluster-20230929104236806800000001-2023092910423838800000000d",
         "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
         "role": "my_eks-cluster-20230929104236806800000001"
        }
       },
       {
        "address": "module.eks.aws_security_group.cluster[0]",
        "depends_on": [
         "aws_vpc.vpc"
        ],
        "index": 0,
        "mode": "managed",
        "name": "cluster",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "egress": [],
         "ingress": [
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          }
         ],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_security_group",
        "values": {
         "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-00d0fd8acde68f1c9",
         "description": "EKS cluster security group",
         "egress": [],
         "id": "sg-00d0fd8acde68f1c9",
         "ingress": [
          {
           "cidr_blocks": [],
           "description": "Node groups to cluster API",
           "from_port": 443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-0f13c4ac5030c4c04"
           ],
           "self": false,
           "to_port": 443
          }
         ],
         "name": "my_eks-cluster-2023092910424951780000000f",
         "name_prefix": "my_eks-cluster-",
         "owner_id": "086603201384",
         "revoke_rules_on_delete": false,
         "tags": {
          "Name": "my_eks-cluster"
         },
         "tags_all": {
          "Name": "my_eks-cluster"
         },
         "timeouts": null,
         "vpc_id": "vpc-00de26259c65152d4"
        }
       },
       {
        "address": "module.eks.aws_security_group.node[0]",
        "depends_on": [
         "aws_vpc.vpc"
        ],
        "index": 0,
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "egress": [
          {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          }
         ],
         "ingress": [
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          }
         ],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_security_group",
        "values": {
         "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0f13c4ac5030c4c04",
         "description": "EKS node shared security group",
         "egress": [
          {
           "cidr_blocks": [
            "0.0.0.0/0"
           ],
           "description": "Allow all egress",
           "from_port": 0,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "-1",
           "security_groups": [],
           "self": false,
           "to_port": 0
          }
         ],
         "id": "sg-0f13c4ac5030c4c04",
         "ingress": [
          {
           "cidr_blocks": [],
           "description": "Cluster API to node 4443/tcp webhook",
           "from_port": 4443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-00d0fd8acde68f1c9"
           ],
           "self": false,
           "to_port": 4443
          },
          {
           "cidr_blocks": [],
           "description": "Cluster API to node 6443/tcp webhook",
           "from_port": 6443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-00d0fd8acde68f1c9"
           ],
           "self": false,
           "to_port": 6443
          },
          {
           "cidr_blocks": [],
           "description": "Cluster API to node 8443/tcp webhook",
           "from_port": 8443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-00d0fd8acde68f1c9"
           ],
           "self": false,
           "to_port": 8443
          },
          {
           "cidr_blocks": [],
           "description": "Cluster API to node 9443/tcp webhook",
           "from_port": 9443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-00d0fd8acde68f1c9"
           ],
           "self": false,
           "to_port": 9443
          },
          {
           "cidr_blocks": [],
           "description": "Cluster API to node groups",
           "from_port": 443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-00d0fd8acde68f1c9"
           ],
           "self": false,
           "to_port": 443
          },
          {
           "cidr_blocks": [],
           "description": "Cluster API to node kubelets",
           "from_port": 10250,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-00d0fd8acde68f1c9"
           ],
           "self": false,
           "to_port": 10250
          },
          {
           "cidr_blocks": [],
           "description": "Node to node CoreDNS UDP",
           "from_port": 53,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "udp",
           "security_groups": [],
           "self": true,
           "to_port": 53
          },
          {
           "cidr_blocks": [],
           "description": "Node to node CoreDNS",
           "from_port": 53,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [],
           "self": true,
           "to_port": 53
          },
          {
           "cidr_blocks": [],
           "description": "Node to node ingress on ephemeral ports",
           "from_port": 1025,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [],
           "self": true,
           "to_port": 65535
          }
         ],
         "name": "my_eks-node-2023092910424951710000000e",
         "name_prefix": "my_eks-node-",
         "owner_id": "086603201384",
         "revoke_rules_on_delete": false,
         "tags": {
          "Name": "my_eks-node",
          "kubernetes.io/cluster/my_eks": "owned"
         },
         "tags_all": {
          "Name": "my_eks-node",
          "kubernetes.io/cluster/my_eks": "owned"
         },
         "timeouts": null,
         "vpc_id": "vpc-00de26259c65152d4"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
        "depends_on": [
         "aws_vpc.vpc",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node"
        ],
        "index": "ingress_nodes_443",
        "mode": "managed",
        "name": "cluster",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {},
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node groups to cluster API",
         "from_port": 443,
         "id": "sgrule-2141954177",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": null,
         "protocol": "tcp",
         "security_group_id": "sg-00d0fd8acde68f1c9",
         "security_group_rule_id": "sgr-0f76f48db4e731eac",
         "self": false,
         "source_security_group_id": "sg-0f13c4ac5030c4c04",
         "timeouts": null,
         "to_port": 443,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"egress_all\"]",
        "depends_on": [
         "aws_vpc.vpc",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node"
        ],
        "index": "egress_all",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "cidr_blocks": [
          false
         ],
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": [
          "0.0.0.0/0"
         ],
         "description": "Allow all egress",
         "from_port": 0,
         "id": "sgrule-1823995722",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "-1",
         "security_group_id": "sg-0f13c4ac5030c4c04",
         "security_group_rule_id": "sgr-0d72b98f125f3f6bf",
         "self": false,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 0,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
        "depends_on": [
         "aws_vpc.vpc",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node"
        ],
        "index": "ingress_cluster_443",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Cluster API to node groups",
         "from_port": 443,
         "id": "sgrule-1210006692",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0f13c4ac5030c4c04",
         "security_group_rule_id": "sgr-0440ab05e32f1ca9c",
         "self": false,
         "source_security_group_id": "sg-00d0fd8acde68f1c9",
         "timeouts": null,
         "to_port": 443,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_4443_webhook\"]",
        "depends_on": [
         "aws_vpc.vpc",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node"
        ],
        "index": "ingress_cluster_4443_webhook",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Cluster API to node 4443/tcp webhook",
         "from_port": 4443,
         "id": "sgrule-3728605025",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0f13c4ac5030c4c04",
         "security_group_rule_id": "sgr-08b3dbe0ab8f7bd73",
         "self": false,
         "source_security_group_id": "sg-00d0fd8acde68f1c9",
         "timeouts": null,
         "to_port": 4443,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_6443_webhook\"]",
        "depends_on": [
         "aws_vpc.vpc",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node"
        ],
        "index": "ingress_cluster_6443_webhook",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Cluster API to node 6443/tcp webhook",
         "from_port": 6443,
         "id": "sgrule-394238199",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0f13c4ac5030c4c04",
         "security_group_rule_id": "sgr-0e448cc2458bf5818",
         "self": false,
         "source_security_group_id": "sg-00d0fd8acde68f1c9",
         "timeouts": null,
         "to_port": 6443,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_8443_webhook\"]",
        "depends_on": [
         "aws_vpc.vpc",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node"
        ],
        "index": "ingress_cluster_8443_webhook",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Cluster API to node 8443/tcp webhook",
         "from_port": 8443,
         "id": "sgrule-69444822",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0f13c4ac5030c4c04",
         "security_group_rule_id": "sgr-002cb5237c4a4d6b0",
         "self": false,
         "source_security_group_id": "sg-00d0fd8acde68f1c9",
         "timeouts": null,
         "to_port": 8443,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_9443_webhook\"]",
        "depends_on": [
         "aws_vpc.vpc",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node"
        ],
        "index": "ingress_cluster_9443_webhook",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Cluster API to node 9443/tcp webhook",
         "from_port": 9443,
         "id": "sgrule-1619171101",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0f13c4ac5030c4c04",
         "security_group_rule_id": "sgr-0eab215cd2eebc086",
         "self": false,
         "source_security_group_id": "sg-00d0fd8acde68f1c9",
         "timeouts": null,
         "to_port": 9443,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
        "depends_on": [
         "aws_vpc.vpc",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node"
        ],
        "index": "ingress_cluster_kubelet",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Cluster API to node kubelets",
         "from_port": 10250,
         "id": "sgrule-3518697164",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0f13c4ac5030c4c04",
         "security_group_rule_id": "sgr-0f767af673b86bd16",
         "self": false,
         "source_security_group_id": "sg-00d0fd8acde68f1c9",
         "timeouts": null,
         "to_port": 10250,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_nodes_ephemeral\"]",
        "depends_on": [
         "aws_vpc.vpc",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node"
        ],
        "index": "ingress_nodes_ephemeral",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node to node ingress on ephemeral ports",
         "from_port": 1025,
         "id": "sgrule-3386777945",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0f13c4ac5030c4c04",
         "security_group_rule_id": "sgr-07de3bda1d620abf9",
         "self": true,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 65535,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
        "depends_on": [
         "aws_vpc.vpc",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node"
        ],
        "index": "ingress_self_coredns_tcp",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node to node CoreDNS",
         "from_port": 53,
         "id": "sgrule-1630413796",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0f13c4ac5030c4c04",
         "security_group_rule_id": "sgr-06f9b4c421cc23b1a",
         "self": true,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 53,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
        "depends_on": [
         "aws_vpc.vpc",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node"
        ],
        "index": "ingress_self_coredns_udp",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node to node CoreDNS UDP",
         "from_port": 53,
         "id": "sgrule-3312549899",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "udp",
         "security_group_id": "sg-0f13c4ac5030c4c04",
         "security_group_rule_id": "sgr-0b58988450f66bfea",
         "self": true,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 53,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.time_sleep.this[0]",
        "depends_on": [
         "aws_subnet.private_subnet",
         "aws_vpc.vpc",
         "module.eks.aws_cloudwatch_log_group.this",
         "module.eks.aws_eks_cluster.this",
         "module.eks.aws_iam_policy.cni_ipv6_policy",
         "module.eks.aws_iam_role.this",
         "module.eks.aws_iam_role_policy_attachment.this",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.eks.aws_security_group_rule.cluster",
         "module.eks.aws_security_group_rule.node",
         "module.eks.data.aws_caller_identity.current",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
         "module.eks.data.aws_iam_session_context.current",
         "module.eks.data.aws_partition.current",
         "module.eks.module.kms.aws_kms_external_key.this",
         "module.eks.module.kms.aws_kms_key.this",
         "module.eks.module.kms.data.aws_caller_identity.current",
         "module.eks.module.kms.data.aws_iam_policy_document.this",
         "module.eks.module.kms.data.aws_partition.current"
        ],
        "index": 0,
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/time",
        "schema_version": 0,
        "sensitive_values": {
         "triggers": {}
        },
        "type": "time_sleep",
        "values": {
         "create_duration": "30s",
         "destroy_duration": null,
         "id": "2023-09-29T11:06:31Z",
         "triggers": {
          "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJUXQreUFNWWhXSlV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpBNU1qa3hNRFF6TWpaYUZ3MHpNekE1TWpZeE1EUTRNalphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURNL2V0OTg1Y1JSaHd6Q3U1emxSb3dzQ0dJR1FxUnk0VndJYVk1M2Z4Z25YKytxenZ0c2xMb1RSQTAKdVA4YktNb2J3RmhzYkRsSm5aSHkyUS9oRmZKRjVhWWhDZjMzYy8vOGNsVEhGYVZKN2l5RUJZODJZUG81M1psQQpBeUlhZ25VNkdTZ21qbGF6Y2hyOTFsdUdjK21rV0pISjZxem9KMU5vNUp3cnhmNElSKzN2bS9GZmZzT01yaEloCi9jT044c0U3MDhOSEhjODArU0N0ODYwcDJqOGpjdDR2NHAyNmFZd0E0YmZCUUR0NTMyY09QU1pPdzRsQUZia28KM0lhdGlNQnZyV1hJSmFUZFNkanlxUEpwV0hmUThscFFNTEEvb0xSNi9DbzRNVGt2R2RoaXNzRWw2elV2aUMvTQpnTnRkVXhPSjNnMkxoRmZobE9kSTZRRWd6L3haQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTZEUwUmdRVW0xM0dPV2JVS3EvQWpvU1dPbUxqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPUFRsNm52cQpDNzg5aFRSRDRNNW5XSG92L295MVlUbWdJTlpXWmVScmhLRnpXL2FrdEZYc1RCcmUweEdIUkJnU1ByME9VUUFDCndpczYxaVlCcnRMSThmZHZVMmRrZThhOHB2NW9JcGh4bmtlYUJkWGZHOEhJL3FleVhJTlBKNkxMOWhKOXF5QTgKRGpPRU9uWlIxOXg5R1ROczBnOVJzR3J1cXpTZGQ1Q1Q2TGNNdnZIZlZjaUQ5VkkraHZYdno3WGQ3dlJjTHpoeQprQTl1cUpmTnMzaDI4cDROdm45MGtoQlV2VlQ0NmkvMTdud0ZZZWRUcmlCamJCc3J0L0lXOUVSdCtYb1ZnWGJCCmp5Vzg2d0Q4amxwcG95NFNsQWFIWkY5dnFwK0NpajRGSVZGb2VXV0h1ZU1acnRtUE9WOHJhU0o1R25IR1ZTTTQKQUxUd2M4a0ZCY2NxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
          "cluster_endpoint": "https://B55713EFAAFA43A934348AD6A9CFC181.gr7.us-east-1.eks.amazonaws.com",
          "cluster_name": "my_eks",
          "cluster_version": "1.28"
         }
        }
       }
      ]
     }
    ],
    "resources": [
     {
      "address": "aws_alb.load_balancer",
      "depends_on": [
       "aws_security_group.eks_control_plane_sg",
       "aws_security_group.worker_node_sg",
       "aws_subnet.private_subnet",
       "aws_vpc.vpc"
      ],
      "mode": "managed",
      "name": "load_balancer",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "access_logs": [
        {}
       ],
       "security_groups": [
        false,
        false
       ],
       "subnet_mapping": [
        {},
        {}
       ],
       "subnets": [
        false,
        false
       ],
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_alb",
      "values": {
       "access_logs": [
        {
         "bucket": "",
         "enabled": false,
         "prefix": ""
        }
       ],
       "arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:loadbalancer/app/my-alb/eb45bc3180a981a9",
       "arn_suffix": "app/my-alb/eb45bc3180a981a9",
       "customer_owned_ipv4_pool": "",
       "desync_mitigation_mode": "defensive",
       "dns_name": "internal-my-alb-1424119879.us-east-1.elb.amazonaws.com",
       "drop_invalid_header_fields": false,
       "enable_cross_zone_load_balancing": true,
       "enable_deletion_protection": false,
       "enable_http2": true,
       "enable_tls_version_and_cipher_suite_headers": false,
       "enable_waf_fail_open": false,
       "enable_xff_client_port": false,
       "id": "arn:aws:elasticloadbalancing:us-east-1:086603201384:loadbalancer/app/my-alb/eb45bc3180a981a9",
       "idle_timeout": 60,
       "internal": true,
       "ip_address_type": "ipv4",
       "load_balancer_type": "application",
       "name": "my-alb",
       "name_prefix": null,
       "preserve_host_header": false,
       "security_groups": [
        "sg-0a7a62279598f4465",
        "sg-0afd46c11f40daa43"
       ],
       "subnet_mapping": [
        {
         "allocation_id": "",
         "ipv6_address": "",
         "outpost_id": "",
         "private_ipv4_address": "",
         "subnet_id": "subnet-01e25e0c76c6457f6"
        },
        {
         "allocation_id": "",
         "ipv6_address": "",
         "outpost_id": "",
         "private_ipv4_address": "",
         "subnet_id": "subnet-0465084bc667c4897"
        }
       ],
       "subnets": [
        "subnet-01e25e0c76c6457f6",
        "subnet-0465084bc667c4897"
       ],
       "tags": {
        "Name": "my-alb"
       },
       "tags_all": {
        "Name": "my-alb"
       },
       "timeouts": null,
       "vpc_id": "vpc-00de26259c65152d4",
       "xff_header_processing_mode": "append",
       "zone_id": "Z35SXDOTRQ7X7K"
      }
     },
     {
      "address": "aws_alb_listener.listener",
      "depends_on": [
       "aws_alb.load_balancer",
       "aws_alb_target_group.target_group",
       "aws_security_group.eks_control_plane_sg",
       "aws_security_group.worker_node_sg",
       "aws_subnet.private_subnet",
       "aws_vpc.vpc"
      ],
      "mode": "managed",
      "name": "listener",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "default_action": [
        {
         "authenticate_cognito": [],
         "authenticate_oidc": [],
         "fixed_response": [],
         "forward": [],
         "redirect": []
        }
       ],
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_alb_listener",
      "values": {
       "alpn_policy": null,
       "arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:listener/app/my-alb/eb45bc3180a981a9/0779fbbe7f27f8ef",
       "certificate_arn": null,
       "default_action": [
        {
         "authenticate_cognito": [],
         "authenticate_oidc": [],
         "fixed_response": [],
         "forward": [],
         "order": 1,
         "redirect": [],
         "target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:targetgroup/my-target-group/aa3de2f648ae5261",
         "type": "forward"
        }
       ],
       "id": "arn:aws:elasticloadbalancing:us-east-1:086603201384:listener/app/my-alb/eb45bc3180a981a9/0779fbbe7f27f8ef",
       "load_balancer_arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:loadbalancer/app/my-alb/eb45bc3180a981a9",
       "port": 80,
       "protocol": "HTTP",
       "ssl_policy": "",
       "tags": {},
       "tags_all": {},
       "timeouts": null
      }
     },
     {
      "address": "aws_alb_target_group.target_group",
      "depends_on": [
       "aws_vpc.vpc"
      ],
      "mode": "managed",
      "name": "target_group",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "health_check": [
        {}
       ],
       "stickiness": [
        {}
       ],
       "tags": {},
       "tags_all": {},
       "target_failover": [
        {}
       ]
      },
      "type": "aws_alb_target_group",
      "values": {
       "arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:targetgroup/my-target-group/aa3de2f648ae5261",
       "arn_suffix": "targetgroup/my-target-group/aa3de2f648ae5261",
       "connection_termination": false,
       "deregistration_delay": "300",
       "health_check": [
        {
         "enabled": true,
         "healthy_threshold": 3,
         "interval": 30,
         "matcher": "200",
         "path": "/",
         "port": "traffic-port",
         "protocol": "HTTP",
         "timeout": 5,
         "unhealthy_threshold": 3
        }
       ],
       "id": "arn:aws:elasticloadbalancing:us-east-1:086603201384:targetgroup/my-target-group/aa3de2f648ae5261",
       "ip_address_type": "ipv4",
       "lambda_multi_value_headers_enabled": false,
       "load_balancing_algorithm_type": "round_robin",
       "load_balancing_cross_zone_enabled": "use_load_balancer_configuration",
       "name": "my-target-group",
       "name_prefix": null,
       "port": 80,
       "preserve_client_ip": null,
       "protocol": "HTTP",
       "protocol_version": "HTTP1",
       "proxy_protocol_v2": false,
       "slow_start": 0,
       "stickiness": [
        {
         "cookie_duration": 86400,
         "cookie_name": "",
         "enabled": false,
         "type": "lb_cookie"
        }
       ],
       "tags": {
        "Name": "my-target-group"
       },
       "tags_all": {
        "Name": "my-target-group"
       },
       "target_failover": [
        {
         "on_deregistration": null,
         "on_unhealthy": null
        }
       ],
       "target_type": "instance",
       "vpc_id": "vpc-00de26259c65152d4"
      }
     },
     {
      "address": "aws_eip.my_eip[\"10.0.1.0/24\"]",
      "depends_on": [
       "aws_subnet.private_subnet",
       "aws_vpc.vpc"
      ],
      "index": "10.0.1.0/24",
      "mode": "managed",
      "name": "my_eip",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_eip",
      "values": {
       "address": null,
       "allocation_id": "eipalloc-0e2344eeee7bf7c66",
       "associate_with_private_ip": null,
       "association_id": "",
       "carrier_ip": "",
       "customer_owned_ip": "",
       "customer_owned_ipv4_pool": "",
       "domain": "vpc",
       "id": "eipalloc-0e2344eeee7bf7c66",
       "instance": "",
       "network_border_group": "us-east-1",
       "network_interface": "",
       "private_dns": null,
       "private_ip": "",
       "public_dns": "ec2-54-144-242-29.compute-1.amazonaws.com",
       "public_ip": "54.144.242.29",
       "public_ipv4_pool": "amazon",
       "tags": {
        "Name": "my-eip-10.0.1.0/24"
       },
       "tags_all": {
        "Name": "my-eip-10.0.1.0/24"
       },
       "timeouts": null,
       "vpc": true
      }
     },
     {
      "address": "aws_eip.my_eip[\"10.0.2.0/24\"]",
      "depends_on": [
       "aws_subnet.private_subnet",
       "aws_vpc.vpc"
      ],
      "index": "10.0.2.0/24",
      "mode": "managed",
      "name": "my_eip",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_eip",
      "values": {
       "address": null,
       "allocation_id": "eipalloc-0c88edee8e090ecc0",
       "associate_with_private_ip": null,
       "association_id": "",
       "carrier_ip": "",
       "customer_owned_ip": "",
       "customer_owned_ipv4_pool": "",
       "domain": "vpc",
       "id": "eipalloc-0c88edee8e090ecc0",
       "instance": "",
       "network_border_group": "us-east-1",
       "network_interface": "",
       "private_dns": null,
       "private_ip": "",
       "public_dns": "ec2-44-218-206-65.compute-1.amazonaws.com",
       "public_ip": "44.218.206.65",
       "public_ipv4_pool": "amazon",
       "tags": {
        "Name": "my-eip-10.0.2.0/24"
       },
       "tags_all": {
        "Name": "my-eip-10.0.2.0/24"
       },
       "timeouts": null,
       "vpc": true
      }
     },
     {
      "address": "aws_iam_instance_profile.worker",
      "depends_on": [
       "aws_iam_role.worker"
      ],
      "mode": "managed",
      "name": "worker",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_iam_instance_profile",
      "values": {
       "arn": "arn:aws:iam::086603201384:instance-profile/ed-eks-worker-new-profile",
       "create_date": "2023-09-29T10:42:38Z",
       "id": "ed-eks-worker-new-profile",
       "name": "ed-eks-worker-new-profile",
       "name_prefix": "",
       "path": "/",
       "role": "ed-eks-worker",
       "tags": {},
       "tags_all": {},
       "unique_id": "AIPARIKPT7NUHINPW2D7C"
      }
     },
     {
      "address": "aws_iam_policy.autoscaler",
      "mode": "managed",
      "name": "autoscaler",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_iam_policy",
      "values": {
       "arn": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
       "description": "",
       "id": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
       "name": "ed-eks-autoscaler-policy",
       "name_prefix": "",
       "path": "/",
       "policy": "{\"Statement\":[{\"Action\":[\"autoscaling:DescribeAutoScalingGroups\",\"autoscaling:DescribeAutoScalingInstances\",\"autoscaling:DescribeTags\",\"autoscaling:DescribeLaunchConfigurations\",\"autoscaling:SetDesiredCapacity\",\"autoscaling:TerminateInstanceInAutoScalingGroup\",\"ec2:DescribeLaunchTemplateVersions\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
       "policy_id": "ANPARIKPT7NUGHKEJTDWO",
       "tags": {},
       "tags_all": {}
      }
     },
     {
      "address": "aws_iam_role.master",
      "mode": "managed",
      "name": "master",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "inline_policy": [],
       "managed_policy_arns": [
        false,
        false,
        false
       ],
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_iam_role",
      "values": {
       "arn": "arn:aws:iam::086603201384:role/ed-eks-master",
       "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
       "create_date": "2023-09-29T10:42:37Z",
       "description": "",
       "force_detach_policies": false,
       "id": "ed-eks-master",
       "inline_policy": [],
       "managed_policy_arns": [
        "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
        "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
        "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
       ],
       "max_session_duration": 3600,
       "name": "ed-eks-master",
       "name_prefix": "",
       "path": "/",
       "permissions_boundary": null,
       "tags": {},
       "tags_all": {},
       "unique_id": "AROARIKPT7NUN4FMIWO54"
      }
     },
     {
      "address": "aws_iam_role.worker",
      "mode": "managed",
      "name": "worker",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "inline_policy": [],
       "managed_policy_arns": [
        false,
        false,
        false,
        false,
        false,
        false,
        false
       ],
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_iam_role",
      "values": {
       "arn": "arn:aws:iam::086603201384:role/ed-eks-worker",
       "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
       "create_date": "2023-09-29T10:42:37Z",
       "description": "",
       "force_detach_policies": false,
       "id": "ed-eks-worker",
       "inline_policy": [],
       "managed_policy_arns": [
        "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
        "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
        "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
        "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
        "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
        "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
        "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
       ],
       "max_session_duration": 3600,
       "name": "ed-eks-worker",
       "name_prefix": "",
       "path": "/",
       "permissions_boundary": null,
       "tags": {},
       "tags_all": {},
       "unique_id": "AROARIKPT7NUI4SEGKIQG"
      }
     },
     {
      "address": "aws_iam_role_policy_attachment.AmazonEC2ContainerRegistryReadOnly",
      "depends_on": [
       "aws_iam_role.worker"
      ],
      "mode": "managed",
      "name": "AmazonEC2ContainerRegistryReadOnly",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {},
      "type": "aws_iam_role_policy_attachment",
      "values": {
       "id": "ed-eks-worker-2023092910423820630000000b",
       "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
       "role": "ed-eks-worker"
      }
     },
     {
      "address": "aws_iam_role_policy_attachment.AmazonEKSClusterPolicy",
      "depends_on": [
       "aws_iam_role.master"
      ],
      "mode": "managed",
      "name": "AmazonEKSClusterPolicy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {},
      "type": "aws_iam_role_policy_attachment",
      "values": {
       "id": "ed-eks-master-2023092910423820460000000a",
       "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
       "role": "ed-eks-master"
      }
     },
     {
      "address": "aws_iam_role_policy_attachment.AmazonEKSServicePolicy",
      "depends_on": [
       "aws_iam_role.master"
      ],
      "mode": "managed",
      "name": "AmazonEKSServicePolicy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {},
      "type": "aws_iam_role_policy_attachment",
      "values": {
       "id": "ed-eks-master-20230929104238203300000009",
       "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
       "role": "ed-eks-master"
      }
     },
     {
      "address": "aws_iam_role_policy_attachment.AmazonEKSVPCResourceController",
      "depends_on": [
       "aws_iam_role.master"
      ],
      "mode": "managed",
      "name": "AmazonEKSVPCResourceController",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {},
      "type": "aws_iam_role_policy_attachment",
      "values": {
       "id": "ed-eks-master-20230929104238201600000008",
       "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
       "role": "ed-eks-master"
      }
     },
     {
      "address": "aws_iam_role_policy_attachment.AmazonEKSWorkerNodePolicy",
      "depends_on": [
       "aws_iam_role.worker"
      ],
      "mode": "managed",
      "name": "AmazonEKSWorkerNodePolicy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {},
      "type": "aws_iam_role_policy_attachment",
      "values": {
       "id": "ed-eks-worker-20230929104237944600000004",
       "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
       "role": "ed-eks-worker"
      }
     },
     {
      "address": "aws_iam_role_policy_attachment.AmazonEKS_CNI_Policy",
      "depends_on": [
       "aws_iam_role.worker"
      ],
      "mode": "managed",
      "name": "AmazonEKS_CNI_Policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {},
      "type": "aws_iam_role_policy_attachment",
      "values": {
       "id": "ed-eks-worker-20230929104238060500000007",
       "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
       "role": "ed-eks-worker"
      }
     },
     {
      "address": "aws_iam_role_policy_attachment.AmazonSSMManagedInstanceCore",
      "depends_on": [
       "aws_iam_role.worker"
      ],
      "mode": "managed",
      "name": "AmazonSSMManagedInstanceCore",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {},
      "type": "aws_iam_role_policy_attachment",
      "values": {
       "id": "ed-eks-worker-20230929104237884100000002",
       "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
       "role": "ed-eks-worker"
      }
     },
     {
      "address": "aws_iam_role_policy_attachment.autoscaler",
      "depends_on": [
       "aws_iam_policy.autoscaler",
       "aws_iam_role.worker"
      ],
      "mode": "managed",
      "name": "autoscaler",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {},
      "type": "aws_iam_role_policy_attachment",
      "values": {
       "id": "ed-eks-worker-20230929104237984800000005",
       "policy_arn": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
       "role": "ed-eks-worker"
      }
     },
     {
      "address": "aws_iam_role_policy_attachment.s3",
      "depends_on": [
       "aws_iam_role.worker"
      ],
      "mode": "managed",
      "name": "s3",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {},
      "type": "aws_iam_role_policy_attachment",
      "values": {
       "id": "ed-eks-worker-20230929104238050500000006",
       "policy_arn": "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
       "role": "ed-eks-worker"
      }
     },
     {
      "address": "aws_iam_role_policy_attachment.x-ray",
      "depends_on": [
       "aws_iam_role.worker"
      ],
      "mode": "managed",
      "name": "x-ray",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {},
      "type": "aws_iam_role_policy_attachment",
      "values": {
       "id": "ed-eks-worker-20230929104237890000000003",
       "policy_arn": "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
       "role": "ed-eks-worker"
      }
     },
     {
      "address": "aws_nat_gateway.my_nat_gateway[\"10.0.1.0/24\"]",
      "depends_on": [
       "aws_eip.my_eip",
       "aws_subnet.private_subnet",
       "aws_vpc.vpc"
      ],
      "index": "10.0.1.0/24",
      "mode": "managed",
      "name": "my_nat_gateway",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "secondary_allocation_ids": [],
       "secondary_private_ip_addresses": [],
       "tags": {},
       "tags_all": {}
      },
      "tainted": true,
      "type": "aws_nat_gateway",
      "values": {
       "allocation_id": "eipalloc-0e2344eeee7bf7c66",
       "association_id": "",
       "connectivity_type": "public",
       "id": "nat-03e78b1c85217d893",
       "network_interface_id": "eni-092dfcd2f42346fbe",
       "private_ip": "10.0.1.73",
       "public_ip": "",
       "secondary_allocation_ids": [],
       "secondary_private_ip_address_count": 0,
       "secondary_private_ip_addresses": [],
       "subnet_id": "subnet-01e25e0c76c6457f6",
       "tags": {
        "Name": "my-nat-gateway-10.0.1.0/24"
       },
       "tags_all": {
        "Name": "my-nat-gateway-10.0.1.0/24"
       },
       "timeouts": null
      }
     },
     {
      "address": "aws_nat_gateway.my_nat_gateway[\"10.0.2.0/24\"]",
      "depends_on": [
       "aws_eip.my_eip",
       "aws_subnet.private_subnet",
       "aws_vpc.vpc"
      ],
      "index": "10.0.2.0/24",
      "mode": "managed",
      "name": "my_nat_gateway",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "secondary_allocation_ids": [],
       "secondary_private_ip_addresses": [],
       "tags": {},
       "tags_all": {}
      },
      "tainted": true,
      "type": "aws_nat_gateway",
      "values": {
       "allocation_id": "eipalloc-0c88edee8e090ecc0",
       "association_id": "",
       "connectivity_type": "public",
       "id": "nat-0c5d82e41025f8bef",
       "network_interface_id": "eni-031bb2af97503e87f",
       "private_ip": "10.0.2.25",
       "public_ip": "",
       "secondary_allocation_ids": [],
       "secondary_private_ip_address_count": 0,
       "secondary_private_ip_addresses": [],
       "subnet_id": "subnet-0465084bc667c4897",
       "tags": {
        "Name": "my-nat-gateway-10.0.2.0/24"
       },
       "tags_all": {
        "Name": "my-nat-gateway-10.0.2.0/24"
       },
       "timeouts": null
      }
     },
     {
      "address": "aws_route_table.private_route_table[\"10.0.1.0/24\"]",
      "depends_on": [
       "aws_subnet.private_subnet",
       "aws_vpc.vpc"
      ],
      "index": "10.0.1.0/24",
      "mode": "managed",
      "name": "private_route_table",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "propagating_vgws": [],
       "route": [],
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_route_table",
      "values": {
       "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-0e192ea7ef9fe961a",
       "id": "rtb-0e192ea7ef9fe961a",
       "owner_id": "086603201384",
       "propagating_vgws": [],
       "route": [],
       "tags": {},
       "tags_all": {},
       "timeouts": null,
       "vpc_id": "vpc-00de26259c65152d4"
      }
     },
     {
      "address": "aws_route_table.private_route_table[\"10.0.2.0/24\"]",
      "depends_on": [
       "aws_subnet.private_subnet",
       "aws_vpc.vpc"
      ],
      "index": "10.0.2.0/24",
      "mode": "managed",
      "name": "private_route_table",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "propagating_vgws": [],
       "route": [],
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_route_table",
      "values": {
       "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-000ca2c4d8e86213c",
       "id": "rtb-000ca2c4d8e86213c",
       "owner_id": "086603201384",
       "propagating_vgws": [],
       "route": [],
       "tags": {},
       "tags_all": {},
       "timeouts": null,
       "vpc_id": "vpc-00de26259c65152d4"
      }
     },
     {
      "address": "aws_route_table_association.my_rta[\"10.0.1.0/24\"]",
      "depends_on": [
       "aws_route_table.private_route_table",
       "aws_subnet.private_subnet",
       "aws_vpc.vpc"
      ],
      "index": "10.0.1.0/24",
      "mode": "managed",
      "name": "my_rta",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {},
      "type": "aws_route_table_association",
      "values": {
       "gateway_id": "",
       "id": "rtbassoc-09b870cd44789b5b6",
       "route_table_id": "rtb-0e192ea7ef9fe961a",
       "subnet_id": "subnet-01e25e0c76c6457f6",
       "timeouts": null
      }
     },
     {
      "address": "aws_route_table_association.my_rta[\"10.0.2.0/24\"]",
      "depends_on": [
       "aws_route_table.private_route_table",
       "aws_subnet.private_subnet",
       "aws_vpc.vpc"
      ],
      "index": "10.0.2.0/24",
      "mode": "managed",
      "name": "my_rta",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {},
      "type": "aws_route_table_association",
      "values": {
       "gateway_id": "",
       "id": "rtbassoc-035b6ce4113107d39",
       "route_table_id": "rtb-000ca2c4d8e86213c",
       "subnet_id": "subnet-0465084bc667c4897",
       "timeouts": null
      }
     },
     {
      "address": "aws_security_group.eks_control_plane_sg",
      "depends_on": [
       "aws_vpc.vpc"
      ],
      "mode": "managed",
      "name": "eks_control_plane_sg",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 1,
      "sensitive_values": {
       "egress": [
        {
         "cidr_blocks": [
          false
         ],
         "ipv6_cidr_blocks": [],
         "prefix_list_ids": [],
         "security_groups": []
        }
       ],
       "ingress": [
        {
         "cidr_blocks": [
          false
         ],
         "ipv6_cidr_blocks": [],
         "prefix_list_ids": [],
         "security_groups": []
        },
        {
         "cidr_blocks": [],
         "ipv6_cidr_blocks": [],
         "prefix_list_ids": [],
         "security_groups": [
          false
         ]
        }
       ],
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_security_group",
      "values": {
       "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0afd46c11f40daa43",
       "description": "Security group for the EKS control plane",
       "egress": [
        {
         "cidr_blocks": [
          "0.0.0.0/0"
         ],
         "description": "",
         "from_port": 0,
         "ipv6_cidr_blocks": [],
         "prefix_list_ids": [],
         "protocol": "-1",
         "security_groups": [],
         "self": false,
         "to_port": 0
        }
       ],
       "id": "sg-0afd46c11f40daa43",
       "ingress": [
        {
         "cidr_blocks": [
          "0.0.0.0/0"
         ],
         "description": "",
         "from_port": 443,
         "ipv6_cidr_blocks": [],
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_groups": [],
         "self": false,
         "to_port": 443
        },
        {
         "cidr_blocks": [],
         "description": "",
         "from_port": 0,
         "ipv6_cidr_blocks": [],
         "prefix_list_ids": [],
         "protocol": "-1",
         "security_groups": [
          "sg-0a7a62279598f4465"
         ],
         "self": false,
         "to_port": 0
        }
       ],
       "name": "eks-control-plane-sg",
       "name_prefix": "",
       "owner_id": "086603201384",
       "revoke_rules_on_delete": false,
       "tags": {
        "Environment": "staging",
        "Name": "eks-control-plane-sg"
       },
       "tags_all": {
        "Environment": "staging",
        "Name": "eks-control-plane-sg"
       },
       "timeouts": null,
       "vpc_id": "vpc-00de26259c65152d4"
      }
     },
     {
      "address": "aws_security_group.worker_node_sg",
      "depends_on": [
       "aws_vpc.vpc"
      ],
      "mode": "managed",
      "name": "worker_node_sg",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 1,
      "sensitive_values": {
       "egress": [
        {
         "cidr_blocks": [
          false
         ],
         "ipv6_cidr_blocks": [],
         "prefix_list_ids": [],
         "security_groups": []
        }
       ],
       "ingress": [
        {
         "cidr_blocks": [
          false
         ],
         "ipv6_cidr_blocks": [],
         "prefix_list_ids": [],
         "security_groups": []
        },
        {
         "cidr_blocks": [],
         "ipv6_cidr_blocks": [],
         "prefix_list_ids": [],
         "security_groups": [
          false
         ]
        }
       ],
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_security_group",
      "values": {
       "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0a7a62279598f4465",
       "description": "Security group for EKS worker nodes",
       "egress": [
        {
         "cidr_blocks": [
          "0.0.0.0/0"
         ],
         "description": "",
         "from_port": 0,
         "ipv6_cidr_blocks": [],
         "prefix_list_ids": [],
         "protocol": "-1",
         "security_groups": [],
         "self": false,
         "to_port": 0
        }
       ],
       "id": "sg-0a7a62279598f4465",
       "ingress": [
        {
         "cidr_blocks": [
          "0.0.0.0/0"
         ],
         "description": "",
         "from_port": 22,
         "ipv6_cidr_blocks": [],
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_groups": [],
         "self": false,
         "to_port": 22
        },
        {
         "cidr_blocks": [],
         "description": "",
         "from_port": 0,
         "ipv6_cidr_blocks": [],
         "prefix_list_ids": [],
         "protocol": "-1",
         "security_groups": [
          "sg-0afd46c11f40daa43"
         ],
         "self": false,
         "to_port": 0
        }
       ],
       "name": "eks-worker-node-sg",
       "name_prefix": "",
       "owner_id": "086603201384",
       "revoke_rules_on_delete": false,
       "tags": {
        "Environment": "staging",
        "Name": "eks-worker-node-sg"
       },
       "tags_all": {
        "Environment": "staging",
        "Name": "eks-worker-node-sg"
       },
       "timeouts": null,
       "vpc_id": "vpc-00de26259c65152d4"
      }
     },
     {
      "address": "aws_security_group_rule.control_plane_egress",
      "depends_on": [
       "aws_security_group.eks_control_plane_sg",
       "aws_vpc.vpc"
      ],
      "mode": "managed",
      "name": "control_plane_egress",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 2,
      "sensitive_values": {
       "cidr_blocks": [
        false
       ]
      },
      "type": "aws_security_group_rule",
      "values": {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 0,
       "id": "sgrule-3593713217",
       "ipv6_cidr_blocks": null,
       "prefix_list_ids": null,
       "protocol": "-1",
       "security_group_id": "sg-0afd46c11f40daa43",
       "security_group_rule_id": "sgr-0b88db6161d47ef95",
       "self": false,
       "source_security_group_id": null,
       "timeouts": null,
       "to_port": 0,
       "type": "egress"
      }
     },
     {
      "address": "aws_security_group_rule.control_plane_ingress",
      "depends_on": [
       "aws_security_group.eks_control_plane_sg",
       "aws_vpc.vpc"
      ],
      "mode": "managed",
      "name": "control_plane_ingress",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 2,
      "sensitive_values": {
       "cidr_blocks": [
        false
       ]
      },
      "type": "aws_security_group_rule",
      "values": {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 443,
       "id": "sgrule-1651983592",
       "ipv6_cidr_blocks": null,
       "prefix_list_ids": null,
       "protocol": "tcp",
       "security_group_id": "sg-0afd46c11f40daa43",
       "security_group_rule_id": "sgr-09ebe54cbfe80346c",
       "self": false,
       "source_security_group_id": null,
       "timeouts": null,
       "to_port": 443,
       "type": "ingress"
      }
     },
     {
      "address": "aws_security_group_rule.control_plane_to_worker",
      "depends_on": [
       "aws_security_group.eks_control_plane_sg",
       "aws_security_group.worker_node_sg",
       "aws_vpc.vpc"
      ],
      "mode": "managed",
      "name": "control_plane_to_worker",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 2,
      "sensitive_values": {},
      "type": "aws_security_group_rule",
      "values": {
       "cidr_blocks": null,
       "description": "",
       "from_port": 0,
       "id": "sgrule-1792465420",
       "ipv6_cidr_blocks": null,
       "prefix_list_ids": null,
       "protocol": "-1",
       "security_group_id": "sg-0a7a62279598f4465",
       "security_group_rule_id": "sgr-06f5da83fac090767",
       "self": false,
       "source_security_group_id": "sg-0afd46c11f40daa43",
       "timeouts": null,
       "to_port": 0,
       "type": "ingress"
      }
     },
     {
      "address": "aws_security_group_rule.worker_egress",
      "depends_on": [
       "aws_security_group.worker_node_sg",
       "aws_vpc.vpc"
      ],
      "mode": "managed",
      "name": "worker_egress",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 2,
      "sensitive_values": {
       "cidr_blocks": [
        false
       ]
      },
      "type": "aws_security_group_rule",
      "values": {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 0,
       "id": "sgrule-3630475665",
       "ipv6_cidr_blocks": null,
       "prefix_list_ids": null,
       "protocol": "-1",
       "security_group_id": "sg-0a7a62279598f4465",
       "security_group_rule_id": "sgr-0e8f46dd8b087c27c",
       "self": false,
       "source_security_group_id": null,
       "timeouts": null,
       "to_port": 0,
       "type": "egress"
      }
     },
     {
      "address": "aws_security_group_rule.worker_ssh_ingress",
      "depends_on": [
       "aws_security_group.worker_node_sg",
       "aws_vpc.vpc"
      ],
      "mode": "managed",
      "name": "worker_ssh_ingress",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 2,
      "sensitive_values": {
       "cidr_blocks": [
        false
       ]
      },
      "type": "aws_security_group_rule",
      "values": {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 22,
       "id": "sgrule-1454391944",
       "ipv6_cidr_blocks": null,
       "prefix_list_ids": null,
       "protocol": "tcp",
       "security_group_id": "sg-0a7a62279598f4465",
       "security_group_rule_id": "sgr-0fb3682a9b443c31f",
       "self": false,
       "source_security_group_id": null,
       "timeouts": null,
       "to_port": 22,
       "type": "ingress"
      }
     },
     {
      "address": "aws_security_group_rule.worker_to_control_plane",
      "depends_on": [
       "aws_security_group.eks_control_plane_sg",
       "aws_security_group.worker_node_sg",
       "aws_vpc.vpc"
      ],
      "mode": "managed",
      "name": "worker_to_control_plane",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 2,
      "sensitive_values": {},
      "type": "aws_security_group_rule",
      "values": {
       "cidr_blocks": null,
       "description": "",
       "from_port": 0,
       "id": "sgrule-2431943090",
       "ipv6_cidr_blocks": null,
       "prefix_list_ids": null,
       "protocol": "-1",
       "security_group_id": "sg-0afd46c11f40daa43",
       "security_group_rule_id": "sgr-039e0602c8f4745b3",
       "self": false,
       "source_security_group_id": "sg-0a7a62279598f4465",
       "timeouts": null,
       "to_port": 0,
       "type": "ingress"
      }
     },
     {
      "address": "aws_subnet.private_subnet[\"10.0.1.0/24\"]",
      "depends_on": [
       "aws_vpc.vpc"
      ],
      "index": "10.0.1.0/24",
      "mode": "managed",
      "name": "private_subnet",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 1,
      "sensitive_values": {
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_subnet",
      "values": {
       "arn": "arn:aws:ec2:us-east-1:086603201384:subnet/subnet-01e25e0c76c6457f6",
       "assign_ipv6_address_on_creation": false,
       "availability_zone": "us-east-1a",
       "availability_zone_id": "use1-az1",
       "cidr_block": "10.0.1.0/24",
       "customer_owned_ipv4_pool": "",
       "enable_dns64": false,
       "enable_lni_at_device_index": 0,
       "enable_resource_name_dns_a_record_on_launch": false,
       "enable_resource_name_dns_aaaa_record_on_launch": false,
       "id": "subnet-01e25e0c76c6457f6",
       "ipv6_cidr_block": "",
       "ipv6_cidr_block_association_id": "",
       "ipv6_native": false,
       "map_customer_owned_ip_on_launch": false,
       "map_public_ip_on_launch": false,
       "outpost_arn": "",
       "owner_id": "086603201384",
       "private_dns_hostname_type_on_launch": "ip-name",
       "tags": {},
       "tags_all": {},
       "timeouts": null,
       "vpc_id": "vpc-00de26259c65152d4"
      }
     },
     {
      "address": "aws_subnet.private_subnet[\"10.0.2.0/24\"]",
      "depends_on": [
       "aws_vpc.vpc"
      ],
      "index": "10.0.2.0/24",
      "mode": "managed",
      "name": "private_subnet",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 1,
      "sensitive_values": {
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_subnet",
      "values": {
       "arn": "arn:aws:ec2:us-east-1:086603201384:subnet/subnet-0465084bc667c4897",
       "assign_ipv6_address_on_creation": false,
       "availability_zone": "us-east-1b",
       "availability_zone_id": "use1-az2",
       "cidr_block": "10.0.2.0/24",
       "customer_owned_ipv4_pool": "",
       "enable_dns64": false,
       "enable_lni_at_device_index": 0,
       "enable_resource_name_dns_a_record_on_launch": false,
       "enable_resource_name_dns_aaaa_record_on_launch": false,
       "id": "subnet-0465084bc667c4897",
       "ipv6_cidr_block": "",
       "ipv6_cidr_block_association_id": "",
       "ipv6_native": false,
       "map_customer_owned_ip_on_launch": false,
       "map_public_ip_on_launch": false,
       "outpost_arn": "",
       "owner_id": "086603201384",
       "private_dns_hostname_type_on_launch": "ip-name",
       "tags": {},
       "tags_all": {},
       "timeouts": null,
       "vpc_id": "vpc-00de26259c65152d4"
      }
     },
     {
      "address": "aws_vpc.vpc",
      "mode": "managed",
      "name": "vpc",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 1,
      "sensitive_values": {
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_vpc",
      "values": {
       "arn": "arn:aws:ec2:us-east-1:086603201384:vpc/vpc-00de26259c65152d4",
       "assign_generated_ipv6_cidr_block": false,
       "cidr_block": "10.0.0.0/16",
       "default_network_acl_id": "acl-0311f83415a4a0d51",
       "default_route_table_id": "rtb-0d7da816b4e73db19",
       "default_security_group_id": "sg-05bb4fee2ac8de8ce",
       "dhcp_options_id": "dopt-08e6ff91b51211784",
       "enable_dns_hostnames": true,
       "enable_dns_support": true,
       "enable_network_address_usage_metrics": false,
       "id": "vpc-00de26259c65152d4",
       "instance_tenancy": "default",
       "ipv4_ipam_pool_id": null,
       "ipv4_netmask_length": null,
       "ipv6_association_id": "",
       "ipv6_cidr_block": "",
       "ipv6_cidr_block_network_border_group": "",
       "ipv6_ipam_pool_id": "",
       "ipv6_netmask_length": 0,
       "main_route_table_id": "rtb-0d7da816b4e73db19",
       "owner_id": "086603201384",
       "tags": {
        "Envrironment": "staging"
       },
       "tags_all": {
        "Envrironment": "staging"
       }
      }
     }
    ]
   }
  }
 },
 "relevant_attributes": [
  {
   "attribute": [
    "version"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "resources",
    0,
    "autoscaling_groups",
    0,
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.kms.aws_kms_external_key.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_cloudwatch_log_group.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "default_cooldown"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_security_group.node[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_autoscaling_schedule.this"
  },
  {
   "attribute": [],
   "resource": "module.eks.aws_eks_addon.this"
  },
  {
   "attribute": [],
   "resource": "aws_subnet.private_subnet"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_iam_openid_connect_provider.oidc_provider[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]"
  },
  {
   "attribute": [
    "default_version"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "health_check_type"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "key_id"
   ],
   "resource": "module.eks.module.kms.aws_kms_key.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this[0]"
  },
  {
   "attribute": [
    "platform_version"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "image_id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "policy"
   ],
   "resource": "module.eks.module.kms.aws_kms_external_key.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.aws_security_group.node[0]"
  },
  {
   "attribute": [
    "endpoint"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.data.aws_eks_addon_version.this"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.aws_security_group.cluster[0]"
  },
  {
   "attribute": [
    "status"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this[0]"
  },
  {
   "attribute": [
    "status"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.module.kms.aws_kms_grant.this"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "availability_zones"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "resources"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.kms.aws_kms_external_key.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.module.kms.aws_kms_alias.this"
  },
  {
   "attribute": [
    "min_size"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "default_version"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "policy"
   ],
   "resource": "module.eks.module.kms.aws_kms_key.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "triggers",
    "cluster_name"
   ],
   "resource": "module.eks.time_sleep.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this"
  },
  {
   "attribute": [
    "triggers",
    "cluster_certificate_authority_data"
   ],
   "resource": "module.eks.time_sleep.this[0]"
  },
  {
   "attribute": [
    "resources",
    0,
    "autoscaling_groups",
    0,
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "latest_version"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "rendered"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].module.user_data.data.cloudinit_config.linux_eks_managed_node_group[0]"
  },
  {
   "attribute": [
    "triggers",
    "cluster_endpoint"
   ],
   "resource": "module.eks.time_sleep.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.fargate_profile.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "json"
   ],
   "resource": "module.eks.module.kms.data.aws_iam_policy_document.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [],
   "resource": "aws_eip.my_eip"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this[0]"
  },
  {
   "attribute": [
    "health_check_grace_period"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "max_size"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "aws_vpc.vpc"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.kms.aws_kms_key.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.aws_eks_addon.before_compute"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.fargate_profile.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [],
   "resource": "aws_route_table.private_route_table"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "vpc_config",
    0,
    "cluster_security_group_id"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "pod_execution_role_arn"
   ],
   "resource": "module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "latest_version"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "desired_capacity"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "taint"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "rendered"
   ],
   "resource": "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "latest_version"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.fargate_profile.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "identity",
    0,
    "oidc",
    0,
    "issuer"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.aws_eks_identity_provider_config.this"
  },
  {
   "attribute": [
    "taint"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.aws_cloudwatch_log_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_security_group.cluster[0]"
  },
  {
   "attribute": [
    "certificate_authority",
    0,
    "data"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "certificates",
    0,
    "sha1_fingerprint"
   ],
   "resource": "module.eks.data.tls_certificate.this[0]"
  },
  {
   "attribute": [
    "vpc_zone_identifier"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "image_id"
   ],
   "resource": "module.eks.module.self_managed_node_group.data.aws_ami.eks_default[0]"
  },
  {
   "attribute": [
    "status"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [],
   "resource": "aws_nat_gateway.my_nat_gateway"
  },
  {
   "attribute": [
    "status"
   ],
   "resource": "module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]"
  },
  {
   "attribute": [
    "triggers",
    "cluster_version"
   ],
   "resource": "module.eks.time_sleep.this[0]"
  },
  {
   "attribute": [
    "labels"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "resources"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_eks_node_group.this[0]"
  }
 ],
 "resource_changes": [
  {
   "address": "aws_alb.load_balancer",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "access_logs": [
      {
       "bucket": "",
       "enabled": false,
       "prefix": ""
      }
     ],
     "arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:loadbalancer/app/my-alb/eb45bc3180a981a9",
     "arn_suffix": "app/my-alb/eb45bc3180a981a9",
     "customer_owned_ipv4_pool": "",
     "desync_mitigation_mode": "defensive",
     "dns_name": "internal-my-alb-1424119879.us-east-1.elb.amazonaws.com",
     "drop_invalid_header_fields": false,
     "enable_cross_zone_load_balancing": true,
     "enable_deletion_protection": false,
     "enable_http2": true,
     "enable_tls_version_and_cipher_suite_headers": false,
     "enable_waf_fail_open": false,
     "enable_xff_client_port": false,
     "id": "arn:aws:elasticloadbalancing:us-east-1:086603201384:loadbalancer/app/my-alb/eb45bc3180a981a9",
     "idle_timeout": 60,
     "internal": true,
     "ip_address_type": "ipv4",
     "load_balancer_type": "application",
     "name": "my-alb",
     "name_prefix": null,
     "preserve_host_header": false,
     "security_groups": [
      "sg-0a7a62279598f4465",
      "sg-0afd46c11f40daa43"
     ],
     "subnet_mapping": [
      {
       "allocation_id": "",
       "ipv6_address": "",
       "outpost_id": "",
       "private_ipv4_address": "",
       "subnet_id": "subnet-01e25e0c76c6457f6"
      },
      {
       "allocation_id": "",
       "ipv6_address": "",
       "outpost_id": "",
       "private_ipv4_address": "",
       "subnet_id": "subnet-0465084bc667c4897"
      }
     ],
     "subnets": [
      "subnet-01e25e0c76c6457f6",
      "subnet-0465084bc667c4897"
     ],
     "tags": {
      "Name": "my-alb"
     },
     "tags_all": {
      "Name": "my-alb"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4",
     "xff_header_processing_mode": "append",
     "zone_id": "Z35SXDOTRQ7X7K"
    },
    "after_sensitive": {
     "access_logs": [
      {}
     ],
     "security_groups": [
      false,
      false
     ],
     "subnet_mapping": [
      {},
      {}
     ],
     "subnets": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "access_logs": [
      {
       "bucket": "",
       "enabled": false,
       "prefix": ""
      }
     ],
     "arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:loadbalancer/app/my-alb/eb45bc3180a981a9",
     "arn_suffix": "app/my-alb/eb45bc3180a981a9",
     "customer_owned_ipv4_pool": "",
     "desync_mitigation_mode": "defensive",
     "dns_name": "internal-my-alb-1424119879.us-east-1.elb.amazonaws.com",
     "drop_invalid_header_fields": false,
     "enable_cross_zone_load_balancing": true,
     "enable_deletion_protection": false,
     "enable_http2": true,
     "enable_tls_version_and_cipher_suite_headers": false,
     "enable_waf_fail_open": false,
     "enable_xff_client_port": false,
     "id": "arn:aws:elasticloadbalancing:us-east-1:086603201384:loadbalancer/app/my-alb/eb45bc3180a981a9",
     "idle_timeout": 60,
     "internal": true,
     "ip_address_type": "ipv4",
     "load_balancer_type": "application",
     "name": "my-alb",
     "name_prefix": null,
     "preserve_host_header": false,
     "security_groups": [
      "sg-0a7a62279598f4465",
      "sg-0afd46c11f40daa43"
     ],
     "subnet_mapping": [
      {
       "allocation_id": "",
       "ipv6_address": "",
       "outpost_id": "",
       "private_ipv4_address": "",
       "subnet_id": "subnet-01e25e0c76c6457f6"
      },
      {
       "allocation_id": "",
       "ipv6_address": "",
       "outpost_id": "",
       "private_ipv4_address": "",
       "subnet_id": "subnet-0465084bc667c4897"
      }
     ],
     "subnets": [
      "subnet-01e25e0c76c6457f6",
      "subnet-0465084bc667c4897"
     ],
     "tags": {
      "Name": "my-alb"
     },
     "tags_all": {
      "Name": "my-alb"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4",
     "xff_header_processing_mode": "append",
     "zone_id": "Z35SXDOTRQ7X7K"
    },
    "before_sensitive": {
     "access_logs": [
      {}
     ],
     "security_groups": [
      false,
      false
     ],
     "subnet_mapping": [
      {},
      {}
     ],
     "subnets": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "load_balancer",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_alb"
  },
  {
   "address": "aws_alb_listener.listener",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "alpn_policy": null,
     "arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:listener/app/my-alb/eb45bc3180a981a9/0779fbbe7f27f8ef",
     "certificate_arn": null,
     "default_action": [
      {
       "authenticate_cognito": [],
       "authenticate_oidc": [],
       "fixed_response": [],
       "forward": [],
       "order": 1,
       "redirect": [],
       "target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:targetgroup/my-target-group/aa3de2f648ae5261",
       "type": "forward"
      }
     ],
     "id": "arn:aws:elasticloadbalancing:us-east-1:086603201384:listener/app/my-alb/eb45bc3180a981a9/0779fbbe7f27f8ef",
     "load_balancer_arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:loadbalancer/app/my-alb/eb45bc3180a981a9",
     "port": 80,
     "protocol": "HTTP",
     "ssl_policy": "",
     "tags": {},
     "tags_all": {},
     "timeouts": null
    },
    "after_sensitive": {
     "default_action": [
      {
       "authenticate_cognito": [],
       "authenticate_oidc": [],
       "fixed_response": [],
       "forward": [],
       "redirect": []
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "alpn_policy": null,
     "arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:listener/app/my-alb/eb45bc3180a981a9/0779fbbe7f27f8ef",
     "certificate_arn": null,
     "default_action": [
      {
       "authenticate_cognito": [],
       "authenticate_oidc": [],
       "fixed_response": [],
       "forward": [],
       "order": 1,
       "redirect": [],
       "target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:targetgroup/my-target-group/aa3de2f648ae5261",
       "type": "forward"
      }
     ],
     "id": "arn:aws:elasticloadbalancing:us-east-1:086603201384:listener/app/my-alb/eb45bc3180a981a9/0779fbbe7f27f8ef",
     "load_balancer_arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:loadbalancer/app/my-alb/eb45bc3180a981a9",
     "port": 80,
     "protocol": "HTTP",
     "ssl_policy": "",
     "tags": {},
     "tags_all": {},
     "timeouts": null
    },
    "before_sensitive": {
     "default_action": [
      {
       "authenticate_cognito": [],
       "authenticate_oidc": [],
       "fixed_response": [],
       "forward": [],
       "redirect": []
      }
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "listener",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_alb_listener"
  },
  {
   "address": "aws_alb_target_group.target_group",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:targetgroup/my-target-group/aa3de2f648ae5261",
     "arn_suffix": "targetgroup/my-target-group/aa3de2f648ae5261",
     "connection_termination": false,
     "deregistration_delay": "300",
     "health_check": [
      {
       "enabled": true,
       "healthy_threshold": 3,
       "interval": 30,
       "matcher": "200",
       "path": "/",
       "port": "traffic-port",
       "protocol": "HTTP",
       "timeout": 5,
       "unhealthy_threshold": 3
      }
     ],
     "id": "arn:aws:elasticloadbalancing:us-east-1:086603201384:targetgroup/my-target-group/aa3de2f648ae5261",
     "ip_address_type": "ipv4",
     "lambda_multi_value_headers_enabled": false,
     "load_balancing_algorithm_type": "round_robin",
     "load_balancing_cross_zone_enabled": "use_load_balancer_configuration",
     "name": "my-target-group",
     "name_prefix": null,
     "port": 80,
     "preserve_client_ip": null,
     "protocol": "HTTP",
     "protocol_version": "HTTP1",
     "proxy_protocol_v2": false,
     "slow_start": 0,
     "stickiness": [
      {
       "cookie_duration": 86400,
       "cookie_name": "",
       "enabled": false,
       "type": "lb_cookie"
      }
     ],
     "tags": {
      "Name": "my-target-group"
     },
     "tags_all": {
      "Name": "my-target-group"
     },
     "target_failover": [
      {
       "on_deregistration": null,
       "on_unhealthy": null
      }
     ],
     "target_type": "instance",
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "health_check": [
      {}
     ],
     "stickiness": [
      {}
     ],
     "tags": {},
     "tags_all": {},
     "target_failover": [
      {}
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:targetgroup/my-target-group/aa3de2f648ae5261",
     "arn_suffix": "targetgroup/my-target-group/aa3de2f648ae5261",
     "connection_termination": false,
     "deregistration_delay": "300",
     "health_check": [
      {
       "enabled": true,
       "healthy_threshold": 3,
       "interval": 30,
       "matcher": "200",
       "path": "/",
       "port": "traffic-port",
       "protocol": "HTTP",
       "timeout": 5,
       "unhealthy_threshold": 3
      }
     ],
     "id": "arn:aws:elasticloadbalancing:us-east-1:086603201384:targetgroup/my-target-group/aa3de2f648ae5261",
     "ip_address_type": "ipv4",
     "lambda_multi_value_headers_enabled": false,
     "load_balancing_algorithm_type": "round_robin",
     "load_balancing_cross_zone_enabled": "use_load_balancer_configuration",
     "name": "my-target-group",
     "name_prefix": null,
     "port": 80,
     "preserve_client_ip": null,
     "protocol": "HTTP",
     "protocol_version": "HTTP1",
     "proxy_protocol_v2": false,
     "slow_start": 0,
     "stickiness": [
      {
       "cookie_duration": 86400,
       "cookie_name": "",
       "enabled": false,
       "type": "lb_cookie"
      }
     ],
     "tags": {
      "Name": "my-target-group"
     },
     "tags_all": {
      "Name": "my-target-group"
     },
     "target_failover": [
      {
       "on_deregistration": null,
       "on_unhealthy": null
      }
     ],
     "target_type": "instance",
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "health_check": [
      {}
     ],
     "stickiness": [
      {}
     ],
     "tags": {},
     "tags_all": {},
     "target_failover": [
      {}
     ]
    }
   },
   "mode": "managed",
   "name": "target_group",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_alb_target_group"
  },
  {
   "address": "aws_eip.my_eip[\"10.0.1.0/24\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "address": null,
     "allocation_id": "eipalloc-0e2344eeee7bf7c66",
     "associate_with_private_ip": null,
     "association_id": "",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-0e2344eeee7bf7c66",
     "instance": "",
     "network_border_group": "us-east-1",
     "network_interface": "",
     "private_dns": null,
     "private_ip": "",
     "public_dns": "ec2-54-144-242-29.compute-1.amazonaws.com",
     "public_ip": "54.144.242.29",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Name": "my-eip-10.0.1.0/24"
     },
     "tags_all": {
      "Name": "my-eip-10.0.1.0/24"
     },
     "timeouts": null,
     "vpc": true
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "address": null,
     "allocation_id": "eipalloc-0e2344eeee7bf7c66",
     "associate_with_private_ip": null,
     "association_id": "",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-0e2344eeee7bf7c66",
     "instance": "",
     "network_border_group": "us-east-1",
     "network_interface": "",
     "private_dns": null,
     "private_ip": "",
     "public_dns": "ec2-54-144-242-29.compute-1.amazonaws.com",
     "public_ip": "54.144.242.29",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Name": "my-eip-10.0.1.0/24"
     },
     "tags_all": {
      "Name": "my-eip-10.0.1.0/24"
     },
     "timeouts": null,
     "vpc": true
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": "10.0.1.0/24",
   "mode": "managed",
   "name": "my_eip",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eip"
  },
  {
   "address": "aws_eip.my_eip[\"10.0.2.0/24\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "address": null,
     "allocation_id": "eipalloc-0c88edee8e090ecc0",
     "associate_with_private_ip": null,
     "association_id": "",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-0c88edee8e090ecc0",
     "instance": "",
     "network_border_group": "us-east-1",
     "network_interface": "",
     "private_dns": null,
     "private_ip": "",
     "public_dns": "ec2-44-218-206-65.compute-1.amazonaws.com",
     "public_ip": "44.218.206.65",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Name": "my-eip-10.0.2.0/24"
     },
     "tags_all": {
      "Name": "my-eip-10.0.2.0/24"
     },
     "timeouts": null,
     "vpc": true
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "address": null,
     "allocation_id": "eipalloc-0c88edee8e090ecc0",
     "associate_with_private_ip": null,
     "association_id": "",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-0c88edee8e090ecc0",
     "instance": "",
     "network_border_group": "us-east-1",
     "network_interface": "",
     "private_dns": null,
     "private_ip": "",
     "public_dns": "ec2-44-218-206-65.compute-1.amazonaws.com",
     "public_ip": "44.218.206.65",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Name": "my-eip-10.0.2.0/24"
     },
     "tags_all": {
      "Name": "my-eip-10.0.2.0/24"
     },
     "timeouts": null,
     "vpc": true
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": "10.0.2.0/24",
   "mode": "managed",
   "name": "my_eip",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eip"
  },
  {
   "address": "aws_iam_instance_profile.worker",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:instance-profile/ed-eks-worker-new-profile",
     "create_date": "2023-09-29T10:42:38Z",
     "id": "ed-eks-worker-new-profile",
     "name": "ed-eks-worker-new-profile",
     "name_prefix": "",
     "path": "/",
     "role": "ed-eks-worker",
     "tags": {},
     "tags_all": {},
     "unique_id": "AIPARIKPT7NUHINPW2D7C"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:instance-profile/ed-eks-worker-new-profile",
     "create_date": "2023-09-29T10:42:38Z",
     "id": "ed-eks-worker-new-profile",
     "name": "ed-eks-worker-new-profile",
     "name_prefix": "",
     "path": "/",
     "role": "ed-eks-worker",
     "tags": {},
     "tags_all": {},
     "unique_id": "AIPARIKPT7NUHINPW2D7C"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "worker",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_instance_profile"
  },
  {
   "address": "aws_iam_policy.autoscaler",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
     "description": "",
     "id": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
     "name": "ed-eks-autoscaler-policy",
     "name_prefix": "",
     "path": "/",
     "policy": "{\"Statement\":[{\"Action\":[\"autoscaling:DescribeAutoScalingGroups\",\"autoscaling:DescribeAutoScalingInstances\",\"autoscaling:DescribeTags\",\"autoscaling:DescribeLaunchConfigurations\",\"autoscaling:SetDesiredCapacity\",\"autoscaling:TerminateInstanceInAutoScalingGroup\",\"ec2:DescribeLaunchTemplateVersions\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
     "policy_id": "ANPARIKPT7NUGHKEJTDWO",
     "tags": {},
     "tags_all": {}
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
     "description": "",
     "id": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
     "name": "ed-eks-autoscaler-policy",
     "name_prefix": "",
     "path": "/",
     "policy": "{\"Statement\":[{\"Action\":[\"autoscaling:DescribeAutoScalingGroups\",\"autoscaling:DescribeAutoScalingInstances\",\"autoscaling:DescribeTags\",\"autoscaling:DescribeLaunchConfigurations\",\"autoscaling:SetDesiredCapacity\",\"autoscaling:TerminateInstanceInAutoScalingGroup\",\"ec2:DescribeLaunchTemplateVersions\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
     "policy_id": "ANPARIKPT7NUGHKEJTDWO",
     "tags": {},
     "tags_all": {}
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "autoscaler",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_policy"
  },
  {
   "address": "aws_iam_role.master",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:role/ed-eks-master",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:37Z",
     "description": "",
     "force_detach_policies": false,
     "id": "ed-eks-master",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
      "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
      "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
     ],
     "max_session_duration": 3600,
     "name": "ed-eks-master",
     "name_prefix": "",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROARIKPT7NUN4FMIWO54"
    },
    "after_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:role/ed-eks-master",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:37Z",
     "description": "",
     "force_detach_policies": false,
     "id": "ed-eks-master",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
      "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
      "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
     ],
     "max_session_duration": 3600,
     "name": "ed-eks-master",
     "name_prefix": "",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROARIKPT7NUN4FMIWO54"
    },
    "before_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "master",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "aws_iam_role.worker",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:role/ed-eks-worker",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:37Z",
     "description": "",
     "force_detach_policies": false,
     "id": "ed-eks-worker",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
      "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
      "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
      "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
     ],
     "max_session_duration": 3600,
     "name": "ed-eks-worker",
     "name_prefix": "",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROARIKPT7NUI4SEGKIQG"
    },
    "after_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false,
      false,
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:role/ed-eks-worker",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:37Z",
     "description": "",
     "force_detach_policies": false,
     "id": "ed-eks-worker",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
      "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
      "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
      "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
     ],
     "max_session_duration": 3600,
     "name": "ed-eks-worker",
     "name_prefix": "",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROARIKPT7NUI4SEGKIQG"
    },
    "before_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false,
      false,
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "worker",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "aws_iam_role_policy_attachment.AmazonEC2ContainerRegistryReadOnly",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ed-eks-worker-2023092910423820630000000b",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
     "role": "ed-eks-worker"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ed-eks-worker-2023092910423820630000000b",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
     "role": "ed-eks-worker"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "AmazonEC2ContainerRegistryReadOnly",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "aws_iam_role_policy_attachment.AmazonEKSClusterPolicy",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ed-eks-master-2023092910423820460000000a",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
     "role": "ed-eks-master"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ed-eks-master-2023092910423820460000000a",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
     "role": "ed-eks-master"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "AmazonEKSClusterPolicy",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "aws_iam_role_policy_attachment.AmazonEKSServicePolicy",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ed-eks-master-20230929104238203300000009",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
     "role": "ed-eks-master"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ed-eks-master-20230929104238203300000009",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
     "role": "ed-eks-master"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "AmazonEKSServicePolicy",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "aws_iam_role_policy_attachment.AmazonEKSVPCResourceController",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ed-eks-master-20230929104238201600000008",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
     "role": "ed-eks-master"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ed-eks-master-20230929104238201600000008",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
     "role": "ed-eks-master"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "AmazonEKSVPCResourceController",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "aws_iam_role_policy_attachment.AmazonEKSWorkerNodePolicy",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ed-eks-worker-20230929104237944600000004",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
     "role": "ed-eks-worker"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ed-eks-worker-20230929104237944600000004",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
     "role": "ed-eks-worker"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "AmazonEKSWorkerNodePolicy",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "aws_iam_role_policy_attachment.AmazonEKS_CNI_Policy",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ed-eks-worker-20230929104238060500000007",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
     "role": "ed-eks-worker"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ed-eks-worker-20230929104238060500000007",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
     "role": "ed-eks-worker"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "AmazonEKS_CNI_Policy",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "aws_iam_role_policy_attachment.AmazonSSMManagedInstanceCore",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ed-eks-worker-20230929104237884100000002",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
     "role": "ed-eks-worker"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ed-eks-worker-20230929104237884100000002",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
     "role": "ed-eks-worker"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "AmazonSSMManagedInstanceCore",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "aws_iam_role_policy_attachment.autoscaler",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ed-eks-worker-20230929104237984800000005",
     "policy_arn": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
     "role": "ed-eks-worker"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ed-eks-worker-20230929104237984800000005",
     "policy_arn": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
     "role": "ed-eks-worker"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "autoscaler",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "aws_iam_role_policy_attachment.s3",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ed-eks-worker-20230929104238050500000006",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
     "role": "ed-eks-worker"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ed-eks-worker-20230929104238050500000006",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
     "role": "ed-eks-worker"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "s3",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "aws_iam_role_policy_attachment.x-ray",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ed-eks-worker-20230929104237890000000003",
     "policy_arn": "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
     "role": "ed-eks-worker"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ed-eks-worker-20230929104237890000000003",
     "policy_arn": "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
     "role": "ed-eks-worker"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "x-ray",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "aws_internet_gateway.igw",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "tags": {
      "Name": "my-internet-gateway"
     },
     "tags_all": {
      "Name": "my-internet-gateway"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "id": true,
     "owner_id": true,
     "tags": {},
     "tags_all": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "name": "igw",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_internet_gateway"
  },
  {
   "action_reason": "replace_because_tainted",
   "address": "aws_nat_gateway.my_nat_gateway[\"10.0.1.0/24\"]",
   "change": {
    "actions": [
     "delete",
     "create"
    ],
    "after": {
     "allocation_id": "eipalloc-0e2344eeee7bf7c66",
     "connectivity_type": "public",
     "secondary_allocation_ids": null,
     "subnet_id": "subnet-01e25e0c76c6457f6",
     "tags": {
      "Name": "my-nat-gateway-10.0.1.0/24"
     },
     "tags_all": {
      "Name": "my-nat-gateway-10.0.1.0/24"
     },
     "timeouts": null
    },
    "after_sensitive": {
     "secondary_private_ip_addresses": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {
     "association_id": true,
     "id": true,
     "network_interface_id": true,
     "private_ip": true,
     "public_ip": true,
     "secondary_private_ip_address_count": true,
     "secondary_private_ip_addresses": true,
     "tags": {},
     "tags_all": {}
    },
    "before": {
     "allocation_id": "eipalloc-0e2344eeee7bf7c66",
     "association_id": "",
     "connectivity_type": "public",
     "id": "nat-03e78b1c85217d893",
     "network_interface_id": "eni-092dfcd2f42346fbe",
     "private_ip": "10.0.1.73",
     "public_ip": "",
     "secondary_allocation_ids": [],
     "secondary_private_ip_address_count": 0,
     "secondary_private_ip_addresses": [],
     "subnet_id": "subnet-01e25e0c76c6457f6",
     "tags": {
      "Name": "my-nat-gateway-10.0.1.0/24"
     },
     "tags_all": {
      "Name": "my-nat-gateway-10.0.1.0/24"
     },
     "timeouts": null
    },
    "before_sensitive": {
     "secondary_allocation_ids": [],
     "secondary_private_ip_addresses": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": "10.0.1.0/24",
   "mode": "managed",
   "name": "my_nat_gateway",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_nat_gateway"
  },
  {
   "action_reason": "replace_because_tainted",
   "address": "aws_nat_gateway.my_nat_gateway[\"10.0.2.0/24\"]",
   "change": {
    "actions": [
     "delete",
     "create"
    ],
    "after": {
     "allocation_id": "eipalloc-0c88edee8e090ecc0",
     "connectivity_type": "public",
     "secondary_allocation_ids": null,
     "subnet_id": "subnet-0465084bc667c4897",
     "tags": {
      "Name": "my-nat-gateway-10.0.2.0/24"
     },
     "tags_all": {
      "Name": "my-nat-gateway-10.0.2.0/24"
     },
     "timeouts": null
    },
    "after_sensitive": {
     "secondary_private_ip_addresses": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {
     "association_id": true,
     "id": true,
     "network_interface_id": true,
     "private_ip": true,
     "public_ip": true,
     "secondary_private_ip_address_count": true,
     "secondary_private_ip_addresses": true,
     "tags": {},
     "tags_all": {}
    },
    "before": {
     "allocation_id": "eipalloc-0c88edee8e090ecc0",
     "association_id": "",
     "connectivity_type": "public",
     "id": "nat-0c5d82e41025f8bef",
     "network_interface_id": "eni-031bb2af97503e87f",
     "private_ip": "10.0.2.25",
     "public_ip": "",
     "secondary_allocation_ids": [],
     "secondary_private_ip_address_count": 0,
     "secondary_private_ip_addresses": [],
     "subnet_id": "subnet-0465084bc667c4897",
     "tags": {
      "Name": "my-nat-gateway-10.0.2.0/24"
     },
     "tags_all": {
      "Name": "my-nat-gateway-10.0.2.0/24"
     },
     "timeouts": null
    },
    "before_sensitive": {
     "secondary_allocation_ids": [],
     "secondary_private_ip_addresses": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": "10.0.2.0/24",
   "mode": "managed",
   "name": "my_nat_gateway",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_nat_gateway"
  },
  {
   "address": "aws_route.private_route[\"10.0.1.0/24\"]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "carrier_gateway_id": null,
     "core_network_arn": null,
     "destination_cidr_block": "0.0.0.0/0",
     "destination_ipv6_cidr_block": null,
     "destination_prefix_list_id": null,
     "egress_only_gateway_id": null,
     "gateway_id": null,
     "local_gateway_id": null,
     "route_table_id": "rtb-0e192ea7ef9fe961a",
     "timeouts": null,
     "transit_gateway_id": null,
     "vpc_endpoint_id": null,
     "vpc_peering_connection_id": null
    },
    "after_sensitive": {},
    "after_unknown": {
     "id": true,
     "instance_id": true,
     "instance_owner_id": true,
     "nat_gateway_id": true,
     "network_interface_id": true,
     "origin": true,
     "state": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": "10.0.1.0/24",
   "mode": "managed",
   "name": "private_route",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route"
  },
  {
   "address": "aws_route.private_route[\"10.0.2.0/24\"]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "carrier_gateway_id": null,
     "core_network_arn": null,
     "destination_cidr_block": "0.0.0.0/0",
     "destination_ipv6_cidr_block": null,
     "destination_prefix_list_id": null,
     "egress_only_gateway_id": null,
     "gateway_id": null,
     "local_gateway_id": null,
     "route_table_id": "rtb-000ca2c4d8e86213c",
     "timeouts": null,
     "transit_gateway_id": null,
     "vpc_endpoint_id": null,
     "vpc_peering_connection_id": null
    },
    "after_sensitive": {},
    "after_unknown": {
     "id": true,
     "instance_id": true,
     "instance_owner_id": true,
     "nat_gateway_id": true,
     "network_interface_id": true,
     "origin": true,
     "state": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": "10.0.2.0/24",
   "mode": "managed",
   "name": "private_route",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route"
  },
  {
   "address": "aws_route_table.private_route_table[\"10.0.1.0/24\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-0e192ea7ef9fe961a",
     "id": "rtb-0e192ea7ef9fe961a",
     "owner_id": "086603201384",
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-0e192ea7ef9fe961a",
     "id": "rtb-0e192ea7ef9fe961a",
     "owner_id": "086603201384",
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": "10.0.1.0/24",
   "mode": "managed",
   "name": "private_route_table",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table"
  },
  {
   "address": "aws_route_table.private_route_table[\"10.0.2.0/24\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-000ca2c4d8e86213c",
     "id": "rtb-000ca2c4d8e86213c",
     "owner_id": "086603201384",
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-000ca2c4d8e86213c",
     "id": "rtb-000ca2c4d8e86213c",
     "owner_id": "086603201384",
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": "10.0.2.0/24",
   "mode": "managed",
   "name": "private_route_table",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table"
  },
  {
   "address": "aws_route_table_association.my_rta[\"10.0.1.0/24\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "gateway_id": "",
     "id": "rtbassoc-09b870cd44789b5b6",
     "route_table_id": "rtb-0e192ea7ef9fe961a",
     "subnet_id": "subnet-01e25e0c76c6457f6",
     "timeouts": null
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "gateway_id": "",
     "id": "rtbassoc-09b870cd44789b5b6",
     "route_table_id": "rtb-0e192ea7ef9fe961a",
     "subnet_id": "subnet-01e25e0c76c6457f6",
     "timeouts": null
    },
    "before_sensitive": {}
   },
   "index": "10.0.1.0/24",
   "mode": "managed",
   "name": "my_rta",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "aws_route_table_association.my_rta[\"10.0.2.0/24\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "gateway_id": "",
     "id": "rtbassoc-035b6ce4113107d39",
     "route_table_id": "rtb-000ca2c4d8e86213c",
     "subnet_id": "subnet-0465084bc667c4897",
     "timeouts": null
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "gateway_id": "",
     "id": "rtbassoc-035b6ce4113107d39",
     "route_table_id": "rtb-000ca2c4d8e86213c",
     "subnet_id": "subnet-0465084bc667c4897",
     "timeouts": null
    },
    "before_sensitive": {}
   },
   "index": "10.0.2.0/24",
   "mode": "managed",
   "name": "my_rta",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "aws_security_group.eks_control_plane_sg",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0afd46c11f40daa43",
     "description": "Security group for the EKS control plane",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [],
       "self": false,
       "to_port": 0
      }
     ],
     "id": "sg-0afd46c11f40daa43",
     "ingress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [
        "sg-0a7a62279598f4465"
       ],
       "self": false,
       "to_port": 0
      }
     ],
     "name": "eks-control-plane-sg",
     "name_prefix": "",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "eks-control-plane-sg"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "eks-control-plane-sg"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0afd46c11f40daa43",
     "description": "Security group for the EKS control plane",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [],
       "self": false,
       "to_port": 0
      }
     ],
     "id": "sg-0afd46c11f40daa43",
     "ingress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [
        "sg-0a7a62279598f4465"
       ],
       "self": false,
       "to_port": 0
      }
     ],
     "name": "eks-control-plane-sg",
     "name_prefix": "",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "eks-control-plane-sg"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "eks-control-plane-sg"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "eks_control_plane_sg",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "aws_security_group.worker_node_sg",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0a7a62279598f4465",
     "description": "Security group for EKS worker nodes",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [],
       "self": false,
       "to_port": 0
      }
     ],
     "id": "sg-0a7a62279598f4465",
     "ingress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 22,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 22
      },
      {
       "cidr_blocks": [],
       "description": "",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [
        "sg-0afd46c11f40daa43"
       ],
       "self": false,
       "to_port": 0
      }
     ],
     "name": "eks-worker-node-sg",
     "name_prefix": "",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "eks-worker-node-sg"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "eks-worker-node-sg"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0a7a62279598f4465",
     "description": "Security group for EKS worker nodes",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [],
       "self": false,
       "to_port": 0
      }
     ],
     "id": "sg-0a7a62279598f4465",
     "ingress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 22,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 22
      },
      {
       "cidr_blocks": [],
       "description": "",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [
        "sg-0afd46c11f40daa43"
       ],
       "self": false,
       "to_port": 0
      }
     ],
     "name": "eks-worker-node-sg",
     "name_prefix": "",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "eks-worker-node-sg"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "eks-worker-node-sg"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "worker_node_sg",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "aws_security_group_rule.control_plane_egress",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "",
     "from_port": 0,
     "id": "sgrule-3593713217",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0afd46c11f40daa43",
     "security_group_rule_id": "sgr-0b88db6161d47ef95",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 0,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "",
     "from_port": 0,
     "id": "sgrule-3593713217",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0afd46c11f40daa43",
     "security_group_rule_id": "sgr-0b88db6161d47ef95",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 0,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ]
    }
   },
   "mode": "managed",
   "name": "control_plane_egress",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "aws_security_group_rule.control_plane_ingress",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "",
     "from_port": 443,
     "id": "sgrule-1651983592",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "tcp",
     "security_group_id": "sg-0afd46c11f40daa43",
     "security_group_rule_id": "sgr-09ebe54cbfe80346c",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "",
     "from_port": 443,
     "id": "sgrule-1651983592",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "tcp",
     "security_group_id": "sg-0afd46c11f40daa43",
     "security_group_rule_id": "sgr-09ebe54cbfe80346c",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ]
    }
   },
   "mode": "managed",
   "name": "control_plane_ingress",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "aws_security_group_rule.control_plane_to_worker",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "",
     "from_port": 0,
     "id": "sgrule-1792465420",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0a7a62279598f4465",
     "security_group_rule_id": "sgr-06f5da83fac090767",
     "self": false,
     "source_security_group_id": "sg-0afd46c11f40daa43",
     "timeouts": null,
     "to_port": 0,
     "type": "ingress"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "",
     "from_port": 0,
     "id": "sgrule-1792465420",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0a7a62279598f4465",
     "security_group_rule_id": "sgr-06f5da83fac090767",
     "self": false,
     "source_security_group_id": "sg-0afd46c11f40daa43",
     "timeouts": null,
     "to_port": 0,
     "type": "ingress"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "control_plane_to_worker",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "aws_security_group_rule.worker_egress",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "",
     "from_port": 0,
     "id": "sgrule-3630475665",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0a7a62279598f4465",
     "security_group_rule_id": "sgr-0e8f46dd8b087c27c",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 0,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "",
     "from_port": 0,
     "id": "sgrule-3630475665",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0a7a62279598f4465",
     "security_group_rule_id": "sgr-0e8f46dd8b087c27c",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 0,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ]
    }
   },
   "mode": "managed",
   "name": "worker_egress",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "aws_security_group_rule.worker_ssh_ingress",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "",
     "from_port": 22,
     "id": "sgrule-1454391944",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "tcp",
     "security_group_id": "sg-0a7a62279598f4465",
     "security_group_rule_id": "sgr-0fb3682a9b443c31f",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 22,
     "type": "ingress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "",
     "from_port": 22,
     "id": "sgrule-1454391944",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "tcp",
     "security_group_id": "sg-0a7a62279598f4465",
     "security_group_rule_id": "sgr-0fb3682a9b443c31f",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 22,
     "type": "ingress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ]
    }
   },
   "mode": "managed",
   "name": "worker_ssh_ingress",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "aws_security_group_rule.worker_to_control_plane",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "",
     "from_port": 0,
     "id": "sgrule-2431943090",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0afd46c11f40daa43",
     "security_group_rule_id": "sgr-039e0602c8f4745b3",
     "self": false,
     "source_security_group_id": "sg-0a7a62279598f4465",
     "timeouts": null,
     "to_port": 0,
     "type": "ingress"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "",
     "from_port": 0,
     "id": "sgrule-2431943090",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0afd46c11f40daa43",
     "security_group_rule_id": "sgr-039e0602c8f4745b3",
     "self": false,
     "source_security_group_id": "sg-0a7a62279598f4465",
     "timeouts": null,
     "to_port": 0,
     "type": "ingress"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "worker_to_control_plane",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "aws_subnet.private_subnet[\"10.0.1.0/24\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:subnet/subnet-01e25e0c76c6457f6",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1a",
     "availability_zone_id": "use1-az1",
     "cidr_block": "10.0.1.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_lni_at_device_index": 0,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-01e25e0c76c6457f6",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "086603201384",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:subnet/subnet-01e25e0c76c6457f6",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1a",
     "availability_zone_id": "use1-az1",
     "cidr_block": "10.0.1.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_lni_at_device_index": 0,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-01e25e0c76c6457f6",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "086603201384",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": "10.0.1.0/24",
   "mode": "managed",
   "name": "private_subnet",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "aws_subnet.private_subnet[\"10.0.2.0/24\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:subnet/subnet-0465084bc667c4897",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1b",
     "availability_zone_id": "use1-az2",
     "cidr_block": "10.0.2.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_lni_at_device_index": 0,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0465084bc667c4897",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "086603201384",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:subnet/subnet-0465084bc667c4897",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1b",
     "availability_zone_id": "use1-az2",
     "cidr_block": "10.0.2.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_lni_at_device_index": 0,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0465084bc667c4897",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "086603201384",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": "10.0.2.0/24",
   "mode": "managed",
   "name": "private_subnet",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "aws_vpc.vpc",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:vpc/vpc-00de26259c65152d4",
     "assign_generated_ipv6_cidr_block": false,
     "cidr_block": "10.0.0.0/16",
     "default_network_acl_id": "acl-0311f83415a4a0d51",
     "default_route_table_id": "rtb-0d7da816b4e73db19",
     "default_security_group_id": "sg-05bb4fee2ac8de8ce",
     "dhcp_options_id": "dopt-08e6ff91b51211784",
     "enable_dns_hostnames": true,
     "enable_dns_support": true,
     "enable_network_address_usage_metrics": false,
     "id": "vpc-00de26259c65152d4",
     "instance_tenancy": "default",
     "ipv4_ipam_pool_id": null,
     "ipv4_netmask_length": null,
     "ipv6_association_id": "",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_network_border_group": "",
     "ipv6_ipam_pool_id": "",
     "ipv6_netmask_length": 0,
     "main_route_table_id": "rtb-0d7da816b4e73db19",
     "owner_id": "086603201384",
     "tags": {
      "Envrironment": "staging"
     },
     "tags_all": {
      "Envrironment": "staging"
     }
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:vpc/vpc-00de26259c65152d4",
     "assign_generated_ipv6_cidr_block": false,
     "cidr_block": "10.0.0.0/16",
     "default_network_acl_id": "acl-0311f83415a4a0d51",
     "default_route_table_id": "rtb-0d7da816b4e73db19",
     "default_security_group_id": "sg-05bb4fee2ac8de8ce",
     "dhcp_options_id": "dopt-08e6ff91b51211784",
     "enable_dns_hostnames": true,
     "enable_dns_support": true,
     "enable_network_address_usage_metrics": false,
     "id": "vpc-00de26259c65152d4",
     "instance_tenancy": "default",
     "ipv4_ipam_pool_id": null,
     "ipv4_netmask_length": null,
     "ipv6_association_id": "",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_network_border_group": "",
     "ipv6_ipam_pool_id": "",
     "ipv6_netmask_length": 0,
     "main_route_table_id": "rtb-0d7da816b4e73db19",
     "owner_id": "086603201384",
     "tags": {
      "Envrironment": "staging"
     },
     "tags_all": {
      "Envrironment": "staging"
     }
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "vpc",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_vpc"
  },
  {
   "address": "module.eks.aws_cloudwatch_log_group.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:logs:us-east-1:086603201384:log-group:/aws/eks/my_eks/cluster",
     "id": "/aws/eks/my_eks/cluster",
     "kms_key_id": "",
     "name": "/aws/eks/my_eks/cluster",
     "name_prefix": "",
     "retention_in_days": 90,
     "skip_destroy": false,
     "tags": {
      "Name": "/aws/eks/my_eks/cluster"
     },
     "tags_all": {
      "Name": "/aws/eks/my_eks/cluster"
     }
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:logs:us-east-1:086603201384:log-group:/aws/eks/my_eks/cluster",
     "id": "/aws/eks/my_eks/cluster",
     "kms_key_id": "",
     "name": "/aws/eks/my_eks/cluster",
     "name_prefix": "",
     "retention_in_days": 90,
     "skip_destroy": false,
     "tags": {
      "Name": "/aws/eks/my_eks/cluster"
     },
     "tags_all": {
      "Name": "/aws/eks/my_eks/cluster"
     }
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_cloudwatch_log_group"
  },
  {
   "address": "module.eks.aws_eks_cluster.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:eks:us-east-1:086603201384:cluster/my_eks",
     "certificate_authority": [
      {
       "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJUXQreUFNWWhXSlV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpBNU1qa3hNRFF6TWpaYUZ3MHpNekE1TWpZeE1EUTRNalphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURNL2V0OTg1Y1JSaHd6Q3U1emxSb3dzQ0dJR1FxUnk0VndJYVk1M2Z4Z25YKytxenZ0c2xMb1RSQTAKdVA4YktNb2J3RmhzYkRsSm5aSHkyUS9oRmZKRjVhWWhDZjMzYy8vOGNsVEhGYVZKN2l5RUJZODJZUG81M1psQQpBeUlhZ25VNkdTZ21qbGF6Y2hyOTFsdUdjK21rV0pISjZxem9KMU5vNUp3cnhmNElSKzN2bS9GZmZzT01yaEloCi9jT044c0U3MDhOSEhjODArU0N0ODYwcDJqOGpjdDR2NHAyNmFZd0E0YmZCUUR0NTMyY09QU1pPdzRsQUZia28KM0lhdGlNQnZyV1hJSmFUZFNkanlxUEpwV0hmUThscFFNTEEvb0xSNi9DbzRNVGt2R2RoaXNzRWw2elV2aUMvTQpnTnRkVXhPSjNnMkxoRmZobE9kSTZRRWd6L3haQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTZEUwUmdRVW0xM0dPV2JVS3EvQWpvU1dPbUxqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPUFRsNm52cQpDNzg5aFRSRDRNNW5XSG92L295MVlUbWdJTlpXWmVScmhLRnpXL2FrdEZYc1RCcmUweEdIUkJnU1ByME9VUUFDCndpczYxaVlCcnRMSThmZHZVMmRrZThhOHB2NW9JcGh4bmtlYUJkWGZHOEhJL3FleVhJTlBKNkxMOWhKOXF5QTgKRGpPRU9uWlIxOXg5R1ROczBnOVJzR3J1cXpTZGQ1Q1Q2TGNNdnZIZlZjaUQ5VkkraHZYdno3WGQ3dlJjTHpoeQprQTl1cUpmTnMzaDI4cDROdm45MGtoQlV2VlQ0NmkvMTdud0ZZZWRUcmlCamJCc3J0L0lXOUVSdCtYb1ZnWGJCCmp5Vzg2d0Q4amxwcG95NFNsQWFIWkY5dnFwK0NpajRGSVZGb2VXV0h1ZU1acnRtUE9WOHJhU0o1R25IR1ZTTTQKQUxUd2M4a0ZCY2NxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      }
     ],
     "cluster_id": null,
     "created_at": "2023-09-29 10:43:01.311 +0000 UTC",
     "enabled_cluster_log_types": [
      "api",
      "audit",
      "authenticator"
     ],
     "encryption_config": [
      {
       "provider": [
        {
         "key_arn": "arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06"
        }
       ],
       "resources": [
        "secrets"
       ]
      }
     ],
     "endpoint": "https://B55713EFAAFA43A934348AD6A9CFC181.gr7.us-east-1.eks.amazonaws.com",
     "id": "my_eks",
     "identity": [
      {
       "oidc": [
        {
         "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181"
        }
       ]
      }
     ],
     "kubernetes_network_config": [
      {
       "ip_family": "ipv4",
       "service_ipv4_cidr": "172.20.0.0/16",
       "service_ipv6_cidr": ""
      }
     ],
     "name": "my_eks",
     "outpost_config": [],
     "platform_version": "eks.1",
     "role_arn": "arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001",
     "status": "ACTIVE",
     "tags": {},
     "tags_all": {},
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "version": "1.28",
     "vpc_config": [
      {
       "cluster_security_group_id": "sg-099854db6bbb6d7fb",
       "endpoint_private_access": true,
       "endpoint_public_access": false,
       "public_access_cidrs": [
        "0.0.0.0/0"
       ],
       "security_group_ids": [
        "sg-00d0fd8acde68f1c9"
       ],
       "subnet_ids": [
        "subnet-01e25e0c76c6457f6",
        "subnet-0465084bc667c4897"
       ],
       "vpc_id": "vpc-00de26259c65152d4"
      }
     ]
    },
    "after_sensitive": {
     "certificate_authority": [
      {}
     ],
     "enabled_cluster_log_types": [
      false,
      false,
      false
     ],
     "encryption_config": [
      {
       "provider": [
        {}
       ],
       "resources": [
        false
       ]
      }
     ],
     "identity": [
      {
       "oidc": [
        {}
       ]
      }
     ],
     "kubernetes_network_config": [
      {}
     ],
     "outpost_config": [],
     "tags": {},
     "tags_all": {},
     "timeouts": {},
     "vpc_config": [
      {
       "public_access_cidrs": [
        false
       ],
       "security_group_ids": [
        false
       ],
       "subnet_ids": [
        false,
        false
       ]
      }
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:eks:us-east-1:086603201384:cluster/my_eks",
     "certificate_authority": [
      {
       "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJUXQreUFNWWhXSlV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpBNU1qa3hNRFF6TWpaYUZ3MHpNekE1TWpZeE1EUTRNalphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURNL2V0OTg1Y1JSaHd6Q3U1emxSb3dzQ0dJR1FxUnk0VndJYVk1M2Z4Z25YKytxenZ0c2xMb1RSQTAKdVA4YktNb2J3RmhzYkRsSm5aSHkyUS9oRmZKRjVhWWhDZjMzYy8vOGNsVEhGYVZKN2l5RUJZODJZUG81M1psQQpBeUlhZ25VNkdTZ21qbGF6Y2hyOTFsdUdjK21rV0pISjZxem9KMU5vNUp3cnhmNElSKzN2bS9GZmZzT01yaEloCi9jT044c0U3MDhOSEhjODArU0N0ODYwcDJqOGpjdDR2NHAyNmFZd0E0YmZCUUR0NTMyY09QU1pPdzRsQUZia28KM0lhdGlNQnZyV1hJSmFUZFNkanlxUEpwV0hmUThscFFNTEEvb0xSNi9DbzRNVGt2R2RoaXNzRWw2elV2aUMvTQpnTnRkVXhPSjNnMkxoRmZobE9kSTZRRWd6L3haQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTZEUwUmdRVW0xM0dPV2JVS3EvQWpvU1dPbUxqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPUFRsNm52cQpDNzg5aFRSRDRNNW5XSG92L295MVlUbWdJTlpXWmVScmhLRnpXL2FrdEZYc1RCcmUweEdIUkJnU1ByME9VUUFDCndpczYxaVlCcnRMSThmZHZVMmRrZThhOHB2NW9JcGh4bmtlYUJkWGZHOEhJL3FleVhJTlBKNkxMOWhKOXF5QTgKRGpPRU9uWlIxOXg5R1ROczBnOVJzR3J1cXpTZGQ1Q1Q2TGNNdnZIZlZjaUQ5VkkraHZYdno3WGQ3dlJjTHpoeQprQTl1cUpmTnMzaDI4cDROdm45MGtoQlV2VlQ0NmkvMTdud0ZZZWRUcmlCamJCc3J0L0lXOUVSdCtYb1ZnWGJCCmp5Vzg2d0Q4amxwcG95NFNsQWFIWkY5dnFwK0NpajRGSVZGb2VXV0h1ZU1acnRtUE9WOHJhU0o1R25IR1ZTTTQKQUxUd2M4a0ZCY2NxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      }
     ],
     "cluster_id": null,
     "created_at": "2023-09-29 10:43:01.311 +0000 UTC",
     "enabled_cluster_log_types": [
      "api",
      "audit",
      "authenticator"
     ],
     "encryption_config": [
      {
       "provider": [
        {
         "key_arn": "arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06"
        }
       ],
       "resources": [
        "secrets"
       ]
      }
     ],
     "endpoint": "https://B55713EFAAFA43A934348AD6A9CFC181.gr7.us-east-1.eks.amazonaws.com",
     "id": "my_eks",
     "identity": [
      {
       "oidc": [
        {
         "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181"
        }
       ]
      }
     ],
     "kubernetes_network_config": [
      {
       "ip_family": "ipv4",
       "service_ipv4_cidr": "172.20.0.0/16",
       "service_ipv6_cidr": ""
      }
     ],
     "name": "my_eks",
     "outpost_config": [],
     "platform_version": "eks.1",
     "role_arn": "arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001",
     "status": "ACTIVE",
     "tags": {},
     "tags_all": {},
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "version": "1.28",
     "vpc_config": [
      {
       "cluster_security_group_id": "sg-099854db6bbb6d7fb",
       "endpoint_private_access": true,
       "endpoint_public_access": false,
       "public_access_cidrs": [
        "0.0.0.0/0"
       ],
       "security_group_ids": [
        "sg-00d0fd8acde68f1c9"
       ],
       "subnet_ids": [
        "subnet-01e25e0c76c6457f6",
        "subnet-0465084bc667c4897"
       ],
       "vpc_id": "vpc-00de26259c65152d4"
      }
     ]
    },
    "before_sensitive": {
     "certificate_authority": [
      {}
     ],
     "enabled_cluster_log_types": [
      false,
      false,
      false
     ],
     "encryption_config": [
      {
       "provider": [
        {}
       ],
       "resources": [
        false
       ]
      }
     ],
     "identity": [
      {
       "oidc": [
        {}
       ]
      }
     ],
     "kubernetes_network_config": [
      {}
     ],
     "outpost_config": [],
     "tags": {},
     "tags_all": {},
     "timeouts": {},
     "vpc_config": [
      {
       "public_access_cidrs": [
        false
       ],
       "security_group_ids": [
        false
       ],
       "subnet_ids": [
        false,
        false
       ]
      }
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eks_cluster"
  },
  {
   "address": "module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181",
     "client_id_list": [
      "sts.amazonaws.com"
     ],
     "id": "arn:aws:iam::086603201384:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181",
     "tags": {
      "Name": "my_eks-eks-irsa"
     },
     "tags_all": {
      "Name": "my_eks-eks-irsa"
     },
     "thumbprint_list": [
      "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
      "06b25927c42a721631c1efd9431e648fa62e1e39",
      "414a2060b738c635cc7fc243e052615592830c53",
      "aaa68bb211d468db8a8a19561ccba2e4043dcc80"
     ],
     "url": "oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181"
    },
    "after_sensitive": {
     "client_id_list": [
      false
     ],
     "tags": {},
     "tags_all": {},
     "thumbprint_list": [
      false,
      false,
      false,
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181",
     "client_id_list": [
      "sts.amazonaws.com"
     ],
     "id": "arn:aws:iam::086603201384:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181",
     "tags": {
      "Name": "my_eks-eks-irsa"
     },
     "tags_all": {
      "Name": "my_eks-eks-irsa"
     },
     "thumbprint_list": [
      "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
      "06b25927c42a721631c1efd9431e648fa62e1e39",
      "414a2060b738c635cc7fc243e052615592830c53",
      "aaa68bb211d468db8a8a19561ccba2e4043dcc80"
     ],
     "url": "oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181"
    },
    "before_sensitive": {
     "client_id_list": [
      false
     ],
     "tags": {},
     "tags_all": {},
     "thumbprint_list": [
      false,
      false,
      false,
      false
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "oidc_provider",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_openid_connect_provider"
  },
  {
   "address": "module.eks.aws_iam_policy.cluster_encryption[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
     "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
     "id": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
     "name": "my_eks-cluster-ClusterEncryption20230929104256397900000016",
     "name_prefix": "my_eks-cluster-ClusterEncryption",
     "path": "/",
     "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06\"}],\"Version\":\"2012-10-17\"}",
     "policy_id": "ANPARIKPT7NUHJEFZEZ7Z",
     "tags": {},
     "tags_all": {}
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
     "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
     "id": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
     "name": "my_eks-cluster-ClusterEncryption20230929104256397900000016",
     "name_prefix": "my_eks-cluster-ClusterEncryption",
     "path": "/",
     "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06\"}],\"Version\":\"2012-10-17\"}",
     "policy_id": "ANPARIKPT7NUHJEFZEZ7Z",
     "tags": {},
     "tags_all": {}
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster_encryption",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_policy"
  },
  {
   "address": "module.eks.aws_iam_role.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:37Z",
     "description": "",
     "force_detach_policies": true,
     "id": "my_eks-cluster-20230929104236806800000001",
     "inline_policy": [
      {
       "name": "my_eks-cluster",
       "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
      }
     ],
     "managed_policy_arns": [
      "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
      "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
      "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
     ],
     "max_session_duration": 3600,
     "name": "my_eks-cluster-20230929104236806800000001",
     "name_prefix": "my_eks-cluster-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROARIKPT7NUOZFDMYB4I"
    },
    "after_sensitive": {
     "inline_policy": [
      {}
     ],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:37Z",
     "description": "",
     "force_detach_policies": true,
     "id": "my_eks-cluster-20230929104236806800000001",
     "inline_policy": [
      {
       "name": "my_eks-cluster",
       "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
      }
     ],
     "managed_policy_arns": [
      "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
      "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
      "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
     ],
     "max_session_duration": 3600,
     "name": "my_eks-cluster-20230929104236806800000001",
     "name_prefix": "my_eks-cluster-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROARIKPT7NUOZFDMYB4I"
    },
    "before_sensitive": {
     "inline_policy": [
      {}
     ],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "my_eks-cluster-20230929104236806800000001-20230929104257056100000017",
     "policy_arn": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
     "role": "my_eks-cluster-20230929104236806800000001"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "my_eks-cluster-20230929104236806800000001-20230929104257056100000017",
     "policy_arn": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
     "role": "my_eks-cluster-20230929104236806800000001"
    },
    "before_sensitive": {}
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster_encryption",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.aws_iam_role_policy_attachment.this[\"AmazonEKSClusterPolicy\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "my_eks-cluster-20230929104236806800000001-2023092910423838790000000c",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
     "role": "my_eks-cluster-20230929104236806800000001"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "my_eks-cluster-20230929104236806800000001-2023092910423838790000000c",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
     "role": "my_eks-cluster-20230929104236806800000001"
    },
    "before_sensitive": {}
   },
   "index": "AmazonEKSClusterPolicy",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.aws_iam_role_policy_attachment.this[\"AmazonEKSVPCResourceController\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "my_eks-cluster-20230929104236806800000001-2023092910423838800000000d",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
     "role": "my_eks-cluster-20230929104236806800000001"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "my_eks-cluster-20230929104236806800000001-2023092910423838800000000d",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
     "role": "my_eks-cluster-20230929104236806800000001"
    },
    "before_sensitive": {}
   },
   "index": "AmazonEKSVPCResourceController",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.aws_security_group.cluster[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-00d0fd8acde68f1c9",
     "description": "EKS cluster security group",
     "egress": [],
     "id": "sg-00d0fd8acde68f1c9",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Node groups to cluster API",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0f13c4ac5030c4c04"
       ],
       "self": false,
       "to_port": 443
      }
     ],
     "name": "my_eks-cluster-2023092910424951780000000f",
     "name_prefix": "my_eks-cluster-",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "my_eks-cluster"
     },
     "tags_all": {
      "Name": "my_eks-cluster"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "egress": [],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-00d0fd8acde68f1c9",
     "description": "EKS cluster security group",
     "egress": [],
     "id": "sg-00d0fd8acde68f1c9",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Node groups to cluster API",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0f13c4ac5030c4c04"
       ],
       "self": false,
       "to_port": 443
      }
     ],
     "name": "my_eks-cluster-2023092910424951780000000f",
     "name_prefix": "my_eks-cluster-",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "my_eks-cluster"
     },
     "tags_all": {
      "Name": "my_eks-cluster"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "egress": [],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.eks.aws_security_group.node[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0f13c4ac5030c4c04",
     "description": "EKS node shared security group",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Allow all egress",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [],
       "self": false,
       "to_port": 0
      }
     ],
     "id": "sg-0f13c4ac5030c4c04",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Cluster API to node 4443/tcp webhook",
       "from_port": 4443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 4443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node 6443/tcp webhook",
       "from_port": 6443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 6443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node 8443/tcp webhook",
       "from_port": 8443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 8443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node 9443/tcp webhook",
       "from_port": 9443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 9443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node groups",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node kubelets",
       "from_port": 10250,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 10250
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS UDP",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node ingress on ephemeral ports",
       "from_port": 1025,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 65535
      }
     ],
     "name": "my_eks-node-2023092910424951710000000e",
     "name_prefix": "my_eks-node-",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "my_eks-node",
      "kubernetes.io/cluster/my_eks": "owned"
     },
     "tags_all": {
      "Name": "my_eks-node",
      "kubernetes.io/cluster/my_eks": "owned"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0f13c4ac5030c4c04",
     "description": "EKS node shared security group",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Allow all egress",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [],
       "self": false,
       "to_port": 0
      }
     ],
     "id": "sg-0f13c4ac5030c4c04",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Cluster API to node 4443/tcp webhook",
       "from_port": 4443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 4443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node 6443/tcp webhook",
       "from_port": 6443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 6443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node 8443/tcp webhook",
       "from_port": 8443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 8443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node 9443/tcp webhook",
       "from_port": 9443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 9443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node groups",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node kubelets",
       "from_port": 10250,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 10250
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS UDP",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node ingress on ephemeral ports",
       "from_port": 1025,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 65535
      }
     ],
     "name": "my_eks-node-2023092910424951710000000e",
     "name_prefix": "my_eks-node-",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "my_eks-node",
      "kubernetes.io/cluster/my_eks": "owned"
     },
     "tags_all": {
      "Name": "my_eks-node",
      "kubernetes.io/cluster/my_eks": "owned"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node groups to cluster API",
     "from_port": 443,
     "id": "sgrule-2141954177",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "tcp",
     "security_group_id": "sg-00d0fd8acde68f1c9",
     "security_group_rule_id": "sgr-0f76f48db4e731eac",
     "self": false,
     "source_security_group_id": "sg-0f13c4ac5030c4c04",
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node groups to cluster API",
     "from_port": 443,
     "id": "sgrule-2141954177",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "tcp",
     "security_group_id": "sg-00d0fd8acde68f1c9",
     "security_group_rule_id": "sgr-0f76f48db4e731eac",
     "self": false,
     "source_security_group_id": "sg-0f13c4ac5030c4c04",
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "before_sensitive": {}
   },
   "index": "ingress_nodes_443",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_all\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Allow all egress",
     "from_port": 0,
     "id": "sgrule-1823995722",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "-1",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-0d72b98f125f3f6bf",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 0,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Allow all egress",
     "from_port": 0,
     "id": "sgrule-1823995722",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "-1",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-0d72b98f125f3f6bf",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 0,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    }
   },
   "index": "egress_all",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Cluster API to node groups",
     "from_port": 443,
     "id": "sgrule-1210006692",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-0440ab05e32f1ca9c",
     "self": false,
     "source_security_group_id": "sg-00d0fd8acde68f1c9",
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Cluster API to node groups",
     "from_port": 443,
     "id": "sgrule-1210006692",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-0440ab05e32f1ca9c",
     "self": false,
     "source_security_group_id": "sg-00d0fd8acde68f1c9",
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_cluster_443",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_4443_webhook\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Cluster API to node 4443/tcp webhook",
     "from_port": 4443,
     "id": "sgrule-3728605025",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-08b3dbe0ab8f7bd73",
     "self": false,
     "source_security_group_id": "sg-00d0fd8acde68f1c9",
     "timeouts": null,
     "to_port": 4443,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Cluster API to node 4443/tcp webhook",
     "from_port": 4443,
     "id": "sgrule-3728605025",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-08b3dbe0ab8f7bd73",
     "self": false,
     "source_security_group_id": "sg-00d0fd8acde68f1c9",
     "timeouts": null,
     "to_port": 4443,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_cluster_4443_webhook",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_6443_webhook\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Cluster API to node 6443/tcp webhook",
     "from_port": 6443,
     "id": "sgrule-394238199",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-0e448cc2458bf5818",
     "self": false,
     "source_security_group_id": "sg-00d0fd8acde68f1c9",
     "timeouts": null,
     "to_port": 6443,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Cluster API to node 6443/tcp webhook",
     "from_port": 6443,
     "id": "sgrule-394238199",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-0e448cc2458bf5818",
     "self": false,
     "source_security_group_id": "sg-00d0fd8acde68f1c9",
     "timeouts": null,
     "to_port": 6443,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_cluster_6443_webhook",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_8443_webhook\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Cluster API to node 8443/tcp webhook",
     "from_port": 8443,
     "id": "sgrule-69444822",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-002cb5237c4a4d6b0",
     "self": false,
     "source_security_group_id": "sg-00d0fd8acde68f1c9",
     "timeouts": null,
     "to_port": 8443,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Cluster API to node 8443/tcp webhook",
     "from_port": 8443,
     "id": "sgrule-69444822",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-002cb5237c4a4d6b0",
     "self": false,
     "source_security_group_id": "sg-00d0fd8acde68f1c9",
     "timeouts": null,
     "to_port": 8443,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_cluster_8443_webhook",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_9443_webhook\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Cluster API to node 9443/tcp webhook",
     "from_port": 9443,
     "id": "sgrule-1619171101",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-0eab215cd2eebc086",
     "self": false,
     "source_security_group_id": "sg-00d0fd8acde68f1c9",
     "timeouts": null,
     "to_port": 9443,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Cluster API to node 9443/tcp webhook",
     "from_port": 9443,
     "id": "sgrule-1619171101",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-0eab215cd2eebc086",
     "self": false,
     "source_security_group_id": "sg-00d0fd8acde68f1c9",
     "timeouts": null,
     "to_port": 9443,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_cluster_9443_webhook",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Cluster API to node kubelets",
     "from_port": 10250,
     "id": "sgrule-3518697164",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-0f767af673b86bd16",
     "self": false,
     "source_security_group_id": "sg-00d0fd8acde68f1c9",
     "timeouts": null,
     "to_port": 10250,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Cluster API to node kubelets",
     "from_port": 10250,
     "id": "sgrule-3518697164",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-0f767af673b86bd16",
     "self": false,
     "source_security_group_id": "sg-00d0fd8acde68f1c9",
     "timeouts": null,
     "to_port": 10250,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_cluster_kubelet",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_nodes_ephemeral\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node to node ingress on ephemeral ports",
     "from_port": 1025,
     "id": "sgrule-3386777945",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-07de3bda1d620abf9",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 65535,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node to node ingress on ephemeral ports",
     "from_port": 1025,
     "id": "sgrule-3386777945",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-07de3bda1d620abf9",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 65535,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_nodes_ephemeral",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-1630413796",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-06f9b4c421cc23b1a",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-1630413796",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-06f9b4c421cc23b1a",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_self_coredns_tcp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS UDP",
     "from_port": 53,
     "id": "sgrule-3312549899",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-0b58988450f66bfea",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS UDP",
     "from_port": 53,
     "id": "sgrule-3312549899",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-0f13c4ac5030c4c04",
     "security_group_rule_id": "sgr-0b58988450f66bfea",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_self_coredns_udp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.time_sleep.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "create_duration": "30s",
     "destroy_duration": null,
     "id": "2023-09-29T11:06:31Z",
     "triggers": {
      "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJUXQreUFNWWhXSlV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpBNU1qa3hNRFF6TWpaYUZ3MHpNekE1TWpZeE1EUTRNalphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURNL2V0OTg1Y1JSaHd6Q3U1emxSb3dzQ0dJR1FxUnk0VndJYVk1M2Z4Z25YKytxenZ0c2xMb1RSQTAKdVA4YktNb2J3RmhzYkRsSm5aSHkyUS9oRmZKRjVhWWhDZjMzYy8vOGNsVEhGYVZKN2l5RUJZODJZUG81M1psQQpBeUlhZ25VNkdTZ21qbGF6Y2hyOTFsdUdjK21rV0pISjZxem9KMU5vNUp3cnhmNElSKzN2bS9GZmZzT01yaEloCi9jT044c0U3MDhOSEhjODArU0N0ODYwcDJqOGpjdDR2NHAyNmFZd0E0YmZCUUR0NTMyY09QU1pPdzRsQUZia28KM0lhdGlNQnZyV1hJSmFUZFNkanlxUEpwV0hmUThscFFNTEEvb0xSNi9DbzRNVGt2R2RoaXNzRWw2elV2aUMvTQpnTnRkVXhPSjNnMkxoRmZobE9kSTZRRWd6L3haQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTZEUwUmdRVW0xM0dPV2JVS3EvQWpvU1dPbUxqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPUFRsNm52cQpDNzg5aFRSRDRNNW5XSG92L295MVlUbWdJTlpXWmVScmhLRnpXL2FrdEZYc1RCcmUweEdIUkJnU1ByME9VUUFDCndpczYxaVlCcnRMSThmZHZVMmRrZThhOHB2NW9JcGh4bmtlYUJkWGZHOEhJL3FleVhJTlBKNkxMOWhKOXF5QTgKRGpPRU9uWlIxOXg5R1ROczBnOVJzR3J1cXpTZGQ1Q1Q2TGNNdnZIZlZjaUQ5VkkraHZYdno3WGQ3dlJjTHpoeQprQTl1cUpmTnMzaDI4cDROdm45MGtoQlV2VlQ0NmkvMTdud0ZZZWRUcmlCamJCc3J0L0lXOUVSdCtYb1ZnWGJCCmp5Vzg2d0Q4amxwcG95NFNsQWFIWkY5dnFwK0NpajRGSVZGb2VXV0h1ZU1acnRtUE9WOHJhU0o1R25IR1ZTTTQKQUxUd2M4a0ZCY2NxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
      "cluster_endpoint": "https://B55713EFAAFA43A934348AD6A9CFC181.gr7.us-east-1.eks.amazonaws.com",
      "cluster_name": "my_eks",
      "cluster_version": "1.28"
     }
    },
    "after_sensitive": {
     "triggers": {}
    },
    "after_unknown": {},
    "before": {
     "create_duration": "30s",
     "destroy_duration": null,
     "id": "2023-09-29T11:06:31Z",
     "triggers": {
      "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJUXQreUFNWWhXSlV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpBNU1qa3hNRFF6TWpaYUZ3MHpNekE1TWpZeE1EUTRNalphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURNL2V0OTg1Y1JSaHd6Q3U1emxSb3dzQ0dJR1FxUnk0VndJYVk1M2Z4Z25YKytxenZ0c2xMb1RSQTAKdVA4YktNb2J3RmhzYkRsSm5aSHkyUS9oRmZKRjVhWWhDZjMzYy8vOGNsVEhGYVZKN2l5RUJZODJZUG81M1psQQpBeUlhZ25VNkdTZ21qbGF6Y2hyOTFsdUdjK21rV0pISjZxem9KMU5vNUp3cnhmNElSKzN2bS9GZmZzT01yaEloCi9jT044c0U3MDhOSEhjODArU0N0ODYwcDJqOGpjdDR2NHAyNmFZd0E0YmZCUUR0NTMyY09QU1pPdzRsQUZia28KM0lhdGlNQnZyV1hJSmFUZFNkanlxUEpwV0hmUThscFFNTEEvb0xSNi9DbzRNVGt2R2RoaXNzRWw2elV2aUMvTQpnTnRkVXhPSjNnMkxoRmZobE9kSTZRRWd6L3haQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTZEUwUmdRVW0xM0dPV2JVS3EvQWpvU1dPbUxqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPUFRsNm52cQpDNzg5aFRSRDRNNW5XSG92L295MVlUbWdJTlpXWmVScmhLRnpXL2FrdEZYc1RCcmUweEdIUkJnU1ByME9VUUFDCndpczYxaVlCcnRMSThmZHZVMmRrZThhOHB2NW9JcGh4bmtlYUJkWGZHOEhJL3FleVhJTlBKNkxMOWhKOXF5QTgKRGpPRU9uWlIxOXg5R1ROczBnOVJzR3J1cXpTZGQ1Q1Q2TGNNdnZIZlZjaUQ5VkkraHZYdno3WGQ3dlJjTHpoeQprQTl1cUpmTnMzaDI4cDROdm45MGtoQlV2VlQ0NmkvMTdud0ZZZWRUcmlCamJCc3J0L0lXOUVSdCtYb1ZnWGJCCmp5Vzg2d0Q4amxwcG95NFNsQWFIWkY5dnFwK0NpajRGSVZGb2VXV0h1ZU1acnRtUE9WOHJhU0o1R25IR1ZTTTQKQUxUd2M4a0ZCY2NxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
      "cluster_endpoint": "https://B55713EFAAFA43A934348AD6A9CFC181.gr7.us-east-1.eks.amazonaws.com",
      "cluster_name": "my_eks",
      "cluster_version": "1.28"
     }
    },
    "before_sensitive": {
     "triggers": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/time",
   "type": "time_sleep"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_eks_node_group.this[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "ami_type": "AL2_x86_64",
     "capacity_type": "ON_DEMAND",
     "cluster_name": "my_eks",
     "force_update_version": null,
     "instance_types": [
      "t2.micro"
     ],
     "labels": null,
     "launch_template": [
      {
       "id": "lt-0cbad37c3cd6534eb",
       "version": "1"
      }
     ],
     "node_group_name_prefix": "ng1-",
     "node_role_arn": "arn:aws:iam::086603201384:role/ng1-eks-node-group-20230929104251899300000012",
     "remote_access": [],
     "scaling_config": [
      {
       "desired_size": 1,
       "max_size": 3,
       "min_size": 1
      }
     ],
     "subnet_ids": [
      "subnet-01e25e0c76c6457f6",
      "subnet-0465084bc667c4897"
     ],
     "tags": {
      "Name": "ng1"
     },
     "tags_all": {
      "Name": "ng1"
     },
     "taint": [],
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "update_config": [
      {
       "max_unavailable": null,
       "max_unavailable_percentage": 33
      }
     ],
     "version": "1.28"
    },
    "after_sensitive": {
     "instance_types": [
      false
     ],
     "launch_template": [
      {}
     ],
     "remote_access": [],
     "resources": [],
     "scaling_config": [
      {}
     ],
     "subnet_ids": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "taint": [],
     "timeouts": {},
     "update_config": [
      {}
     ]
    },
    "after_unknown": {
     "arn": true,
     "disk_size": true,
     "id": true,
     "instance_types": [
      false
     ],
     "launch_template": [
      {
       "name": true
      }
     ],
     "node_group_name": true,
     "release_version": true,
     "remote_access": [],
     "resources": true,
     "scaling_config": [
      {}
     ],
     "status": true,
     "subnet_ids": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "taint": [],
     "timeouts": {},
     "update_config": [
      {}
     ]
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"ng1\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eks_node_group"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:role/ng1-eks-node-group-20230929104251899300000012",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:52Z",
     "description": "EKS managed node group IAM role",
     "force_detach_policies": true,
     "id": "ng1-eks-node-group-20230929104251899300000012",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
     ],
     "max_session_duration": 3600,
     "name": "ng1-eks-node-group-20230929104251899300000012",
     "name_prefix": "ng1-eks-node-group-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {
      "Name": "ng1"
     },
     "tags_all": {
      "Name": "ng1"
     },
     "unique_id": "AROARIKPT7NUGPNRXKT2S"
    },
    "after_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:role/ng1-eks-node-group-20230929104251899300000012",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:52Z",
     "description": "EKS managed node group IAM role",
     "force_detach_policies": true,
     "id": "ng1-eks-node-group-20230929104251899300000012",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
     ],
     "max_session_duration": 3600,
     "name": "ng1-eks-node-group-20230929104251899300000012",
     "name_prefix": "ng1-eks-node-group-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {
      "Name": "ng1"
     },
     "tags_all": {
      "Name": "ng1"
     },
     "unique_id": "AROARIKPT7NUGPNRXKT2S"
    },
    "before_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"ng1\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ng1-eks-node-group-20230929104251899300000012-20230929104252569100000015",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
     "role": "ng1-eks-node-group-20230929104251899300000012"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ng1-eks-node-group-20230929104251899300000012-20230929104252569100000015",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
     "role": "ng1-eks-node-group-20230929104251899300000012"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"ng1\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ng1-eks-node-group-20230929104251899300000012-20230929104252567500000013",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
     "role": "ng1-eks-node-group-20230929104251899300000012"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ng1-eks-node-group-20230929104251899300000012-20230929104252567500000013",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
     "role": "ng1-eks-node-group-20230929104251899300000012"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"ng1\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ng1-eks-node-group-20230929104251899300000012-20230929104252567500000014",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
     "role": "ng1-eks-node-group-20230929104251899300000012"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ng1-eks-node-group-20230929104251899300000012-20230929104252567500000014",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
     "role": "ng1-eks-node-group-20230929104251899300000012"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"ng1\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_launch_template.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:launch-template/lt-0cbad37c3cd6534eb",
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "default_version": 1,
     "description": "Custom launch template for ng1 EKS managed node group",
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_optimized": "",
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "id": "lt-0cbad37c3cd6534eb",
     "image_id": "",
     "instance_initiated_shutdown_behavior": "",
     "instance_market_options": [],
     "instance_requirements": [],
     "instance_type": "",
     "kernel_id": "",
     "key_name": "",
     "latest_version": 1,
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_protocol_ipv6": "",
       "http_put_response_hop_limit": 2,
       "http_tokens": "required",
       "instance_metadata_tags": ""
      }
     ],
     "monitoring": [
      {
       "enabled": true
      }
     ],
     "name": "ng1-20230929110631595900000018",
     "name_prefix": "ng1-",
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "ram_disk_id": "",
     "security_group_names": [],
     "tag_specifications": [
      {
       "resource_type": "instance",
       "tags": {
        "Name": "ng1"
       }
      },
      {
       "resource_type": "network-interface",
       "tags": {
        "Name": "ng1"
       }
      },
      {
       "resource_type": "volume",
       "tags": {
        "Name": "ng1"
       }
      }
     ],
     "tags": {
      "Name": "ng1"
     },
     "tags_all": {
      "Name": "ng1"
     },
     "update_default_version": true,
     "user_data": "",
     "vpc_security_group_ids": [
      "sg-0f13c4ac5030c4c04"
     ]
    },
    "after_sensitive": {
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "instance_market_options": [],
     "instance_requirements": [],
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {}
     ],
     "monitoring": [
      {}
     ],
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "security_group_names": [],
     "tag_specifications": [
      {
       "tags": {}
      },
      {
       "tags": {}
      },
      {
       "tags": {}
      }
     ],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:launch-template/lt-0cbad37c3cd6534eb",
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "default_version": 1,
     "description": "Custom launch template for ng1 EKS managed node group",
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_optimized": "",
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "id": "lt-0cbad37c3cd6534eb",
     "image_id": "",
     "instance_initiated_shutdown_behavior": "",
     "instance_market_options": [],
     "instance_requirements": [],
     "instance_type": "",
     "kernel_id": "",
     "key_name": "",
     "latest_version": 1,
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_protocol_ipv6": "",
       "http_put_response_hop_limit": 2,
       "http_tokens": "required",
       "instance_metadata_tags": ""
      }
     ],
     "monitoring": [
      {
       "enabled": true
      }
     ],
     "name": "ng1-20230929110631595900000018",
     "name_prefix": "ng1-",
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "ram_disk_id": "",
     "security_group_names": [],
     "tag_specifications": [
      {
       "resource_type": "instance",
       "tags": {
        "Name": "ng1"
       }
      },
      {
       "resource_type": "network-interface",
       "tags": {
        "Name": "ng1"
       }
      },
      {
       "resource_type": "volume",
       "tags": {
        "Name": "ng1"
       }
      }
     ],
     "tags": {
      "Name": "ng1"
     },
     "tags_all": {
      "Name": "ng1"
     },
     "update_default_version": true,
     "user_data": "",
     "vpc_security_group_ids": [
      "sg-0f13c4ac5030c4c04"
     ]
    },
    "before_sensitive": {
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "instance_market_options": [],
     "instance_requirements": [],
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {}
     ],
     "monitoring": [
      {}
     ],
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "security_group_names": [],
     "tag_specifications": [
      {
       "tags": {}
      },
      {
       "tags": {}
      },
      {
       "tags": {}
      }
     ],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"ng1\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_launch_template"
  },
  {
   "address": "module.eks.module.kms.aws_kms_alias.this[\"cluster\"]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "name": "alias/eks/my_eks",
     "target_key_id": "6168a72a-a511-4a8f-8e36-dd2e7d08dc06"
    },
    "after_sensitive": {},
    "after_unknown": {
     "arn": true,
     "id": true,
     "name_prefix": true,
     "target_key_arn": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": "cluster",
   "mode": "managed",
   "module_address": "module.eks.module.kms",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_kms_alias"
  },
  {
   "address": "module.eks.module.kms.aws_kms_key.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
     "bypass_policy_lockout_safety_check": false,
     "custom_key_store_id": "",
     "customer_master_key_spec": "SYMMETRIC_DEFAULT",
     "deletion_window_in_days": null,
     "description": "my_eks cluster encryption key",
     "enable_key_rotation": true,
     "id": "6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
     "is_enabled": true,
     "key_id": "6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
     "key_usage": "ENCRYPT_DECRYPT",
     "multi_region": false,
     "policy": "{\"Statement\":[{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:Put*\",\"kms:List*\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::086603201384:root\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
     "tags": {},
     "tags_all": {}
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
     "bypass_policy_lockout_safety_check": false,
     "custom_key_store_id": "",
     "customer_master_key_spec": "SYMMETRIC_DEFAULT",
     "deletion_window_in_days": null,
     "description": "my_eks cluster encryption key",
     "enable_key_rotation": true,
     "id": "6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
     "is_enabled": true,
     "key_id": "6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
     "key_usage": "ENCRYPT_DECRYPT",
     "multi_region": false,
     "policy": "{\"Statement\":[{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:Put*\",\"kms:List*\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::086603201384:root\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
     "tags": {},
     "tags_all": {}
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.kms",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_kms_key"
  }
 ],
 "resource_drift": [
  {
   "address": "aws_alb_listener.listener",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "alpn_policy": null,
     "arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:listener/app/my-alb/eb45bc3180a981a9/0779fbbe7f27f8ef",
     "certificate_arn": null,
     "default_action": [
      {
       "authenticate_cognito": [],
       "authenticate_oidc": [],
       "fixed_response": [],
       "forward": [],
       "order": 1,
       "redirect": [],
       "target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:targetgroup/my-target-group/aa3de2f648ae5261",
       "type": "forward"
      }
     ],
     "id": "arn:aws:elasticloadbalancing:us-east-1:086603201384:listener/app/my-alb/eb45bc3180a981a9/0779fbbe7f27f8ef",
     "load_balancer_arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:loadbalancer/app/my-alb/eb45bc3180a981a9",
     "port": 80,
     "protocol": "HTTP",
     "ssl_policy": "",
     "tags": {},
     "tags_all": {},
     "timeouts": null
    },
    "after_sensitive": {
     "default_action": [
      {
       "authenticate_cognito": [],
       "authenticate_oidc": [],
       "fixed_response": [],
       "forward": [],
       "redirect": []
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "alpn_policy": null,
     "arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:listener/app/my-alb/eb45bc3180a981a9/0779fbbe7f27f8ef",
     "certificate_arn": null,
     "default_action": [
      {
       "authenticate_cognito": [],
       "authenticate_oidc": [],
       "fixed_response": [],
       "forward": [],
       "order": 1,
       "redirect": [],
       "target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:targetgroup/my-target-group/aa3de2f648ae5261",
       "type": "forward"
      }
     ],
     "id": "arn:aws:elasticloadbalancing:us-east-1:086603201384:listener/app/my-alb/eb45bc3180a981a9/0779fbbe7f27f8ef",
     "load_balancer_arn": "arn:aws:elasticloadbalancing:us-east-1:086603201384:loadbalancer/app/my-alb/eb45bc3180a981a9",
     "port": 80,
     "protocol": "HTTP",
     "ssl_policy": "",
     "tags": null,
     "tags_all": {},
     "timeouts": null
    },
    "before_sensitive": {
     "default_action": [
      {
       "authenticate_cognito": [],
       "authenticate_oidc": [],
       "fixed_response": [],
       "forward": [],
       "redirect": []
      }
     ],
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "listener",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_alb_listener"
  },
  {
   "address": "aws_iam_instance_profile.worker",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:instance-profile/ed-eks-worker-new-profile",
     "create_date": "2023-09-29T10:42:38Z",
     "id": "ed-eks-worker-new-profile",
     "name": "ed-eks-worker-new-profile",
     "name_prefix": "",
     "path": "/",
     "role": "ed-eks-worker",
     "tags": {},
     "tags_all": {},
     "unique_id": "AIPARIKPT7NUHINPW2D7C"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:instance-profile/ed-eks-worker-new-profile",
     "create_date": "2023-09-29T10:42:38Z",
     "id": "ed-eks-worker-new-profile",
     "name": "ed-eks-worker-new-profile",
     "name_prefix": "",
     "path": "/",
     "role": "ed-eks-worker",
     "tags": null,
     "tags_all": {},
     "unique_id": "AIPARIKPT7NUHINPW2D7C"
    },
    "before_sensitive": {
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "worker",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_instance_profile"
  },
  {
   "address": "aws_iam_policy.autoscaler",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
     "description": "",
     "id": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
     "name": "ed-eks-autoscaler-policy",
     "name_prefix": "",
     "path": "/",
     "policy": "{\"Statement\":[{\"Action\":[\"autoscaling:DescribeAutoScalingGroups\",\"autoscaling:DescribeAutoScalingInstances\",\"autoscaling:DescribeTags\",\"autoscaling:DescribeLaunchConfigurations\",\"autoscaling:SetDesiredCapacity\",\"autoscaling:TerminateInstanceInAutoScalingGroup\",\"ec2:DescribeLaunchTemplateVersions\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
     "policy_id": "ANPARIKPT7NUGHKEJTDWO",
     "tags": {},
     "tags_all": {}
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
     "description": "",
     "id": "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
     "name": "ed-eks-autoscaler-policy",
     "name_prefix": "",
     "path": "/",
     "policy": "{\"Statement\":[{\"Action\":[\"autoscaling:DescribeAutoScalingGroups\",\"autoscaling:DescribeAutoScalingInstances\",\"autoscaling:DescribeTags\",\"autoscaling:DescribeLaunchConfigurations\",\"autoscaling:SetDesiredCapacity\",\"autoscaling:TerminateInstanceInAutoScalingGroup\",\"ec2:DescribeLaunchTemplateVersions\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
     "policy_id": "ANPARIKPT7NUGHKEJTDWO",
     "tags": null,
     "tags_all": {}
    },
    "before_sensitive": {
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "autoscaler",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_policy"
  },
  {
   "address": "aws_iam_role.master",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:role/ed-eks-master",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:37Z",
     "description": "",
     "force_detach_policies": false,
     "id": "ed-eks-master",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
      "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
      "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
     ],
     "max_session_duration": 3600,
     "name": "ed-eks-master",
     "name_prefix": "",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROARIKPT7NUN4FMIWO54"
    },
    "after_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:role/ed-eks-master",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:37Z",
     "description": "",
     "force_detach_policies": false,
     "id": "ed-eks-master",
     "inline_policy": [],
     "managed_policy_arns": [],
     "max_session_duration": 3600,
     "name": "ed-eks-master",
     "name_prefix": "",
     "path": "/",
     "permissions_boundary": null,
     "tags": null,
     "tags_all": {},
     "unique_id": "AROARIKPT7NUN4FMIWO54"
    },
    "before_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [],
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "master",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "aws_iam_role.worker",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:role/ed-eks-worker",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:37Z",
     "description": "",
     "force_detach_policies": false,
     "id": "ed-eks-worker",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::086603201384:policy/ed-eks-autoscaler-policy",
      "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
      "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
      "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
     ],
     "max_session_duration": 3600,
     "name": "ed-eks-worker",
     "name_prefix": "",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROARIKPT7NUI4SEGKIQG"
    },
    "after_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false,
      false,
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:role/ed-eks-worker",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:37Z",
     "description": "",
     "force_detach_policies": false,
     "id": "ed-eks-worker",
     "inline_policy": [],
     "managed_policy_arns": [],
     "max_session_duration": 3600,
     "name": "ed-eks-worker",
     "name_prefix": "",
     "path": "/",
     "permissions_boundary": null,
     "tags": null,
     "tags_all": {},
     "unique_id": "AROARIKPT7NUI4SEGKIQG"
    },
    "before_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [],
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "worker",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "aws_nat_gateway.my_nat_gateway[\"10.0.1.0/24\"]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "allocation_id": "eipalloc-0e2344eeee7bf7c66",
     "association_id": "",
     "connectivity_type": "public",
     "id": "nat-03e78b1c85217d893",
     "network_interface_id": "eni-092dfcd2f42346fbe",
     "private_ip": "10.0.1.73",
     "public_ip": "",
     "secondary_allocation_ids": [],
     "secondary_private_ip_address_count": 0,
     "secondary_private_ip_addresses": [],
     "subnet_id": "subnet-01e25e0c76c6457f6",
     "tags": {
      "Name": "my-nat-gateway-10.0.1.0/24"
     },
     "tags_all": {
      "Name": "my-nat-gateway-10.0.1.0/24"
     },
     "timeouts": null
    },
    "after_sensitive": {
     "secondary_allocation_ids": [],
     "secondary_private_ip_addresses": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "allocation_id": "eipalloc-0e2344eeee7bf7c66",
     "association_id": null,
     "connectivity_type": "public",
     "id": "nat-03e78b1c85217d893",
     "network_interface_id": null,
     "private_ip": null,
     "public_ip": null,
     "secondary_allocation_ids": null,
     "secondary_private_ip_address_count": null,
     "secondary_private_ip_addresses": [],
     "subnet_id": "subnet-01e25e0c76c6457f6",
     "tags": {
      "Name": "my-nat-gateway-10.0.1.0/24"
     },
     "tags_all": {
      "Name": "my-nat-gateway-10.0.1.0/24"
     },
     "timeouts": null
    },
    "before_sensitive": {
     "secondary_private_ip_addresses": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": "10.0.1.0/24",
   "mode": "managed",
   "name": "my_nat_gateway",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_nat_gateway"
  },
  {
   "address": "aws_nat_gateway.my_nat_gateway[\"10.0.2.0/24\"]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "allocation_id": "eipalloc-0c88edee8e090ecc0",
     "association_id": "",
     "connectivity_type": "public",
     "id": "nat-0c5d82e41025f8bef",
     "network_interface_id": "eni-031bb2af97503e87f",
     "private_ip": "10.0.2.25",
     "public_ip": "",
     "secondary_allocation_ids": [],
     "secondary_private_ip_address_count": 0,
     "secondary_private_ip_addresses": [],
     "subnet_id": "subnet-0465084bc667c4897",
     "tags": {
      "Name": "my-nat-gateway-10.0.2.0/24"
     },
     "tags_all": {
      "Name": "my-nat-gateway-10.0.2.0/24"
     },
     "timeouts": null
    },
    "after_sensitive": {
     "secondary_allocation_ids": [],
     "secondary_private_ip_addresses": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "allocation_id": "eipalloc-0c88edee8e090ecc0",
     "association_id": null,
     "connectivity_type": "public",
     "id": "nat-0c5d82e41025f8bef",
     "network_interface_id": null,
     "private_ip": null,
     "public_ip": null,
     "secondary_allocation_ids": null,
     "secondary_private_ip_address_count": null,
     "secondary_private_ip_addresses": [],
     "subnet_id": "subnet-0465084bc667c4897",
     "tags": {
      "Name": "my-nat-gateway-10.0.2.0/24"
     },
     "tags_all": {
      "Name": "my-nat-gateway-10.0.2.0/24"
     },
     "timeouts": null
    },
    "before_sensitive": {
     "secondary_private_ip_addresses": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": "10.0.2.0/24",
   "mode": "managed",
   "name": "my_nat_gateway",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_nat_gateway"
  },
  {
   "address": "aws_route_table.private_route_table[\"10.0.1.0/24\"]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-0e192ea7ef9fe961a",
     "id": "rtb-0e192ea7ef9fe961a",
     "owner_id": "086603201384",
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-0e192ea7ef9fe961a",
     "id": "rtb-0e192ea7ef9fe961a",
     "owner_id": "086603201384",
     "propagating_vgws": [],
     "route": [],
     "tags": null,
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "propagating_vgws": [],
     "route": [],
     "tags_all": {}
    }
   },
   "index": "10.0.1.0/24",
   "mode": "managed",
   "name": "private_route_table",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table"
  },
  {
   "address": "aws_route_table.private_route_table[\"10.0.2.0/24\"]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-000ca2c4d8e86213c",
     "id": "rtb-000ca2c4d8e86213c",
     "owner_id": "086603201384",
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:route-table/rtb-000ca2c4d8e86213c",
     "id": "rtb-000ca2c4d8e86213c",
     "owner_id": "086603201384",
     "propagating_vgws": [],
     "route": [],
     "tags": null,
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "propagating_vgws": [],
     "route": [],
     "tags_all": {}
    }
   },
   "index": "10.0.2.0/24",
   "mode": "managed",
   "name": "private_route_table",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table"
  },
  {
   "address": "aws_security_group.eks_control_plane_sg",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0afd46c11f40daa43",
     "description": "Security group for the EKS control plane",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [],
       "self": false,
       "to_port": 0
      }
     ],
     "id": "sg-0afd46c11f40daa43",
     "ingress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [
        "sg-0a7a62279598f4465"
       ],
       "self": false,
       "to_port": 0
      }
     ],
     "name": "eks-control-plane-sg",
     "name_prefix": "",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "eks-control-plane-sg"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "eks-control-plane-sg"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0afd46c11f40daa43",
     "description": "Security group for the EKS control plane",
     "egress": [],
     "id": "sg-0afd46c11f40daa43",
     "ingress": [],
     "name": "eks-control-plane-sg",
     "name_prefix": "",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "eks-control-plane-sg"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "eks-control-plane-sg"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "egress": [],
     "ingress": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "eks_control_plane_sg",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "aws_security_group.worker_node_sg",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0a7a62279598f4465",
     "description": "Security group for EKS worker nodes",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [],
       "self": false,
       "to_port": 0
      }
     ],
     "id": "sg-0a7a62279598f4465",
     "ingress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "",
       "from_port": 22,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 22
      },
      {
       "cidr_blocks": [],
       "description": "",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [
        "sg-0afd46c11f40daa43"
       ],
       "self": false,
       "to_port": 0
      }
     ],
     "name": "eks-worker-node-sg",
     "name_prefix": "",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "eks-worker-node-sg"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "eks-worker-node-sg"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0a7a62279598f4465",
     "description": "Security group for EKS worker nodes",
     "egress": [],
     "id": "sg-0a7a62279598f4465",
     "ingress": [],
     "name": "eks-worker-node-sg",
     "name_prefix": "",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "eks-worker-node-sg"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "eks-worker-node-sg"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "egress": [],
     "ingress": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "worker_node_sg",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "aws_security_group_rule.control_plane_egress",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "",
     "from_port": 0,
     "id": "sgrule-3593713217",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0afd46c11f40daa43",
     "security_group_rule_id": "sgr-0b88db6161d47ef95",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 0,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": null,
     "from_port": 0,
     "id": "sgrule-3593713217",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0afd46c11f40daa43",
     "security_group_rule_id": "sgr-0b88db6161d47ef95",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 0,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ]
    }
   },
   "mode": "managed",
   "name": "control_plane_egress",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "aws_security_group_rule.control_plane_ingress",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "",
     "from_port": 443,
     "id": "sgrule-1651983592",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "tcp",
     "security_group_id": "sg-0afd46c11f40daa43",
     "security_group_rule_id": "sgr-09ebe54cbfe80346c",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": null,
     "from_port": 443,
     "id": "sgrule-1651983592",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "tcp",
     "security_group_id": "sg-0afd46c11f40daa43",
     "security_group_rule_id": "sgr-09ebe54cbfe80346c",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ]
    }
   },
   "mode": "managed",
   "name": "control_plane_ingress",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "aws_security_group_rule.control_plane_to_worker",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "",
     "from_port": 0,
     "id": "sgrule-1792465420",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0a7a62279598f4465",
     "security_group_rule_id": "sgr-06f5da83fac090767",
     "self": false,
     "source_security_group_id": "sg-0afd46c11f40daa43",
     "timeouts": null,
     "to_port": 0,
     "type": "ingress"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": null,
     "from_port": 0,
     "id": "sgrule-1792465420",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0a7a62279598f4465",
     "security_group_rule_id": "sgr-06f5da83fac090767",
     "self": false,
     "source_security_group_id": "sg-0afd46c11f40daa43",
     "timeouts": null,
     "to_port": 0,
     "type": "ingress"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "control_plane_to_worker",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "aws_security_group_rule.worker_egress",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "",
     "from_port": 0,
     "id": "sgrule-3630475665",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0a7a62279598f4465",
     "security_group_rule_id": "sgr-0e8f46dd8b087c27c",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 0,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": null,
     "from_port": 0,
     "id": "sgrule-3630475665",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0a7a62279598f4465",
     "security_group_rule_id": "sgr-0e8f46dd8b087c27c",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 0,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ]
    }
   },
   "mode": "managed",
   "name": "worker_egress",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "aws_security_group_rule.worker_ssh_ingress",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "",
     "from_port": 22,
     "id": "sgrule-1454391944",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "tcp",
     "security_group_id": "sg-0a7a62279598f4465",
     "security_group_rule_id": "sgr-0fb3682a9b443c31f",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 22,
     "type": "ingress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": null,
     "from_port": 22,
     "id": "sgrule-1454391944",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "tcp",
     "security_group_id": "sg-0a7a62279598f4465",
     "security_group_rule_id": "sgr-0fb3682a9b443c31f",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 22,
     "type": "ingress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ]
    }
   },
   "mode": "managed",
   "name": "worker_ssh_ingress",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "aws_security_group_rule.worker_to_control_plane",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "",
     "from_port": 0,
     "id": "sgrule-2431943090",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0afd46c11f40daa43",
     "security_group_rule_id": "sgr-039e0602c8f4745b3",
     "self": false,
     "source_security_group_id": "sg-0a7a62279598f4465",
     "timeouts": null,
     "to_port": 0,
     "type": "ingress"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": null,
     "from_port": 0,
     "id": "sgrule-2431943090",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "-1",
     "security_group_id": "sg-0afd46c11f40daa43",
     "security_group_rule_id": "sgr-039e0602c8f4745b3",
     "self": false,
     "source_security_group_id": "sg-0a7a62279598f4465",
     "timeouts": null,
     "to_port": 0,
     "type": "ingress"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "worker_to_control_plane",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "aws_subnet.private_subnet[\"10.0.1.0/24\"]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:subnet/subnet-01e25e0c76c6457f6",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1a",
     "availability_zone_id": "use1-az1",
     "cidr_block": "10.0.1.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_lni_at_device_index": 0,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-01e25e0c76c6457f6",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "086603201384",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:subnet/subnet-01e25e0c76c6457f6",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1a",
     "availability_zone_id": "use1-az1",
     "cidr_block": "10.0.1.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_lni_at_device_index": 0,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-01e25e0c76c6457f6",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "086603201384",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": null,
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "tags_all": {}
    }
   },
   "index": "10.0.1.0/24",
   "mode": "managed",
   "name": "private_subnet",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "aws_subnet.private_subnet[\"10.0.2.0/24\"]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:subnet/subnet-0465084bc667c4897",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1b",
     "availability_zone_id": "use1-az2",
     "cidr_block": "10.0.2.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_lni_at_device_index": 0,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0465084bc667c4897",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "086603201384",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:subnet/subnet-0465084bc667c4897",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1b",
     "availability_zone_id": "use1-az2",
     "cidr_block": "10.0.2.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_lni_at_device_index": 0,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0465084bc667c4897",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "086603201384",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": null,
     "tags_all": {},
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "tags_all": {}
    }
   },
   "index": "10.0.2.0/24",
   "mode": "managed",
   "name": "private_subnet",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.eks.aws_eks_cluster.this[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:eks:us-east-1:086603201384:cluster/my_eks",
     "certificate_authority": [
      {
       "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJUXQreUFNWWhXSlV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpBNU1qa3hNRFF6TWpaYUZ3MHpNekE1TWpZeE1EUTRNalphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURNL2V0OTg1Y1JSaHd6Q3U1emxSb3dzQ0dJR1FxUnk0VndJYVk1M2Z4Z25YKytxenZ0c2xMb1RSQTAKdVA4YktNb2J3RmhzYkRsSm5aSHkyUS9oRmZKRjVhWWhDZjMzYy8vOGNsVEhGYVZKN2l5RUJZODJZUG81M1psQQpBeUlhZ25VNkdTZ21qbGF6Y2hyOTFsdUdjK21rV0pISjZxem9KMU5vNUp3cnhmNElSKzN2bS9GZmZzT01yaEloCi9jT044c0U3MDhOSEhjODArU0N0ODYwcDJqOGpjdDR2NHAyNmFZd0E0YmZCUUR0NTMyY09QU1pPdzRsQUZia28KM0lhdGlNQnZyV1hJSmFUZFNkanlxUEpwV0hmUThscFFNTEEvb0xSNi9DbzRNVGt2R2RoaXNzRWw2elV2aUMvTQpnTnRkVXhPSjNnMkxoRmZobE9kSTZRRWd6L3haQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTZEUwUmdRVW0xM0dPV2JVS3EvQWpvU1dPbUxqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPUFRsNm52cQpDNzg5aFRSRDRNNW5XSG92L295MVlUbWdJTlpXWmVScmhLRnpXL2FrdEZYc1RCcmUweEdIUkJnU1ByME9VUUFDCndpczYxaVlCcnRMSThmZHZVMmRrZThhOHB2NW9JcGh4bmtlYUJkWGZHOEhJL3FleVhJTlBKNkxMOWhKOXF5QTgKRGpPRU9uWlIxOXg5R1ROczBnOVJzR3J1cXpTZGQ1Q1Q2TGNNdnZIZlZjaUQ5VkkraHZYdno3WGQ3dlJjTHpoeQprQTl1cUpmTnMzaDI4cDROdm45MGtoQlV2VlQ0NmkvMTdud0ZZZWRUcmlCamJCc3J0L0lXOUVSdCtYb1ZnWGJCCmp5Vzg2d0Q4amxwcG95NFNsQWFIWkY5dnFwK0NpajRGSVZGb2VXV0h1ZU1acnRtUE9WOHJhU0o1R25IR1ZTTTQKQUxUd2M4a0ZCY2NxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      }
     ],
     "cluster_id": null,
     "created_at": "2023-09-29 10:43:01.311 +0000 UTC",
     "enabled_cluster_log_types": [
      "api",
      "audit",
      "authenticator"
     ],
     "encryption_config": [
      {
       "provider": [
        {
         "key_arn": "arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06"
        }
       ],
       "resources": [
        "secrets"
       ]
      }
     ],
     "endpoint": "https://B55713EFAAFA43A934348AD6A9CFC181.gr7.us-east-1.eks.amazonaws.com",
     "id": "my_eks",
     "identity": [
      {
       "oidc": [
        {
         "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181"
        }
       ]
      }
     ],
     "kubernetes_network_config": [
      {
       "ip_family": "ipv4",
       "service_ipv4_cidr": "172.20.0.0/16",
       "service_ipv6_cidr": ""
      }
     ],
     "name": "my_eks",
     "outpost_config": [],
     "platform_version": "eks.1",
     "role_arn": "arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001",
     "status": "ACTIVE",
     "tags": {},
     "tags_all": {},
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "version": "1.28",
     "vpc_config": [
      {
       "cluster_security_group_id": "sg-099854db6bbb6d7fb",
       "endpoint_private_access": true,
       "endpoint_public_access": false,
       "public_access_cidrs": [
        "0.0.0.0/0"
       ],
       "security_group_ids": [
        "sg-00d0fd8acde68f1c9"
       ],
       "subnet_ids": [
        "subnet-01e25e0c76c6457f6",
        "subnet-0465084bc667c4897"
       ],
       "vpc_id": "vpc-00de26259c65152d4"
      }
     ]
    },
    "after_sensitive": {
     "certificate_authority": [
      {}
     ],
     "enabled_cluster_log_types": [
      false,
      false,
      false
     ],
     "encryption_config": [
      {
       "provider": [
        {}
       ],
       "resources": [
        false
       ]
      }
     ],
     "identity": [
      {
       "oidc": [
        {}
       ]
      }
     ],
     "kubernetes_network_config": [
      {}
     ],
     "outpost_config": [],
     "tags": {},
     "tags_all": {},
     "timeouts": {},
     "vpc_config": [
      {
       "public_access_cidrs": [
        false
       ],
       "security_group_ids": [
        false
       ],
       "subnet_ids": [
        false,
        false
       ]
      }
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:eks:us-east-1:086603201384:cluster/my_eks",
     "certificate_authority": [
      {
       "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJUXQreUFNWWhXSlV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpBNU1qa3hNRFF6TWpaYUZ3MHpNekE1TWpZeE1EUTRNalphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURNL2V0OTg1Y1JSaHd6Q3U1emxSb3dzQ0dJR1FxUnk0VndJYVk1M2Z4Z25YKytxenZ0c2xMb1RSQTAKdVA4YktNb2J3RmhzYkRsSm5aSHkyUS9oRmZKRjVhWWhDZjMzYy8vOGNsVEhGYVZKN2l5RUJZODJZUG81M1psQQpBeUlhZ25VNkdTZ21qbGF6Y2hyOTFsdUdjK21rV0pISjZxem9KMU5vNUp3cnhmNElSKzN2bS9GZmZzT01yaEloCi9jT044c0U3MDhOSEhjODArU0N0ODYwcDJqOGpjdDR2NHAyNmFZd0E0YmZCUUR0NTMyY09QU1pPdzRsQUZia28KM0lhdGlNQnZyV1hJSmFUZFNkanlxUEpwV0hmUThscFFNTEEvb0xSNi9DbzRNVGt2R2RoaXNzRWw2elV2aUMvTQpnTnRkVXhPSjNnMkxoRmZobE9kSTZRRWd6L3haQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTZEUwUmdRVW0xM0dPV2JVS3EvQWpvU1dPbUxqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPUFRsNm52cQpDNzg5aFRSRDRNNW5XSG92L295MVlUbWdJTlpXWmVScmhLRnpXL2FrdEZYc1RCcmUweEdIUkJnU1ByME9VUUFDCndpczYxaVlCcnRMSThmZHZVMmRrZThhOHB2NW9JcGh4bmtlYUJkWGZHOEhJL3FleVhJTlBKNkxMOWhKOXF5QTgKRGpPRU9uWlIxOXg5R1ROczBnOVJzR3J1cXpTZGQ1Q1Q2TGNNdnZIZlZjaUQ5VkkraHZYdno3WGQ3dlJjTHpoeQprQTl1cUpmTnMzaDI4cDROdm45MGtoQlV2VlQ0NmkvMTdud0ZZZWRUcmlCamJCc3J0L0lXOUVSdCtYb1ZnWGJCCmp5Vzg2d0Q4amxwcG95NFNsQWFIWkY5dnFwK0NpajRGSVZGb2VXV0h1ZU1acnRtUE9WOHJhU0o1R25IR1ZTTTQKQUxUd2M4a0ZCY2NxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      }
     ],
     "cluster_id": null,
     "created_at": "2023-09-29 10:43:01.311 +0000 UTC",
     "enabled_cluster_log_types": [
      "api",
      "audit",
      "authenticator"
     ],
     "encryption_config": [
      {
       "provider": [
        {
         "key_arn": "arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06"
        }
       ],
       "resources": [
        "secrets"
       ]
      }
     ],
     "endpoint": "https://B55713EFAAFA43A934348AD6A9CFC181.gr7.us-east-1.eks.amazonaws.com",
     "id": "my_eks",
     "identity": [
      {
       "oidc": [
        {
         "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/B55713EFAAFA43A934348AD6A9CFC181"
        }
       ]
      }
     ],
     "kubernetes_network_config": [
      {
       "ip_family": "ipv4",
       "service_ipv4_cidr": "172.20.0.0/16",
       "service_ipv6_cidr": ""
      }
     ],
     "name": "my_eks",
     "outpost_config": [],
     "platform_version": "eks.1",
     "role_arn": "arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001",
     "status": "ACTIVE",
     "tags": null,
     "tags_all": {},
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "version": "1.28",
     "vpc_config": [
      {
       "cluster_security_group_id": "sg-099854db6bbb6d7fb",
       "endpoint_private_access": true,
       "endpoint_public_access": false,
       "public_access_cidrs": [
        "0.0.0.0/0"
       ],
       "security_group_ids": [
        "sg-00d0fd8acde68f1c9"
       ],
       "subnet_ids": [
        "subnet-01e25e0c76c6457f6",
        "subnet-0465084bc667c4897"
       ],
       "vpc_id": "vpc-00de26259c65152d4"
      }
     ]
    },
    "before_sensitive": {
     "certificate_authority": [
      {}
     ],
     "enabled_cluster_log_types": [
      false,
      false,
      false
     ],
     "encryption_config": [
      {
       "provider": [
        {}
       ],
       "resources": [
        false
       ]
      }
     ],
     "identity": [
      {
       "oidc": [
        {}
       ]
      }
     ],
     "kubernetes_network_config": [
      {}
     ],
     "outpost_config": [],
     "tags_all": {},
     "timeouts": {},
     "vpc_config": [
      {
       "public_access_cidrs": [
        false
       ],
       "security_group_ids": [
        false
       ],
       "subnet_ids": [
        false,
        false
       ]
      }
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eks_cluster"
  },
  {
   "address": "module.eks.aws_iam_policy.cluster_encryption[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
     "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
     "id": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
     "name": "my_eks-cluster-ClusterEncryption20230929104256397900000016",
     "name_prefix": "my_eks-cluster-ClusterEncryption",
     "path": "/",
     "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06\"}],\"Version\":\"2012-10-17\"}",
     "policy_id": "ANPARIKPT7NUHJEFZEZ7Z",
     "tags": {},
     "tags_all": {}
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
     "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
     "id": "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
     "name": "my_eks-cluster-ClusterEncryption20230929104256397900000016",
     "name_prefix": "my_eks-cluster-ClusterEncryption",
     "path": "/",
     "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06\"}],\"Version\":\"2012-10-17\"}",
     "policy_id": "ANPARIKPT7NUHJEFZEZ7Z",
     "tags": null,
     "tags_all": {}
    },
    "before_sensitive": {
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster_encryption",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_policy"
  },
  {
   "address": "module.eks.aws_iam_role.this[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:37Z",
     "description": "",
     "force_detach_policies": true,
     "id": "my_eks-cluster-20230929104236806800000001",
     "inline_policy": [
      {
       "name": "my_eks-cluster",
       "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
      }
     ],
     "managed_policy_arns": [
      "arn:aws:iam::086603201384:policy/my_eks-cluster-ClusterEncryption20230929104256397900000016",
      "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
      "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
     ],
     "max_session_duration": 3600,
     "name": "my_eks-cluster-20230929104236806800000001",
     "name_prefix": "my_eks-cluster-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROARIKPT7NUOZFDMYB4I"
    },
    "after_sensitive": {
     "inline_policy": [
      {}
     ],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:37Z",
     "description": "",
     "force_detach_policies": true,
     "id": "my_eks-cluster-20230929104236806800000001",
     "inline_policy": [
      {
       "name": "my_eks-cluster",
       "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
      }
     ],
     "managed_policy_arns": [],
     "max_session_duration": 3600,
     "name": "my_eks-cluster-20230929104236806800000001",
     "name_prefix": "my_eks-cluster-",
     "path": "/",
     "permissions_boundary": null,
     "tags": null,
     "tags_all": {},
     "unique_id": "AROARIKPT7NUOZFDMYB4I"
    },
    "before_sensitive": {
     "inline_policy": [
      {}
     ],
     "managed_policy_arns": [],
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "module.eks.aws_security_group.cluster[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-00d0fd8acde68f1c9",
     "description": "EKS cluster security group",
     "egress": [],
     "id": "sg-00d0fd8acde68f1c9",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Node groups to cluster API",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0f13c4ac5030c4c04"
       ],
       "self": false,
       "to_port": 443
      }
     ],
     "name": "my_eks-cluster-2023092910424951780000000f",
     "name_prefix": "my_eks-cluster-",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "my_eks-cluster"
     },
     "tags_all": {
      "Name": "my_eks-cluster"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "egress": [],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-00d0fd8acde68f1c9",
     "description": "EKS cluster security group",
     "egress": [],
     "id": "sg-00d0fd8acde68f1c9",
     "ingress": [],
     "name": "my_eks-cluster-2023092910424951780000000f",
     "name_prefix": "my_eks-cluster-",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "my_eks-cluster"
     },
     "tags_all": {
      "Name": "my_eks-cluster"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "egress": [],
     "ingress": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.eks.aws_security_group.node[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0f13c4ac5030c4c04",
     "description": "EKS node shared security group",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Allow all egress",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [],
       "self": false,
       "to_port": 0
      }
     ],
     "id": "sg-0f13c4ac5030c4c04",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Cluster API to node 4443/tcp webhook",
       "from_port": 4443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 4443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node 6443/tcp webhook",
       "from_port": 6443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 6443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node 8443/tcp webhook",
       "from_port": 8443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 8443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node 9443/tcp webhook",
       "from_port": 9443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 9443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node groups",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node kubelets",
       "from_port": 10250,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-00d0fd8acde68f1c9"
       ],
       "self": false,
       "to_port": 10250
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS UDP",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node ingress on ephemeral ports",
       "from_port": 1025,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 65535
      }
     ],
     "name": "my_eks-node-2023092910424951710000000e",
     "name_prefix": "my_eks-node-",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "my_eks-node",
      "kubernetes.io/cluster/my_eks": "owned"
     },
     "tags_all": {
      "Name": "my_eks-node",
      "kubernetes.io/cluster/my_eks": "owned"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:security-group/sg-0f13c4ac5030c4c04",
     "description": "EKS node shared security group",
     "egress": [],
     "id": "sg-0f13c4ac5030c4c04",
     "ingress": [],
     "name": "my_eks-node-2023092910424951710000000e",
     "name_prefix": "my_eks-node-",
     "owner_id": "086603201384",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "my_eks-node",
      "kubernetes.io/cluster/my_eks": "owned"
     },
     "tags_all": {
      "Name": "my_eks-node",
      "kubernetes.io/cluster/my_eks": "owned"
     },
     "timeouts": null,
     "vpc_id": "vpc-00de26259c65152d4"
    },
    "before_sensitive": {
     "egress": [],
     "ingress": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_iam_role.this[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:iam::086603201384:role/ng1-eks-node-group-20230929104251899300000012",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:52Z",
     "description": "EKS managed node group IAM role",
     "force_detach_policies": true,
     "id": "ng1-eks-node-group-20230929104251899300000012",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
     ],
     "max_session_duration": 3600,
     "name": "ng1-eks-node-group-20230929104251899300000012",
     "name_prefix": "ng1-eks-node-group-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {
      "Name": "ng1"
     },
     "tags_all": {
      "Name": "ng1"
     },
     "unique_id": "AROARIKPT7NUGPNRXKT2S"
    },
    "after_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::086603201384:role/ng1-eks-node-group-20230929104251899300000012",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-09-29T10:42:52Z",
     "description": "EKS managed node group IAM role",
     "force_detach_policies": true,
     "id": "ng1-eks-node-group-20230929104251899300000012",
     "inline_policy": [],
     "managed_policy_arns": [],
     "max_session_duration": 3600,
     "name": "ng1-eks-node-group-20230929104251899300000012",
     "name_prefix": "ng1-eks-node-group-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {
      "Name": "ng1"
     },
     "tags_all": {
      "Name": "ng1"
     },
     "unique_id": "AROARIKPT7NUGPNRXKT2S"
    },
    "before_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"ng1\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"ng1\"].aws_launch_template.this[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:launch-template/lt-0cbad37c3cd6534eb",
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "default_version": 1,
     "description": "Custom launch template for ng1 EKS managed node group",
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_optimized": "",
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "id": "lt-0cbad37c3cd6534eb",
     "image_id": "",
     "instance_initiated_shutdown_behavior": "",
     "instance_market_options": [],
     "instance_requirements": [],
     "instance_type": "",
     "kernel_id": "",
     "key_name": "",
     "latest_version": 1,
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_protocol_ipv6": "",
       "http_put_response_hop_limit": 2,
       "http_tokens": "required",
       "instance_metadata_tags": ""
      }
     ],
     "monitoring": [
      {
       "enabled": true
      }
     ],
     "name": "ng1-20230929110631595900000018",
     "name_prefix": "ng1-",
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "ram_disk_id": "",
     "security_group_names": [],
     "tag_specifications": [
      {
       "resource_type": "instance",
       "tags": {
        "Name": "ng1"
       }
      },
      {
       "resource_type": "network-interface",
       "tags": {
        "Name": "ng1"
       }
      },
      {
       "resource_type": "volume",
       "tags": {
        "Name": "ng1"
       }
      }
     ],
     "tags": {
      "Name": "ng1"
     },
     "tags_all": {
      "Name": "ng1"
     },
     "update_default_version": true,
     "user_data": "",
     "vpc_security_group_ids": [
      "sg-0f13c4ac5030c4c04"
     ]
    },
    "after_sensitive": {
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "instance_market_options": [],
     "instance_requirements": [],
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {}
     ],
     "monitoring": [
      {}
     ],
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "security_group_names": [],
     "tag_specifications": [
      {
       "tags": {}
      },
      {
       "tags": {}
      },
      {
       "tags": {}
      }
     ],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:086603201384:launch-template/lt-0cbad37c3cd6534eb",
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "default_version": 1,
     "description": "Custom launch template for ng1 EKS managed node group",
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_optimized": "",
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "id": "lt-0cbad37c3cd6534eb",
     "image_id": "",
     "instance_initiated_shutdown_behavior": "",
     "instance_market_options": [],
     "instance_requirements": [],
     "instance_type": "",
     "kernel_id": "",
     "key_name": "",
     "latest_version": 1,
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_protocol_ipv6": "",
       "http_put_response_hop_limit": 2,
       "http_tokens": "required",
       "instance_metadata_tags": ""
      }
     ],
     "monitoring": [
      {
       "enabled": true
      }
     ],
     "name": "ng1-20230929110631595900000018",
     "name_prefix": "ng1-",
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "ram_disk_id": "",
     "security_group_names": null,
     "tag_specifications": [
      {
       "resource_type": "instance",
       "tags": {
        "Name": "ng1"
       }
      },
      {
       "resource_type": "network-interface",
       "tags": {
        "Name": "ng1"
       }
      },
      {
       "resource_type": "volume",
       "tags": {
        "Name": "ng1"
       }
      }
     ],
     "tags": {
      "Name": "ng1"
     },
     "tags_all": {
      "Name": "ng1"
     },
     "update_default_version": true,
     "user_data": "",
     "vpc_security_group_ids": [
      "sg-0f13c4ac5030c4c04"
     ]
    },
    "before_sensitive": {
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "instance_market_options": [],
     "instance_requirements": [],
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {}
     ],
     "monitoring": [
      {}
     ],
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "tag_specifications": [
      {
       "tags": {}
      },
      {
       "tags": {}
      },
      {
       "tags": {}
      }
     ],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"ng1\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_launch_template"
  },
  {
   "address": "module.eks.module.kms.aws_kms_key.this[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
     "bypass_policy_lockout_safety_check": false,
     "custom_key_store_id": "",
     "customer_master_key_spec": "SYMMETRIC_DEFAULT",
     "deletion_window_in_days": null,
     "description": "my_eks cluster encryption key",
     "enable_key_rotation": true,
     "id": "6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
     "is_enabled": true,
     "key_id": "6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
     "key_usage": "ENCRYPT_DECRYPT",
     "multi_region": false,
     "policy": "{\"Statement\":[{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:Put*\",\"kms:List*\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::086603201384:root\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
     "tags": {},
     "tags_all": {}
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:kms:us-east-1:086603201384:key/6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
     "bypass_policy_lockout_safety_check": false,
     "custom_key_store_id": "",
     "customer_master_key_spec": "SYMMETRIC_DEFAULT",
     "deletion_window_in_days": null,
     "description": "my_eks cluster encryption key",
     "enable_key_rotation": true,
     "id": "6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
     "is_enabled": true,
     "key_id": "6168a72a-a511-4a8f-8e36-dd2e7d08dc06",
     "key_usage": "ENCRYPT_DECRYPT",
     "multi_region": false,
     "policy": "{\"Statement\":[{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:Put*\",\"kms:List*\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::086603201384:root\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::086603201384:role/my_eks-cluster-20230929104236806800000001\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
     "tags": null,
     "tags_all": {}
    },
    "before_sensitive": {
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.kms",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_kms_key"
  }
 ],
 "terraform_version": "1.5.7",
 "timestamp": "2023-09-29T11:16:00Z",
 "variables": {
  "capacity": {
   "value": [
    {
     "capacity_type": "SPOT",
     "desired_size": 1,
     "instance_types": [
      "t3.micro"
     ],
     "max_size": 2,
     "min_size": 1
    }
   ]
  },
  "cluster_name": {
   "value": "my_eks"
  },
  "ingress_rules": {
   "value": [
    {
     "description": "Allow TLS (HTTPS) inbound traffic from VPC",
     "from_port": 443,
     "protocol": "tcp",
     "to_port": 443
    },
    {
     "description": "Allow HTTP (HTTP) inbound traffic from VPC",
     "from_port": 80,
     "protocol": "tcp",
     "to_port": 80
    },
    {
     "description": "Allow custom port (8080) inbound traffic from VPC",
     "from_port": 8080,
     "protocol": "tcp",
     "to_port": 8080
    }
   ]
  },
  "namespaces": {
   "value": [
    "my_namespace"
   ]
  },
  "region": {
   "value": "us-east-1"
  },
  "subnets": {
   "value": [
    {
     "availability_zone": "us-east-1a",
     "cidr_block": "10.0.1.0/24"
    },
    {
     "availability_zone": "us-east-1b",
     "cidr_block": "10.0.2.0/24"
    }
   ]
  }
 }
}]